{"ast":null,"code":"\"use strict\";\n\nvar _slicedToArray = require(\"/home/lisk/doomonlisk/src/app/build/react-app/node_modules/@babel/runtime/helpers/slicedToArray\");\n\nvar _classCallCheck = require(\"/home/lisk/doomonlisk/src/app/build/react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/home/lisk/doomonlisk/src/app/build/react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.BufferMap = void 0;\n\nvar buffer_string_1 = require(\"./buffer_string\");\n\nvar cloneDeep = require(\"lodash.clonedeep\");\n\nvar BufferMap = /*#__PURE__*/function () {\n  function BufferMap(data) {\n    _classCallCheck(this, BufferMap);\n\n    this._data = {};\n    this._data = data !== null && data !== void 0 ? data : {};\n  }\n\n  _createClass(BufferMap, [{\n    key: \"size\",\n    get: function get() {\n      return Object.keys(this._data).length;\n    }\n  }, {\n    key: \"get\",\n    value: function get(key) {\n      return this._data[buffer_string_1.keyString(key)];\n    }\n  }, {\n    key: \"delete\",\n    value: function _delete(key) {\n      delete this._data[buffer_string_1.keyString(key)];\n    }\n  }, {\n    key: \"set\",\n    value: function set(key, value) {\n      this._data[buffer_string_1.keyString(key)] = value;\n    }\n  }, {\n    key: \"has\",\n    value: function has(key) {\n      return this._data[buffer_string_1.keyString(key)] !== undefined;\n    }\n  }, {\n    key: \"clone\",\n    value: function clone() {\n      return new BufferMap(cloneDeep(this._data));\n    }\n  }, {\n    key: \"entries\",\n    value: function entries() {\n      return Object.entries(this._data).map(function (_ref) {\n        var _ref2 = _slicedToArray(_ref, 2),\n            key = _ref2[0],\n            value = _ref2[1];\n\n        return [Buffer.from(key, 'binary'), value];\n      });\n    }\n  }, {\n    key: \"values\",\n    value: function values() {\n      return Object.values(this._data);\n    }\n  }]);\n\n  return BufferMap;\n}();\n\nexports.BufferMap = BufferMap;","map":{"version":3,"sources":["../../src/data_structures/buffer_map.ts"],"names":[],"mappings":";;;;;;;;;;;;;AAaA,IAAA,eAAA,GAAA,OAAA,CAAA,iBAAA,CAAA;;AAGA,IAAA,SAAA,GAAA,OAAA,CAAA,kBAAA,CAAA;;IAEa,S;AAGZ,qBAAmB,IAAnB,EAA0D;AAAA;;AAFlD,SAAA,KAAA,GAA0C,EAA1C;AAGP,SAAK,KAAL,GAAa,IAAI,KAAA,IAAJ,IAAA,IAAI,KAAA,KAAA,CAAJ,GAAA,IAAA,GAAQ,EAArB;AACA;;;;SACD,eAAe;AACd,aAAO,MAAM,CAAC,IAAP,CAAY,KAAK,KAAjB,EAAwB,MAA/B;AACA;;;WAEM,aAAI,GAAJ,EAAe;AACrB,aAAO,KAAK,KAAL,CAAW,eAAA,CAAA,SAAA,CAAU,GAAV,CAAX,CAAP;AACA;;;WAEM,iBAAO,GAAP,EAAkB;AACxB,aAAO,KAAK,KAAL,CAAW,eAAA,CAAA,SAAA,CAAU,GAAV,CAAX,CAAP;AACA;;;WAEM,aAAI,GAAJ,EAAiB,KAAjB,EAAyB;AAC/B,WAAK,KAAL,CAAW,eAAA,CAAA,SAAA,CAAU,GAAV,CAAX,IAA6B,KAA7B;AACA;;;WAEM,aAAI,GAAJ,EAAe;AACrB,aAAO,KAAK,KAAL,CAAW,eAAA,CAAA,SAAA,CAAU,GAAV,CAAX,MAA+B,SAAtC;AACA;;;WAEM,iBAAK;AACX,aAAO,IAAI,SAAJ,CAAc,SAAS,CAAC,KAAK,KAAN,CAAvB,CAAP;AACA;;;WAEM,mBAAO;AACb,aAAO,MAAM,CAAC,OAAP,CAAe,KAAK,KAApB,EAA2B,GAA3B,CAA+B;AAAA;AAAA,YAAE,GAAF;AAAA,YAAO,KAAP;;AAAA,eAAkB,CACvD,MAAM,CAAC,IAAP,CAAY,GAAZ,EAAiB,QAAjB,CADuD,EAEvD,KAFuD,CAAlB;AAAA,OAA/B,CAAP;AAIA;;;WAEM,kBAAM;AACZ,aAAO,MAAM,CAAC,MAAP,CAAc,KAAK,KAAnB,CAAP;AACA;;;;;;AAvCF,OAAA,CAAA,SAAA,GAAA,SAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BufferMap = void 0;\nconst buffer_string_1 = require(\"./buffer_string\");\nconst cloneDeep = require(\"lodash.clonedeep\");\nclass BufferMap {\n    constructor(data) {\n        this._data = {};\n        this._data = data !== null && data !== void 0 ? data : {};\n    }\n    get size() {\n        return Object.keys(this._data).length;\n    }\n    get(key) {\n        return this._data[buffer_string_1.keyString(key)];\n    }\n    delete(key) {\n        delete this._data[buffer_string_1.keyString(key)];\n    }\n    set(key, value) {\n        this._data[buffer_string_1.keyString(key)] = value;\n    }\n    has(key) {\n        return this._data[buffer_string_1.keyString(key)] !== undefined;\n    }\n    clone() {\n        return new BufferMap(cloneDeep(this._data));\n    }\n    entries() {\n        return Object.entries(this._data).map(([key, value]) => [\n            Buffer.from(key, 'binary'),\n            value,\n        ]);\n    }\n    values() {\n        return Object.values(this._data);\n    }\n}\nexports.BufferMap = BufferMap;\n//# sourceMappingURL=buffer_map.js.map"]},"metadata":{},"sourceType":"script"}