{"ast":null,"code":"\"use strict\";\n\nvar _objectSpread = require(\"/home/lisk/doomonlisk/src/app/build/react-app/node_modules/@babel/runtime/helpers/objectSpread2\");\n\nvar _regeneratorRuntime = require(\"/home/lisk/doomonlisk/src/app/build/react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _asyncToGenerator = require(\"/home/lisk/doomonlisk/src/app/build/react-app/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nvar _classCallCheck = require(\"/home/lisk/doomonlisk/src/app/build/react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/home/lisk/doomonlisk/src/app/build/react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.KVStore = void 0;\n\nvar fs = require(\"fs\");\n\nvar path = require(\"path\");\n\nvar debug_1 = require(\"debug\");\n\nvar levelup_1 = require(\"levelup\");\n\nvar rocksdb_1 = require(\"rocksdb\");\n\nvar errors_1 = require(\"./errors\");\n\nvar logger = debug_1.debug('db');\n\nvar KVStore = /*#__PURE__*/function () {\n  function KVStore(filePath) {\n    _classCallCheck(this, KVStore);\n\n    logger('opening file', {\n      filePath: filePath\n    });\n    var parentDir = path.resolve(path.join(filePath, '../'));\n\n    if (!fs.existsSync(parentDir)) {\n      throw new Error(\"\".concat(parentDir, \" does not exist\"));\n    }\n\n    this._db = levelup_1.default(rocksdb_1.default(filePath));\n  }\n\n  _createClass(KVStore, [{\n    key: \"close\",\n    value: function () {\n      var _close = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this._db.close();\n\n              case 2:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function close() {\n        return _close.apply(this, arguments);\n      }\n\n      return close;\n    }()\n  }, {\n    key: \"get\",\n    value: function () {\n      var _get = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(key) {\n        var result;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                logger('get', {\n                  key: key\n                });\n                _context2.prev = 1;\n                _context2.next = 4;\n                return this._db.get(key);\n\n              case 4:\n                result = _context2.sent;\n                return _context2.abrupt(\"return\", result);\n\n              case 8:\n                _context2.prev = 8;\n                _context2.t0 = _context2[\"catch\"](1);\n\n                if (!_context2.t0.notFound) {\n                  _context2.next = 12;\n                  break;\n                }\n\n                throw new errors_1.NotFoundError(key);\n\n              case 12:\n                throw _context2.t0;\n\n              case 13:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this, [[1, 8]]);\n      }));\n\n      function get(_x) {\n        return _get.apply(this, arguments);\n      }\n\n      return get;\n    }()\n  }, {\n    key: \"exists\",\n    value: function () {\n      var _exists = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(key) {\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.prev = 0;\n                logger('exists', {\n                  key: key\n                });\n                _context3.next = 4;\n                return this._db.get(key);\n\n              case 4:\n                return _context3.abrupt(\"return\", true);\n\n              case 7:\n                _context3.prev = 7;\n                _context3.t0 = _context3[\"catch\"](0);\n\n                if (!_context3.t0.notFound) {\n                  _context3.next = 11;\n                  break;\n                }\n\n                return _context3.abrupt(\"return\", false);\n\n              case 11:\n                throw _context3.t0;\n\n              case 12:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this, [[0, 7]]);\n      }));\n\n      function exists(_x2) {\n        return _exists.apply(this, arguments);\n      }\n\n      return exists;\n    }()\n  }, {\n    key: \"clear\",\n    value: function () {\n      var _clear = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(options) {\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.next = 2;\n                return this._db.clear(options);\n\n              case 2:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function clear(_x3) {\n        return _clear.apply(this, arguments);\n      }\n\n      return clear;\n    }()\n  }, {\n    key: \"put\",\n    value: function () {\n      var _put = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(key, val) {\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                logger('put', {\n                  key: key\n                });\n                _context5.next = 3;\n                return this._db.put(key, val);\n\n              case 3:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n\n      function put(_x4, _x5) {\n        return _put.apply(this, arguments);\n      }\n\n      return put;\n    }()\n  }, {\n    key: \"del\",\n    value: function () {\n      var _del = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6(key) {\n        return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                logger('del', {\n                  key: key\n                });\n                _context6.next = 3;\n                return this._db.del(key);\n\n              case 3:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, this);\n      }));\n\n      function del(_x6) {\n        return _del.apply(this, arguments);\n      }\n\n      return del;\n    }()\n  }, {\n    key: \"createReadStream\",\n    value: function createReadStream(options) {\n      logger('readStream', {\n        options: options\n      });\n      var updatedOption = options ? _objectSpread(_objectSpread({}, options), {}, {\n        keyAsBuffer: false\n      }) : {\n        keyAsBuffer: false\n      };\n      return this._db.createReadStream(updatedOption);\n    }\n  }, {\n    key: \"batch\",\n    value: function batch() {\n      return this._db.batch();\n    }\n  }]);\n\n  return KVStore;\n}();\n\nexports.KVStore = KVStore;","map":{"version":3,"sources":["../src/kv_store.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAaA,IAAA,EAAA,GAAA,OAAA,CAAA,IAAA,CAAA;;AACA,IAAA,IAAA,GAAA,OAAA,CAAA,MAAA,CAAA;;AACA,IAAA,OAAA,GAAA,OAAA,CAAA,OAAA,CAAA;;AACA,IAAA,SAAA,GAAA,OAAA,CAAA,SAAA,CAAA;;AACA,IAAA,SAAA,GAAA,OAAA,CAAA,SAAA,CAAA;;AACA,IAAA,QAAA,GAAA,OAAA,CAAA,UAAA,CAAA;;AAEA,IAAM,MAAM,GAAG,OAAA,CAAA,KAAA,CAAM,IAAN,CAAf;;IAyBa,O;AAGZ,mBAAmB,QAAnB,EAAmC;AAAA;;AAClC,IAAA,MAAM,CAAC,cAAD,EAAiB;AAAE,MAAA,QAAQ,EAAR;AAAF,KAAjB,CAAN;AACA,QAAM,SAAS,GAAG,IAAI,CAAC,OAAL,CAAa,IAAI,CAAC,IAAL,CAAU,QAAV,EAAoB,KAApB,CAAb,CAAlB;;AACA,QAAI,CAAC,EAAE,CAAC,UAAH,CAAc,SAAd,CAAL,EAA+B;AAC9B,YAAM,IAAI,KAAJ,WAAa,SAAb,qBAAN;AACA;;AACD,SAAK,GAAL,GAAW,SAAA,CAAA,OAAA,CAAQ,SAAA,CAAA,OAAA,CAAQ,QAAR,CAAR,CAAX;AACA;;;;;4EAEM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACA,KAAK,GAAL,CAAS,KAAT,EADA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;;;;;0EAIA,kBAAU,GAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACN,gBAAA,MAAM,CAAC,KAAD,EAAQ;AAAE,kBAAA,GAAG,EAAH;AAAF,iBAAR,CAAN;AADM;AAAA;AAAA,uBAGiB,KAAK,GAAL,CAAS,GAAT,CAAa,GAAb,CAHjB;;AAAA;AAGC,gBAAA,MAHD;AAAA,kDAIE,MAJF;;AAAA;AAAA;AAAA;;AAAA,qBAOD,aAAM,QAPL;AAAA;AAAA;AAAA;;AAAA,sBAQE,IAAI,QAAA,CAAA,aAAJ,CAAkB,GAAlB,CARF;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;;;;;6EAcA,kBAAa,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAEL,gBAAA,MAAM,CAAC,QAAD,EAAW;AAAE,kBAAA,GAAG,EAAH;AAAF,iBAAX,CAAN;AAFK;AAAA,uBAGC,KAAK,GAAL,CAAS,GAAT,CAAa,GAAb,CAHD;;AAAA;AAAA,kDAKE,IALF;;AAAA;AAAA;AAAA;;AAAA,qBAQD,aAAM,QARL;AAAA;AAAA;AAAA;;AAAA,kDASG,KATH;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;;;;;4EAeA,kBAAY,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACA,KAAK,GAAL,CAAS,KAAT,CAAe,OAAf,CADA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;;;;;0EAIA,kBAAU,GAAV,EAAuB,GAAvB;AAAA;AAAA;AAAA;AAAA;AACN,gBAAA,MAAM,CAAC,KAAD,EAAQ;AAAE,kBAAA,GAAG,EAAH;AAAF,iBAAR,CAAN;AADM;AAAA,uBAGA,KAAK,GAAL,CAAS,GAAT,CAAa,GAAb,EAAkB,GAAlB,CAHA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;;;;;0EAMA,kBAAU,GAAV;AAAA;AAAA;AAAA;AAAA;AACN,gBAAA,MAAM,CAAC,KAAD,EAAQ;AAAE,kBAAA,GAAG,EAAH;AAAF,iBAAR,CAAN;AADM;AAAA,uBAGA,KAAK,GAAL,CAAS,GAAT,CAAa,GAAb,CAHA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;;;;WAMA,0BAAiB,OAAjB,EAA4C;AAClD,MAAA,MAAM,CAAC,YAAD,EAAe;AAAE,QAAA,OAAO,EAAP;AAAF,OAAf,CAAN;AAGA,UAAM,aAAa,GAAG,OAAO,mCAAQ,OAAR;AAAiB,QAAA,WAAW,EAAE;AAA9B,WAAwC;AAAE,QAAA,WAAW,EAAE;AAAf,OAArE;AAEA,aAAO,KAAK,GAAL,CAAS,gBAAT,CAA0B,aAA1B,CAAP;AACA;;;WAEM,iBAAK;AACX,aAAO,KAAK,GAAL,CAAS,KAAT,EAAP;AACA;;;;;;AAxEF,OAAA,CAAA,OAAA,GAAA,OAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.KVStore = void 0;\nconst fs = require(\"fs\");\nconst path = require(\"path\");\nconst debug_1 = require(\"debug\");\nconst levelup_1 = require(\"levelup\");\nconst rocksdb_1 = require(\"rocksdb\");\nconst errors_1 = require(\"./errors\");\nconst logger = debug_1.debug('db');\nclass KVStore {\n    constructor(filePath) {\n        logger('opening file', { filePath });\n        const parentDir = path.resolve(path.join(filePath, '../'));\n        if (!fs.existsSync(parentDir)) {\n            throw new Error(`${parentDir} does not exist`);\n        }\n        this._db = levelup_1.default(rocksdb_1.default(filePath));\n    }\n    async close() {\n        await this._db.close();\n    }\n    async get(key) {\n        logger('get', { key });\n        try {\n            const result = (await this._db.get(key));\n            return result;\n        }\n        catch (error) {\n            if (error.notFound) {\n                throw new errors_1.NotFoundError(key);\n            }\n            throw error;\n        }\n    }\n    async exists(key) {\n        try {\n            logger('exists', { key });\n            await this._db.get(key);\n            return true;\n        }\n        catch (error) {\n            if (error.notFound) {\n                return false;\n            }\n            throw error;\n        }\n    }\n    async clear(options) {\n        await this._db.clear(options);\n    }\n    async put(key, val) {\n        logger('put', { key });\n        await this._db.put(key, val);\n    }\n    async del(key) {\n        logger('del', { key });\n        await this._db.del(key);\n    }\n    createReadStream(options) {\n        logger('readStream', { options });\n        const updatedOption = options ? { ...options, keyAsBuffer: false } : { keyAsBuffer: false };\n        return this._db.createReadStream(updatedOption);\n    }\n    batch() {\n        return this._db.batch();\n    }\n}\nexports.KVStore = KVStore;\n//# sourceMappingURL=kv_store.js.map"]},"metadata":{},"sourceType":"script"}