{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"/home/lisk/doomonlisk/src/app/build/react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _asyncToGenerator = require(\"/home/lisk/doomonlisk/src/app/build/react-app/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nvar _classCallCheck = require(\"/home/lisk/doomonlisk/src/app/build/react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/home/lisk/doomonlisk/src/app/build/react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Node = void 0;\n\nvar Node = /*#__PURE__*/function () {\n  function Node(channel) {\n    _classCallCheck(this, Node);\n\n    this._channel = channel;\n  }\n\n  _createClass(Node, [{\n    key: \"getNodeInfo\",\n    value: function () {\n      var _getNodeInfo = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                return _context.abrupt(\"return\", this._channel.invoke('app:getNodeInfo'));\n\n              case 1:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function getNodeInfo() {\n        return _getNodeInfo.apply(this, arguments);\n      }\n\n      return getNodeInfo;\n    }()\n  }, {\n    key: \"getNetworkStats\",\n    value: function () {\n      var _getNetworkStats = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                return _context2.abrupt(\"return\", this._channel.invoke('app:getNetworkStats'));\n\n              case 1:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function getNetworkStats() {\n        return _getNetworkStats.apply(this, arguments);\n      }\n\n      return getNetworkStats;\n    }()\n  }, {\n    key: \"getConnectedPeers\",\n    value: function () {\n      var _getConnectedPeers = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                return _context3.abrupt(\"return\", this._channel.invoke('app:getConnectedPeers'));\n\n              case 1:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function getConnectedPeers() {\n        return _getConnectedPeers.apply(this, arguments);\n      }\n\n      return getConnectedPeers;\n    }()\n  }, {\n    key: \"getDisconnectedPeers\",\n    value: function () {\n      var _getDisconnectedPeers = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                return _context4.abrupt(\"return\", this._channel.invoke('app:getDisconnectedPeers'));\n\n              case 1:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function getDisconnectedPeers() {\n        return _getDisconnectedPeers.apply(this, arguments);\n      }\n\n      return getDisconnectedPeers;\n    }()\n  }]);\n\n  return Node;\n}();\n\nexports.Node = Node;","map":{"version":3,"sources":["../src/node.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;IAgBa,I;AAGZ,gBAAmB,OAAnB,EAAmC;AAAA;;AAClC,SAAK,QAAL,GAAgB,OAAhB;AACA;;;;;kFAEM;AAAA;AAAA;AAAA;AAAA;AAAA,iDACC,KAAK,QAAL,CAAc,MAAd,CAAqB,iBAArB,CADD;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;;;;;sFAIA;AAAA;AAAA;AAAA;AAAA;AAAA,kDACC,KAAK,QAAL,CAAc,MAAd,CAAqB,qBAArB,CADD;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;;;;;wFAIA;AAAA;AAAA;AAAA;AAAA;AAAA,kDACC,KAAK,QAAL,CAAc,MAAd,CAAqB,uBAArB,CADD;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;;;;;2FAIA;AAAA;AAAA;AAAA;AAAA;AAAA,kDACC,KAAK,QAAL,CAAc,MAAd,CAAqB,0BAArB,CADD;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;;;;;;;AAnBR,OAAA,CAAA,IAAA,GAAA,IAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Node = void 0;\nclass Node {\n    constructor(channel) {\n        this._channel = channel;\n    }\n    async getNodeInfo() {\n        return this._channel.invoke('app:getNodeInfo');\n    }\n    async getNetworkStats() {\n        return this._channel.invoke('app:getNetworkStats');\n    }\n    async getConnectedPeers() {\n        return this._channel.invoke('app:getConnectedPeers');\n    }\n    async getDisconnectedPeers() {\n        return this._channel.invoke('app:getDisconnectedPeers');\n    }\n}\nexports.Node = Node;\n//# sourceMappingURL=node.js.map"]},"metadata":{},"sourceType":"script"}