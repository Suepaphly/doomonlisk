{"ast":null,"code":"\"use strict\";\n\nvar _toArray = require(\"/home/lisk/doomonlisk/src/app/build/react-app/node_modules/@babel/runtime/helpers/toArray\");\n\nvar _classCallCheck = require(\"/home/lisk/doomonlisk/src/app/build/react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/home/lisk/doomonlisk/src/app/build/react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Event = void 0;\n\nvar assert_1 = require(\"assert\");\n\nvar constants_1 = require(\"../constants\");\n\nvar jsonrpc_1 = require(\"./jsonrpc\");\n\nvar Event = /*#__PURE__*/function () {\n  function Event(name, data) {\n    _classCallCheck(this, Event);\n\n    assert_1.strict(constants_1.eventWithModuleNameReg.test(name), \"Event name \\\"\".concat(name, \"\\\" must be a valid name with module name and event name.\"));\n\n    var _name$split = name.split(':'),\n        _name$split2 = _toArray(_name$split),\n        moduleName = _name$split2[0],\n        eventName = _name$split2.slice(1);\n\n    this.module = moduleName;\n    this.name = eventName.join(':');\n    this.data = data;\n  }\n\n  _createClass(Event, [{\n    key: \"toJSONRPCNotification\",\n    value: function toJSONRPCNotification() {\n      return {\n        jsonrpc: jsonrpc_1.VERSION,\n        method: \"\".concat(this.module, \":\").concat(this.name),\n        params: this.data\n      };\n    }\n  }, {\n    key: \"key\",\n    value: function key() {\n      return \"\".concat(this.module, \":\").concat(this.name);\n    }\n  }], [{\n    key: \"fromJSONRPCNotification\",\n    value: function fromJSONRPCNotification(data) {\n      var _ref = typeof data === 'string' ? JSON.parse(data) : data,\n          method = _ref.method,\n          params = _ref.params;\n\n      return new Event(method, params);\n    }\n  }]);\n\n  return Event;\n}();\n\nexports.Event = Event;","map":{"version":3,"sources":["../../src/controller/event.ts"],"names":[],"mappings":";;;;;;;;;;;;;AAcA,IAAA,QAAA,GAAA,OAAA,CAAA,QAAA,CAAA;;AACA,IAAA,WAAA,GAAA,OAAA,CAAA,cAAA,CAAA;;AACA,IAAA,SAAA,GAAA,OAAA,CAAA,WAAA,CAAA;;IAMa,K;AAKZ,iBAAmB,IAAnB,EAAiC,IAAjC,EAA+D;AAAA;;AAC9D,IAAA,QAAA,CAAA,MAAA,CACC,WAAA,CAAA,sBAAA,CAAuB,IAAvB,CAA4B,IAA5B,CADD,yBAEgB,IAFhB;;AAKA,sBAAmC,IAAI,CAAC,KAAL,CAAW,GAAX,CAAnC;AAAA;AAAA,QAAO,UAAP;AAAA,QAAsB,SAAtB;;AACA,SAAK,MAAL,GAAc,UAAd;AACA,SAAK,IAAL,GAAY,SAAS,CAAC,IAAV,CAAe,GAAf,CAAZ;AACA,SAAK,IAAL,GAAY,IAAZ;AACA;;;;WASM,iCAAqB;AAC3B,aAAO;AACN,QAAA,OAAO,EAAE,SAAA,CAAA,OADH;AAEN,QAAA,MAAM,YAAK,KAAK,MAAV,cAAoB,KAAK,IAAzB,CAFA;AAGN,QAAA,MAAM,EAAE,KAAK;AAHP,OAAP;AAKA;;;WAEM,eAAG;AACT,uBAAU,KAAK,MAAf,cAAyB,KAAK,IAA9B;AACA;;;WAjBM,iCAA+B,IAA/B,EAAiE;AACvE,iBACC,OAAO,IAAP,KAAgB,QAAhB,GAA4B,IAAI,CAAC,KAAL,CAAW,IAAX,CAA5B,GAAuE,IADxE;AAAA,UAAQ,MAAR,QAAQ,MAAR;AAAA,UAAgB,MAAhB,QAAgB,MAAhB;;AAGA,aAAO,IAAI,KAAJ,CAAU,MAAV,EAAkB,MAAlB,CAAP;AACA;;;;;;AAtBF,OAAA,CAAA,KAAA,GAAA,KAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Event = void 0;\nconst assert_1 = require(\"assert\");\nconst constants_1 = require(\"../constants\");\nconst jsonrpc_1 = require(\"./jsonrpc\");\nclass Event {\n    constructor(name, data) {\n        assert_1.strict(constants_1.eventWithModuleNameReg.test(name), `Event name \"${name}\" must be a valid name with module name and event name.`);\n        const [moduleName, ...eventName] = name.split(':');\n        this.module = moduleName;\n        this.name = eventName.join(':');\n        this.data = data;\n    }\n    static fromJSONRPCNotification(data) {\n        const { method, params } = typeof data === 'string' ? JSON.parse(data) : data;\n        return new Event(method, params);\n    }\n    toJSONRPCNotification() {\n        return {\n            jsonrpc: jsonrpc_1.VERSION,\n            method: `${this.module}:${this.name}`,\n            params: this.data,\n        };\n    }\n    key() {\n        return `${this.module}:${this.name}`;\n    }\n}\nexports.Event = Event;\n//# sourceMappingURL=event.js.map"]},"metadata":{},"sourceType":"script"}