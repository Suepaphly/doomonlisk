{"ast":null,"code":"\"use strict\";\n\nvar _toConsumableArray = require(\"/home/lisk/doomonlisk/src/app/build/react-app/node_modules/@babel/runtime/helpers/toConsumableArray\");\n\nvar _classCallCheck = require(\"/home/lisk/doomonlisk/src/app/build/react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/home/lisk/doomonlisk/src/app/build/react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.BaseChannel = void 0;\n\nvar action_1 = require(\"../action\");\n\nvar constants_1 = require(\"../../constants\");\n\nvar BaseChannel = /*#__PURE__*/function () {\n  function BaseChannel(moduleAlias, events, actions) {\n    var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n\n    _classCallCheck(this, BaseChannel);\n\n    this.moduleAlias = moduleAlias;\n    this.options = options;\n    this.eventsList = options.skipInternalEvents ? events : [].concat(_toConsumableArray(events), _toConsumableArray(constants_1.INTERNAL_EVENTS));\n    this.actions = {};\n\n    for (var _i = 0, _Object$keys = Object.keys(actions); _i < _Object$keys.length; _i++) {\n      var actionName = _Object$keys[_i];\n      var actionData = actions[actionName];\n      var handler = typeof actionData === 'object' ? actionData.handler : actionData;\n      var method = \"\".concat(this.moduleAlias, \":\").concat(actionName);\n      this.actions[actionName] = new action_1.Action(null, method, undefined, handler);\n    }\n\n    this.actionsList = Object.keys(this.actions);\n  }\n\n  _createClass(BaseChannel, [{\n    key: \"isValidEventName\",\n    value: function isValidEventName(name) {\n      var throwError = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      var result = constants_1.eventWithModuleNameReg.test(name);\n\n      if (throwError && !result) {\n        throw new Error(\"[\".concat(this.moduleAlias, \"] Invalid event name \").concat(name, \".\"));\n      }\n\n      return result;\n    }\n  }, {\n    key: \"isValidActionName\",\n    value: function isValidActionName(name) {\n      var throwError = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      var result = constants_1.eventWithModuleNameReg.test(name);\n\n      if (throwError && !result) {\n        throw new Error(\"[\".concat(this.moduleAlias, \"] Invalid action name \").concat(name, \".\"));\n      }\n\n      return result;\n    }\n  }]);\n\n  return BaseChannel;\n}();\n\nexports.BaseChannel = BaseChannel;","map":{"version":3,"sources":["../../../src/controller/channels/base_channel.ts"],"names":[],"mappings":";;;;;;;;;;;;;AAeA,IAAA,QAAA,GAAA,OAAA,CAAA,WAAA,CAAA;;AACA,IAAA,WAAA,GAAA,OAAA,CAAA,iBAAA,CAAA;;IAOsB,W;AAQrB,uBACC,WADD,EAEC,MAFD,EAGC,OAHD,EAIiC;AAAA,QAAhC,OAAgC,uEAAF,EAAE;;AAAA;;AAEhC,SAAK,WAAL,GAAmB,WAAnB;AACA,SAAK,OAAL,GAAe,OAAf;AAEA,SAAK,UAAL,GAAkB,OAAO,CAAC,kBAAR,GAA6B,MAA7B,gCAA0C,MAA1C,sBAAqD,WAAA,CAAA,eAArD,EAAlB;AAEA,SAAK,OAAL,GAAe,EAAf;;AACA,oCAAyB,MAAM,CAAC,IAAP,CAAY,OAAZ,CAAzB,kCAA+C;AAA1C,UAAM,UAAU,mBAAhB;AACJ,UAAM,UAAU,GAAG,OAAO,CAAC,UAAD,CAA1B;AAEA,UAAM,OAAO,GAAG,OAAO,UAAP,KAAsB,QAAtB,GAAiC,UAAU,CAAC,OAA5C,GAAsD,UAAtE;AACA,UAAM,MAAM,aAAM,KAAK,WAAX,cAA0B,UAA1B,CAAZ;AACA,WAAK,OAAL,CAAa,UAAb,IAA2B,IAAI,QAAA,CAAA,MAAJ,CAAW,IAAX,EAAiB,MAAjB,EAAyB,SAAzB,EAAoC,OAApC,CAA3B;AACA;;AACD,SAAK,WAAL,GAAmB,MAAM,CAAC,IAAP,CAAY,KAAK,OAAjB,CAAnB;AACA;;;;WAEM,0BAAiB,IAAjB,EAAgD;AAAA,UAAjB,UAAiB,uEAAJ,IAAI;AACtD,UAAM,MAAM,GAAG,WAAA,CAAA,sBAAA,CAAuB,IAAvB,CAA4B,IAA5B,CAAf;;AAEA,UAAI,UAAU,IAAI,CAAC,MAAnB,EAA2B;AAC1B,cAAM,IAAI,KAAJ,YAAc,KAAK,WAAnB,kCAAsD,IAAtD,OAAN;AACA;;AACD,aAAO,MAAP;AACA;;;WAEM,2BAAkB,IAAlB,EAAiD;AAAA,UAAjB,UAAiB,uEAAJ,IAAI;AACvD,UAAM,MAAM,GAAG,WAAA,CAAA,sBAAA,CAAuB,IAAvB,CAA4B,IAA5B,CAAf;;AAEA,UAAI,UAAU,IAAI,CAAC,MAAnB,EAA2B;AAC1B,cAAM,IAAI,KAAJ,YAAc,KAAK,WAAnB,mCAAuD,IAAvD,OAAN;AACA;;AAED,aAAO,MAAP;AACA;;;;;;AA/CF,OAAA,CAAA,WAAA,GAAA,WAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BaseChannel = void 0;\nconst action_1 = require(\"../action\");\nconst constants_1 = require(\"../../constants\");\nclass BaseChannel {\n    constructor(moduleAlias, events, actions, options = {}) {\n        this.moduleAlias = moduleAlias;\n        this.options = options;\n        this.eventsList = options.skipInternalEvents ? events : [...events, ...constants_1.INTERNAL_EVENTS];\n        this.actions = {};\n        for (const actionName of Object.keys(actions)) {\n            const actionData = actions[actionName];\n            const handler = typeof actionData === 'object' ? actionData.handler : actionData;\n            const method = `${this.moduleAlias}:${actionName}`;\n            this.actions[actionName] = new action_1.Action(null, method, undefined, handler);\n        }\n        this.actionsList = Object.keys(this.actions);\n    }\n    isValidEventName(name, throwError = true) {\n        const result = constants_1.eventWithModuleNameReg.test(name);\n        if (throwError && !result) {\n            throw new Error(`[${this.moduleAlias}] Invalid event name ${name}.`);\n        }\n        return result;\n    }\n    isValidActionName(name, throwError = true) {\n        const result = constants_1.eventWithModuleNameReg.test(name);\n        if (throwError && !result) {\n            throw new Error(`[${this.moduleAlias}] Invalid action name ${name}.`);\n        }\n        return result;\n    }\n}\nexports.BaseChannel = BaseChannel;\n//# sourceMappingURL=base_channel.js.map"]},"metadata":{},"sourceType":"script"}