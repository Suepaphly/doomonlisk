{"ast":null,"code":"\"use strict\";\n\nvar _slicedToArray = require(\"/home/lisk/doomonlisk/src/app/build/react-app/node_modules/@babel/runtime/helpers/slicedToArray\");\n\nvar _objectWithoutProperties = require(\"/home/lisk/doomonlisk/src/app/build/react-app/node_modules/@babel/runtime/helpers/objectWithoutProperties\");\n\nvar _classCallCheck = require(\"/home/lisk/doomonlisk/src/app/build/react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/home/lisk/doomonlisk/src/app/build/react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _excluded = [\"time\", \"level\", \"name\", \"msg\", \"module\", \"err\", \"hostname\", \"pid\", \"src\", \"v\"],\n    _excluded2 = [\"time\", \"level\", \"name\", \"msg\", \"module\", \"hostname\", \"pid\", \"src\", \"v\"];\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createLogger = exports.createDirIfNotExist = void 0;\n\nvar path = require(\"path\");\n\nvar fs = require(\"fs\");\n\nvar bunyan = require(\"bunyan\");\n\nvar util = require(\"util\");\n\nvar createDirIfNotExist = function createDirIfNotExist(filePath) {\n  var dir = path.dirname(filePath);\n\n  if (fs.existsSync(dir)) {\n    return;\n  }\n\n  fs.mkdirSync(dir, {\n    recursive: true\n  });\n};\n\nexports.createDirIfNotExist = createDirIfNotExist;\nvar colors = {\n  reset: '\\x1b[0m',\n  red: '\\x1b[31m',\n  green: '\\x1b[32m',\n  yellow: '\\x1b[33m',\n  blue: '\\x1b[34m',\n  meganta: '\\x1b[35m',\n  cyan: '\\x1b[36m',\n  white: '\\x1b[37m'\n};\n\nvar setColor = function setColor(color, str) {\n  return \"\".concat(colors[color]).concat(str).concat(colors.reset);\n};\n\nvar levelToName = {\n  10: setColor('yellow', 'TRACE'),\n  20: setColor('meganta', 'DEBUG'),\n  30: setColor('cyan', 'INFO'),\n  40: setColor('yellow', 'WARN'),\n  50: setColor('red', 'ERROR'),\n  60: setColor('red', 'FATAL')\n};\n\nvar ConsoleLog = /*#__PURE__*/function () {\n  function ConsoleLog() {\n    _classCallCheck(this, ConsoleLog);\n  }\n\n  _createClass(ConsoleLog, [{\n    key: \"write\",\n    value: function write(rec) {\n      try {\n        var time = rec.time,\n            level = rec.level,\n            name = rec.name,\n            msg = rec.msg,\n            module = rec.module,\n            err = rec.err,\n            hostname = rec.hostname,\n            pid = rec.pid,\n            src = rec.src,\n            v = rec.v,\n            others = _objectWithoutProperties(rec, _excluded);\n\n        var log = util.format('%s %s %s: %s (module=%s)\\n', new Date(time).toLocaleTimeString('en-US', {\n          hour12: false\n        }), levelToName[level], name, msg, module !== null && module !== void 0 ? module : 'unknown');\n\n        if (err) {\n          log += util.format('Message: %s \\n Trace: %s \\n', err.message, err.stack);\n        }\n\n        if (Object.keys(others).length > 0) {\n          log += util.format('%s \\n', JSON.stringify(others, function (_, val) {\n            if (typeof val === 'object') {\n              for (var _i = 0, _Object$keys = Object.keys(val); _i < _Object$keys.length; _i++) {\n                var k = _Object$keys[_i];\n\n                if (typeof val[k] === 'bigint') {\n                  val[k] = val[k].toString();\n                }\n\n                if (Buffer.isBuffer(val[k])) {\n                  val[k] = val[k].toString('hex');\n                }\n              }\n            }\n\n            return val;\n          }, ' '));\n        }\n\n        process.stdout.write(log);\n      } catch (err) {\n        console.error('Failed on logging', err);\n      }\n    }\n  }]);\n\n  return ConsoleLog;\n}();\n\nvar FileLog = /*#__PURE__*/function () {\n  function FileLog(filePath) {\n    _classCallCheck(this, FileLog);\n\n    this._stream = fs.createWriteStream(filePath, {\n      flags: 'a',\n      encoding: 'utf8'\n    });\n  }\n\n  _createClass(FileLog, [{\n    key: \"write\",\n    value: function write(rec) {\n      var time = rec.time,\n          level = rec.level,\n          name = rec.name,\n          msg = rec.msg,\n          moduleName = rec.module,\n          hostname = rec.hostname,\n          pid = rec.pid,\n          src = rec.src,\n          v = rec.v,\n          others = _objectWithoutProperties(rec, _excluded2);\n\n      var log = {\n        time: time,\n        level: level,\n        name: name,\n        msg: msg,\n        hostname: hostname,\n        pid: pid,\n        module: moduleName !== null && moduleName !== void 0 ? moduleName : 'unknown'\n      };\n      var otherKeys = Object.entries(others);\n\n      if (otherKeys.length > 0) {\n        var meta = otherKeys.reduce(function (prev, _ref) {\n          var _ref2 = _slicedToArray(_ref, 2),\n              key = _ref2[0],\n              value = _ref2[1];\n\n          if (typeof value === 'bigint') {\n            prev[key] = value.toString();\n          } else if (Buffer.isBuffer(value)) {\n            prev[key] = value.toString('hex');\n          } else if (value instanceof Error) {\n            prev[key] = util.format('Message: %s. Trace: %s.', value.message, value.stack);\n          } else {\n            prev[key] = value;\n          }\n\n          return prev;\n        }, {});\n        log.meta = meta;\n      }\n\n      this._stream.write(\"\".concat(JSON.stringify(log), \"\\n\"));\n    }\n  }, {\n    key: \"end\",\n    value: function end() {\n      this._stream.end();\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this._stream.destroy();\n    }\n  }]);\n\n  return FileLog;\n}();\n\nvar createLogger = function createLogger(_ref3) {\n  var fileLogLevel = _ref3.fileLogLevel,\n      consoleLogLevel = _ref3.consoleLogLevel,\n      logFilePath = _ref3.logFilePath,\n      module = _ref3.module;\n  var consoleSrc = consoleLogLevel === 'debug' || consoleLogLevel === 'trace';\n  var consoleStream = consoleLogLevel !== 'none' ? [{\n    type: 'raw',\n    level: consoleLogLevel,\n    stream: new ConsoleLog()\n  }] : [];\n  var fileSrc = fileLogLevel === 'debug' || fileLogLevel === 'trace';\n  var fileStream = fileLogLevel !== 'none' ? [{\n    type: 'raw',\n    level: fileLogLevel,\n    stream: new FileLog(logFilePath)\n  }] : [];\n  var streams = [].concat(consoleStream, fileStream);\n  return bunyan.createLogger({\n    name: 'lisk-framework',\n    streams: streams,\n    src: consoleSrc || fileSrc,\n    serializers: {\n      err: bunyan.stdSerializers.err\n    },\n    module: module\n  });\n};\n\nexports.createLogger = createLogger;","map":{"version":3,"sources":["../../src/logger/logger.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createLogger = exports.createDirIfNotExist = void 0;\nconst path = require(\"path\");\nconst fs = require(\"fs\");\nconst bunyan = require(\"bunyan\");\nconst util = require(\"util\");\nconst createDirIfNotExist = (filePath) => {\n    const dir = path.dirname(filePath);\n    if (fs.existsSync(dir)) {\n        return;\n    }\n    fs.mkdirSync(dir, { recursive: true });\n};\nexports.createDirIfNotExist = createDirIfNotExist;\nconst colors = {\n    reset: '\\x1b[0m',\n    red: '\\x1b[31m',\n    green: '\\x1b[32m',\n    yellow: '\\x1b[33m',\n    blue: '\\x1b[34m',\n    meganta: '\\x1b[35m',\n    cyan: '\\x1b[36m',\n    white: '\\x1b[37m',\n};\nconst setColor = (color, str) => `${colors[color]}${str}${colors.reset}`;\nconst levelToName = {\n    10: setColor('yellow', 'TRACE'),\n    20: setColor('meganta', 'DEBUG'),\n    30: setColor('cyan', 'INFO'),\n    40: setColor('yellow', 'WARN'),\n    50: setColor('red', 'ERROR'),\n    60: setColor('red', 'FATAL'),\n};\nclass ConsoleLog {\n    write(rec) {\n        try {\n            const { time, level, name, msg, module, err, hostname, pid, src, v, ...others } = rec;\n            let log = util.format('%s %s %s: %s (module=%s)\\n', new Date(time).toLocaleTimeString('en-US', { hour12: false }), levelToName[level], name, msg, module !== null && module !== void 0 ? module : 'unknown');\n            if (err) {\n                log += util.format('Message: %s \\n Trace: %s \\n', err.message, err.stack);\n            }\n            if (Object.keys(others).length > 0) {\n                log += util.format('%s \\n', JSON.stringify(others, (_, val) => {\n                    if (typeof val === 'object') {\n                        for (const k of Object.keys(val)) {\n                            if (typeof val[k] === 'bigint') {\n                                val[k] = val[k].toString();\n                            }\n                            if (Buffer.isBuffer(val[k])) {\n                                val[k] = val[k].toString('hex');\n                            }\n                        }\n                    }\n                    return val;\n                }, ' '));\n            }\n            process.stdout.write(log);\n        }\n        catch (err) {\n            console.error('Failed on logging', err);\n        }\n    }\n}\nclass FileLog {\n    constructor(filePath) {\n        this._stream = fs.createWriteStream(filePath, { flags: 'a', encoding: 'utf8' });\n    }\n    write(rec) {\n        const { time, level, name, msg, module: moduleName, hostname, pid, src, v, ...others } = rec;\n        const log = {\n            time,\n            level,\n            name,\n            msg,\n            hostname,\n            pid,\n            module: moduleName !== null && moduleName !== void 0 ? moduleName : 'unknown',\n        };\n        const otherKeys = Object.entries(others);\n        if (otherKeys.length > 0) {\n            const meta = otherKeys.reduce((prev, [key, value]) => {\n                if (typeof value === 'bigint') {\n                    prev[key] = value.toString();\n                }\n                else if (Buffer.isBuffer(value)) {\n                    prev[key] = value.toString('hex');\n                }\n                else if (value instanceof Error) {\n                    prev[key] = util.format('Message: %s. Trace: %s.', value.message, value.stack);\n                }\n                else {\n                    prev[key] = value;\n                }\n                return prev;\n            }, {});\n            log.meta = meta;\n        }\n        this._stream.write(`${JSON.stringify(log)}\\n`);\n    }\n    end() {\n        this._stream.end();\n    }\n    destroy() {\n        this._stream.destroy();\n    }\n}\nconst createLogger = ({ fileLogLevel, consoleLogLevel, logFilePath, module, }) => {\n    const consoleSrc = consoleLogLevel === 'debug' || consoleLogLevel === 'trace';\n    const consoleStream = consoleLogLevel !== 'none'\n        ? [\n            {\n                type: 'raw',\n                level: consoleLogLevel,\n                stream: new ConsoleLog(),\n            },\n        ]\n        : [];\n    const fileSrc = fileLogLevel === 'debug' || fileLogLevel === 'trace';\n    const fileStream = fileLogLevel !== 'none'\n        ? [\n            {\n                type: 'raw',\n                level: fileLogLevel,\n                stream: new FileLog(logFilePath),\n            },\n        ]\n        : [];\n    const streams = [...consoleStream, ...fileStream];\n    return bunyan.createLogger({\n        name: 'lisk-framework',\n        streams,\n        src: consoleSrc || fileSrc,\n        serializers: { err: bunyan.stdSerializers.err },\n        module,\n    });\n};\nexports.createLogger = createLogger;\n//# sourceMappingURL=logger.js.map"]},"metadata":{},"sourceType":"script"}