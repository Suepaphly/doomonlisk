{"ast":null,"code":"var util = require('util');\n\nvar AbstractIterator = require('abstract-leveldown').AbstractIterator;\n\nvar binding = require('./binding');\n\nfunction Iterator(db, options) {\n  AbstractIterator.call(this, db);\n  this.context = binding.iterator_init(db.context, options);\n  this.cache = null;\n  this.finished = false;\n}\n\nutil.inherits(Iterator, AbstractIterator);\n\nIterator.prototype._seek = function (target) {\n  if (target.length === 0) {\n    throw new Error('cannot seek() to an empty target');\n  }\n\n  this.cache = null;\n  binding.iterator_seek(this.context, target);\n  this.finished = false;\n};\n\nIterator.prototype._next = function (callback) {\n  var that = this;\n\n  if (this.cache && this.cache.length) {\n    process.nextTick(callback, null, this.cache.pop(), this.cache.pop());\n  } else if (this.finished) {\n    process.nextTick(callback);\n  } else {\n    binding.iterator_next(this.context, function (err, array, finished) {\n      if (err) return callback(err);\n      that.cache = array;\n      that.finished = finished;\n\n      that._next(callback);\n    });\n  }\n\n  return this;\n};\n\nIterator.prototype._end = function (callback) {\n  delete this.cache;\n  binding.iterator_end(this.context, callback);\n};\n\nmodule.exports = Iterator;","map":{"version":3,"sources":["/home/lisk/doomonlisk/node_modules/rocksdb/iterator.js"],"names":["util","require","AbstractIterator","binding","Iterator","db","options","call","context","iterator_init","cache","finished","inherits","prototype","_seek","target","length","Error","iterator_seek","_next","callback","that","process","nextTick","pop","iterator_next","err","array","_end","iterator_end","module","exports"],"mappings":"AAAA,IAAMA,IAAI,GAAGC,OAAO,CAAC,MAAD,CAApB;;AACA,IAAMC,gBAAgB,GAAGD,OAAO,CAAC,oBAAD,CAAP,CAA8BC,gBAAvD;;AACA,IAAMC,OAAO,GAAGF,OAAO,CAAC,WAAD,CAAvB;;AAEA,SAASG,QAAT,CAAmBC,EAAnB,EAAuBC,OAAvB,EAAgC;AAC9BJ,EAAAA,gBAAgB,CAACK,IAAjB,CAAsB,IAAtB,EAA4BF,EAA5B;AAEA,OAAKG,OAAL,GAAeL,OAAO,CAACM,aAAR,CAAsBJ,EAAE,CAACG,OAAzB,EAAkCF,OAAlC,CAAf;AACA,OAAKI,KAAL,GAAa,IAAb;AACA,OAAKC,QAAL,GAAgB,KAAhB;AACD;;AAEDX,IAAI,CAACY,QAAL,CAAcR,QAAd,EAAwBF,gBAAxB;;AAEAE,QAAQ,CAACS,SAAT,CAAmBC,KAAnB,GAA2B,UAAUC,MAAV,EAAkB;AAC3C,MAAIA,MAAM,CAACC,MAAP,KAAkB,CAAtB,EAAyB;AACvB,UAAM,IAAIC,KAAJ,CAAU,kCAAV,CAAN;AACD;;AAED,OAAKP,KAAL,GAAa,IAAb;AACAP,EAAAA,OAAO,CAACe,aAAR,CAAsB,KAAKV,OAA3B,EAAoCO,MAApC;AACA,OAAKJ,QAAL,GAAgB,KAAhB;AACD,CARD;;AAUAP,QAAQ,CAACS,SAAT,CAAmBM,KAAnB,GAA2B,UAAUC,QAAV,EAAoB;AAC7C,MAAIC,IAAI,GAAG,IAAX;;AAEA,MAAI,KAAKX,KAAL,IAAc,KAAKA,KAAL,CAAWM,MAA7B,EAAqC;AACnCM,IAAAA,OAAO,CAACC,QAAR,CAAiBH,QAAjB,EAA2B,IAA3B,EAAiC,KAAKV,KAAL,CAAWc,GAAX,EAAjC,EAAmD,KAAKd,KAAL,CAAWc,GAAX,EAAnD;AACD,GAFD,MAEO,IAAI,KAAKb,QAAT,EAAmB;AACxBW,IAAAA,OAAO,CAACC,QAAR,CAAiBH,QAAjB;AACD,GAFM,MAEA;AACLjB,IAAAA,OAAO,CAACsB,aAAR,CAAsB,KAAKjB,OAA3B,EAAoC,UAAUkB,GAAV,EAAeC,KAAf,EAAsBhB,QAAtB,EAAgC;AAClE,UAAIe,GAAJ,EAAS,OAAON,QAAQ,CAACM,GAAD,CAAf;AAETL,MAAAA,IAAI,CAACX,KAAL,GAAaiB,KAAb;AACAN,MAAAA,IAAI,CAACV,QAAL,GAAgBA,QAAhB;;AACAU,MAAAA,IAAI,CAACF,KAAL,CAAWC,QAAX;AACD,KAND;AAOD;;AAED,SAAO,IAAP;AACD,CAlBD;;AAoBAhB,QAAQ,CAACS,SAAT,CAAmBe,IAAnB,GAA0B,UAAUR,QAAV,EAAoB;AAC5C,SAAO,KAAKV,KAAZ;AACAP,EAAAA,OAAO,CAAC0B,YAAR,CAAqB,KAAKrB,OAA1B,EAAmCY,QAAnC;AACD,CAHD;;AAKAU,MAAM,CAACC,OAAP,GAAiB3B,QAAjB","sourcesContent":["const util = require('util')\nconst AbstractIterator = require('abstract-leveldown').AbstractIterator\nconst binding = require('./binding')\n\nfunction Iterator (db, options) {\n  AbstractIterator.call(this, db)\n\n  this.context = binding.iterator_init(db.context, options)\n  this.cache = null\n  this.finished = false\n}\n\nutil.inherits(Iterator, AbstractIterator)\n\nIterator.prototype._seek = function (target) {\n  if (target.length === 0) {\n    throw new Error('cannot seek() to an empty target')\n  }\n\n  this.cache = null\n  binding.iterator_seek(this.context, target)\n  this.finished = false\n}\n\nIterator.prototype._next = function (callback) {\n  var that = this\n\n  if (this.cache && this.cache.length) {\n    process.nextTick(callback, null, this.cache.pop(), this.cache.pop())\n  } else if (this.finished) {\n    process.nextTick(callback)\n  } else {\n    binding.iterator_next(this.context, function (err, array, finished) {\n      if (err) return callback(err)\n\n      that.cache = array\n      that.finished = finished\n      that._next(callback)\n    })\n  }\n\n  return this\n}\n\nIterator.prototype._end = function (callback) {\n  delete this.cache\n  binding.iterator_end(this.context, callback)\n}\n\nmodule.exports = Iterator\n"]},"metadata":{},"sourceType":"script"}