{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.forgerSyncSchema = exports.forgerInfoSchema = void 0;\nexports.forgerInfoSchema = {\n  $id: '/forger/info',\n  type: 'object',\n  properties: {\n    totalProducedBlocks: {\n      dataType: 'uint32',\n      fieldNumber: 1\n    },\n    totalReceivedFees: {\n      dataType: 'uint64',\n      fieldNumber: 2\n    },\n    totalReceivedRewards: {\n      dataType: 'uint64',\n      fieldNumber: 3\n    },\n    votesReceived: {\n      type: 'array',\n      fieldNumber: 4,\n      items: {\n        type: 'object',\n        properties: {\n          address: {\n            dataType: 'bytes',\n            fieldNumber: 1\n          },\n          amount: {\n            dataType: 'uint64',\n            fieldNumber: 2\n          }\n        }\n      },\n      required: ['address', 'amount']\n    }\n  },\n  required: ['totalProducedBlocks', 'totalReceivedFees', 'totalReceivedRewards', 'votesReceived']\n};\nexports.forgerSyncSchema = {\n  $id: 'forger/sync',\n  type: 'object',\n  required: ['syncUptoHeight'],\n  properties: {\n    syncUptoHeight: {\n      dataType: 'uint32',\n      fieldNumber: 1\n    }\n  }\n};","map":{"version":3,"sources":["../src/schema.ts"],"names":[],"mappings":";;;;;;AAca,OAAA,CAAA,gBAAA,GAAmB;AAC/B,EAAA,GAAG,EAAE,cAD0B;AAE/B,EAAA,IAAI,EAAE,QAFyB;AAG/B,EAAA,UAAU,EAAE;AACX,IAAA,mBAAmB,EAAE;AACpB,MAAA,QAAQ,EAAE,QADU;AAEpB,MAAA,WAAW,EAAE;AAFO,KADV;AAKX,IAAA,iBAAiB,EAAE;AAClB,MAAA,QAAQ,EAAE,QADQ;AAElB,MAAA,WAAW,EAAE;AAFK,KALR;AASX,IAAA,oBAAoB,EAAE;AACrB,MAAA,QAAQ,EAAE,QADW;AAErB,MAAA,WAAW,EAAE;AAFQ,KATX;AAaX,IAAA,aAAa,EAAE;AACd,MAAA,IAAI,EAAE,OADQ;AAEd,MAAA,WAAW,EAAE,CAFC;AAGd,MAAA,KAAK,EAAE;AACN,QAAA,IAAI,EAAE,QADA;AAEN,QAAA,UAAU,EAAE;AACX,UAAA,OAAO,EAAE;AACR,YAAA,QAAQ,EAAE,OADF;AAER,YAAA,WAAW,EAAE;AAFL,WADE;AAKX,UAAA,MAAM,EAAE;AACP,YAAA,QAAQ,EAAE,QADH;AAEP,YAAA,WAAW,EAAE;AAFN;AALG;AAFN,OAHO;AAgBd,MAAA,QAAQ,EAAE,CAAC,SAAD,EAAY,QAAZ;AAhBI;AAbJ,GAHmB;AAmC/B,EAAA,QAAQ,EAAE,CAAC,qBAAD,EAAwB,mBAAxB,EAA6C,sBAA7C,EAAqE,eAArE;AAnCqB,CAAnB;AAsCA,OAAA,CAAA,gBAAA,GAAmB;AAC/B,EAAA,GAAG,EAAE,aAD0B;AAE/B,EAAA,IAAI,EAAE,QAFyB;AAG/B,EAAA,QAAQ,EAAE,CAAC,gBAAD,CAHqB;AAI/B,EAAA,UAAU,EAAE;AACX,IAAA,cAAc,EAAE;AACf,MAAA,QAAQ,EAAE,QADK;AAEf,MAAA,WAAW,EAAE;AAFE;AADL;AAJmB,CAAnB","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.forgerSyncSchema = exports.forgerInfoSchema = void 0;\nexports.forgerInfoSchema = {\n    $id: '/forger/info',\n    type: 'object',\n    properties: {\n        totalProducedBlocks: {\n            dataType: 'uint32',\n            fieldNumber: 1,\n        },\n        totalReceivedFees: {\n            dataType: 'uint64',\n            fieldNumber: 2,\n        },\n        totalReceivedRewards: {\n            dataType: 'uint64',\n            fieldNumber: 3,\n        },\n        votesReceived: {\n            type: 'array',\n            fieldNumber: 4,\n            items: {\n                type: 'object',\n                properties: {\n                    address: {\n                        dataType: 'bytes',\n                        fieldNumber: 1,\n                    },\n                    amount: {\n                        dataType: 'uint64',\n                        fieldNumber: 2,\n                    },\n                },\n            },\n            required: ['address', 'amount'],\n        },\n    },\n    required: ['totalProducedBlocks', 'totalReceivedFees', 'totalReceivedRewards', 'votesReceived'],\n};\nexports.forgerSyncSchema = {\n    $id: 'forger/sync',\n    type: 'object',\n    required: ['syncUptoHeight'],\n    properties: {\n        syncUptoHeight: {\n            dataType: 'uint32',\n            fieldNumber: 1,\n        },\n    },\n};\n//# sourceMappingURL=schema.js.map"]},"metadata":{},"sourceType":"script"}