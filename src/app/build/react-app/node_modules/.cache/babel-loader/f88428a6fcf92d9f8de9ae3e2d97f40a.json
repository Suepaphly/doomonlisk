{"ast":null,"code":"\"use strict\";\n\nvar _objectSpread = require(\"/home/lisk/doomonlisk/src/app/build/react-app/node_modules/@babel/runtime/helpers/objectSpread2\");\n\nvar _classCallCheck = require(\"/home/lisk/doomonlisk/src/app/build/react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/home/lisk/doomonlisk/src/app/build/react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _inherits = require(\"/home/lisk/doomonlisk/src/app/build/react-app/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _createSuper = require(\"/home/lisk/doomonlisk/src/app/build/react-app/node_modules/@babel/runtime/helpers/createSuper\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.NewList = void 0;\n\nvar constants_1 = require(\"../constants\");\n\nvar utils_1 = require(\"../utils\");\n\nvar base_list_1 = require(\"./base_list\");\n\nvar NewList = /*#__PURE__*/function (_base_list_1$BaseList) {\n  _inherits(NewList, _base_list_1$BaseList);\n\n  var _super = _createSuper(NewList);\n\n  function NewList(_ref) {\n    var _this;\n\n    var evictionThresholdTime = _ref.evictionThresholdTime,\n        numOfBuckets = _ref.numOfBuckets,\n        bucketSize = _ref.bucketSize,\n        secret = _ref.secret,\n        peerType = _ref.peerType;\n\n    _classCallCheck(this, NewList);\n\n    _this = _super.call(this, {\n      secret: secret,\n      numOfBuckets: numOfBuckets,\n      bucketSize: bucketSize,\n      peerType: peerType\n    });\n    _this.type = utils_1.PEER_TYPE.NEW_PEER;\n    _this._evictionThresholdTime = evictionThresholdTime !== null && evictionThresholdTime !== void 0 ? evictionThresholdTime : constants_1.DEFAULT_EVICTION_THRESHOLD_TIME;\n    return _this;\n  }\n\n  _createClass(NewList, [{\n    key: \"newPeerConfig\",\n    get: function get() {\n      return _objectSpread(_objectSpread({}, this.peerListConfig), {}, {\n        evictionThresholdTime: this._evictionThresholdTime\n      });\n    }\n  }, {\n    key: \"makeSpace\",\n    value: function makeSpace(bucket) {\n      var evictedPeer = utils_1.expirePeerFromBucket(bucket, this._evictionThresholdTime);\n\n      if (evictedPeer) {\n        return evictedPeer;\n      }\n\n      return utils_1.evictPeerRandomlyFromBucket(bucket);\n    }\n  }]);\n\n  return NewList;\n}(base_list_1.BaseList);\n\nexports.NewList = NewList;","map":{"version":3,"sources":["../../src/peer_book/new_list.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAcA,IAAA,WAAA,GAAA,OAAA,CAAA,cAAA,CAAA;;AAIA,IAAA,OAAA,GAAA,OAAA,CAAA,UAAA,CAAA;;AAEA,IAAA,WAAA,GAAA,OAAA,CAAA,aAAA,CAAA;;IAMa,O;;;;;AAGZ,yBAMgB;AAAA;;AAAA,QALf,qBAKe,QALf,qBAKe;AAAA,QAJf,YAIe,QAJf,YAIe;AAAA,QAHf,UAGe,QAHf,UAGe;AAAA,QAFf,MAEe,QAFf,MAEe;AAAA,QADf,QACe,QADf,QACe;;AAAA;;AACf,8BAAM;AACL,MAAA,MAAM,EAAN,MADK;AAEL,MAAA,YAAY,EAAZ,YAFK;AAGL,MAAA,UAAU,EAAV,UAHK;AAIL,MAAA,QAAQ,EAAR;AAJK,KAAN;AAMA,UAAK,IAAL,GAAY,OAAA,CAAA,SAAA,CAAU,QAAtB;AACA,UAAK,sBAAL,GAA8B,qBAAqB,KAAA,IAArB,IAAA,qBAAqB,KAAA,KAAA,CAArB,GAAA,qBAAA,GAAyB,WAAA,CAAA,+BAAvD;AARe;AASf;;;;SAED,eAAwB;AACvB,6CACI,KAAK,cADT;AAEC,QAAA,qBAAqB,EAAE,KAAK;AAF7B;AAIA;;;WAEM,mBAAU,MAAV,EAAwB;AAE9B,UAAM,WAAW,GAAG,OAAA,CAAA,oBAAA,CAAqB,MAArB,EAA6B,KAAK,sBAAlC,CAApB;;AACA,UAAI,WAAJ,EAAiB;AAChB,eAAO,WAAP;AACA;;AAGD,aAAO,OAAA,CAAA,2BAAA,CAA4B,MAA5B,CAAP;AACA;;;;EApC2B,WAAA,CAAA,Q;;AAA7B,OAAA,CAAA,OAAA,GAAA,OAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NewList = void 0;\nconst constants_1 = require(\"../constants\");\nconst utils_1 = require(\"../utils\");\nconst base_list_1 = require(\"./base_list\");\nclass NewList extends base_list_1.BaseList {\n    constructor({ evictionThresholdTime, numOfBuckets, bucketSize, secret, peerType, }) {\n        super({\n            secret,\n            numOfBuckets,\n            bucketSize,\n            peerType,\n        });\n        this.type = utils_1.PEER_TYPE.NEW_PEER;\n        this._evictionThresholdTime = evictionThresholdTime !== null && evictionThresholdTime !== void 0 ? evictionThresholdTime : constants_1.DEFAULT_EVICTION_THRESHOLD_TIME;\n    }\n    get newPeerConfig() {\n        return {\n            ...this.peerListConfig,\n            evictionThresholdTime: this._evictionThresholdTime,\n        };\n    }\n    makeSpace(bucket) {\n        const evictedPeer = utils_1.expirePeerFromBucket(bucket, this._evictionThresholdTime);\n        if (evictedPeer) {\n            return evictedPeer;\n        }\n        return utils_1.evictPeerRandomlyFromBucket(bucket);\n    }\n}\nexports.NewList = NewList;\n//# sourceMappingURL=new_list.js.map"]},"metadata":{},"sourceType":"script"}