{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"/home/lisk/doomonlisk/src/app/build/react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _asyncToGenerator = require(\"/home/lisk/doomonlisk/src/app/build/react-app/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nvar _objectSpread = require(\"/home/lisk/doomonlisk/src/app/build/react-app/node_modules/@babel/runtime/helpers/objectSpread2\");\n\nvar _classCallCheck = require(\"/home/lisk/doomonlisk/src/app/build/react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.StateStoreMock = void 0;\n\nvar lisk_utils_1 = require(\"@liskhq/lisk-utils\");\n\nvar defaultNetworkIdentifier = Buffer.from('', 'hex');\n\nvar StateStoreMock = function StateStoreMock() {\n  var _this = this;\n\n  var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n      accounts = _ref.accounts,\n      chain = _ref.chain,\n      consensus = _ref.consensus,\n      defaultAccount = _ref.defaultAccount,\n      lastBlockHeaders = _ref.lastBlockHeaders,\n      lastBlockReward = _ref.lastBlockReward,\n      networkIdentifier = _ref.networkIdentifier;\n\n  _classCallCheck(this, StateStoreMock);\n\n  var _a, _b;\n\n  this.accountData = (_a = accounts === null || accounts === void 0 ? void 0 : accounts.map(function (a) {\n    return _objectSpread({}, a);\n  })) !== null && _a !== void 0 ? _a : [];\n  this.chainData = chain !== null && chain !== void 0 ? chain : {};\n  this.consensusData = consensus !== null && consensus !== void 0 ? consensus : {};\n  this._defaultAccount = defaultAccount !== null && defaultAccount !== void 0 ? defaultAccount : {};\n  this.account = {\n    get: function () {\n      var _get = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(address) {\n        var account;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                account = _this.accountData.find(function (acc) {\n                  return acc.address.equals(address);\n                });\n\n                if (account) {\n                  _context.next = 3;\n                  break;\n                }\n\n                throw new Error('Account not defined');\n\n              case 3:\n                return _context.abrupt(\"return\", lisk_utils_1.objects.cloneDeep(account));\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function get(_x) {\n        return _get.apply(this, arguments);\n      }\n\n      return get;\n    }(),\n    getOrDefault: function () {\n      var _getOrDefault = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(address) {\n        var account;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                account = _this.accountData.find(function (acc) {\n                  return acc.address.equals(address);\n                });\n\n                if (account) {\n                  _context2.next = 3;\n                  break;\n                }\n\n                return _context2.abrupt(\"return\", lisk_utils_1.objects.cloneDeep(_objectSpread(_objectSpread({}, _this._defaultAccount), {}, {\n                  address: address\n                })));\n\n              case 3:\n                return _context2.abrupt(\"return\", lisk_utils_1.objects.cloneDeep(account));\n\n              case 4:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function getOrDefault(_x2) {\n        return _getOrDefault.apply(this, arguments);\n      }\n\n      return getOrDefault;\n    }(),\n    getUpdated: function getUpdated() {\n      return _this.accountData;\n    },\n    set: function () {\n      var _set = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(address, account) {\n        var index;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                index = _this.accountData.findIndex(function (acc) {\n                  return acc.address.equals(address);\n                });\n\n                if (!(index > -1)) {\n                  _context3.next = 4;\n                  break;\n                }\n\n                _this.accountData[index] = account;\n                return _context3.abrupt(\"return\");\n\n              case 4:\n                _this.accountData.push(account);\n\n              case 5:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      function set(_x3, _x4) {\n        return _set.apply(this, arguments);\n      }\n\n      return set;\n    }(),\n    del: function () {\n      var _del = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(address) {\n        var index;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                index = _this.accountData.findIndex(function (acc) {\n                  return acc.address.equals(address);\n                });\n\n                if (!(index < 0)) {\n                  _context4.next = 3;\n                  break;\n                }\n\n                throw new Error('Cannot delete not existing account');\n\n              case 3:\n                _this.accountData.splice(index, 1);\n\n              case 4:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      }));\n\n      function del(_x5) {\n        return _del.apply(this, arguments);\n      }\n\n      return del;\n    }()\n  };\n  this.chain = {\n    networkIdentifier: networkIdentifier !== null && networkIdentifier !== void 0 ? networkIdentifier : defaultNetworkIdentifier,\n    lastBlockHeaders: (_b = lastBlockHeaders) !== null && _b !== void 0 ? _b : [],\n    lastBlockReward: lastBlockReward !== null && lastBlockReward !== void 0 ? lastBlockReward : BigInt(0),\n    get: function () {\n      var _get2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(key) {\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                return _context5.abrupt(\"return\", Promise.resolve(lisk_utils_1.objects.cloneDeep(_this.chainData[key])));\n\n              case 1:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5);\n      }));\n\n      function get(_x6) {\n        return _get2.apply(this, arguments);\n      }\n\n      return get;\n    }(),\n    set: function () {\n      var _set2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6(key, value) {\n        return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                _this.chainData[key] = value;\n\n              case 1:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6);\n      }));\n\n      function set(_x7, _x8) {\n        return _set2.apply(this, arguments);\n      }\n\n      return set;\n    }()\n  };\n  this.consensus = {\n    get: function () {\n      var _get3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee7(key) {\n        return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                return _context7.abrupt(\"return\", Promise.resolve(lisk_utils_1.objects.cloneDeep(_this.consensusData[key])));\n\n              case 1:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7);\n      }));\n\n      function get(_x9) {\n        return _get3.apply(this, arguments);\n      }\n\n      return get;\n    }(),\n    set: function () {\n      var _set3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee8(key, value) {\n        return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                _this.consensusData[key] = value;\n\n              case 1:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, _callee8);\n      }));\n\n      function set(_x10, _x11) {\n        return _set3.apply(this, arguments);\n      }\n\n      return set;\n    }()\n  };\n};\n\nexports.StateStoreMock = StateStoreMock;","map":{"version":3,"sources":["../../../src/testing/mocks/state_store_mock.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.StateStoreMock = void 0;\nconst lisk_utils_1 = require(\"@liskhq/lisk-utils\");\nconst defaultNetworkIdentifier = Buffer.from('', 'hex');\nclass StateStoreMock {\n    constructor({ accounts, chain, consensus, defaultAccount, lastBlockHeaders, lastBlockReward, networkIdentifier, } = {}) {\n        var _a, _b;\n        this.accountData = (_a = accounts === null || accounts === void 0 ? void 0 : accounts.map(a => ({ ...a }))) !== null && _a !== void 0 ? _a : [];\n        this.chainData = chain !== null && chain !== void 0 ? chain : {};\n        this.consensusData = consensus !== null && consensus !== void 0 ? consensus : {};\n        this._defaultAccount = defaultAccount !== null && defaultAccount !== void 0 ? defaultAccount : {};\n        this.account = {\n            get: async (address) => {\n                const account = this.accountData.find(acc => acc.address.equals(address));\n                if (!account) {\n                    throw new Error('Account not defined');\n                }\n                return lisk_utils_1.objects.cloneDeep(account);\n            },\n            getOrDefault: async (address) => {\n                const account = this.accountData.find(acc => acc.address.equals(address));\n                if (!account) {\n                    return lisk_utils_1.objects.cloneDeep({ ...this._defaultAccount, address });\n                }\n                return lisk_utils_1.objects.cloneDeep(account);\n            },\n            getUpdated: () => this.accountData,\n            set: async (address, account) => {\n                const index = this.accountData.findIndex(acc => acc.address.equals(address));\n                if (index > -1) {\n                    this.accountData[index] = account;\n                    return;\n                }\n                this.accountData.push(account);\n            },\n            del: async (address) => {\n                const index = this.accountData.findIndex(acc => acc.address.equals(address));\n                if (index < 0) {\n                    throw new Error('Cannot delete not existing account');\n                }\n                this.accountData.splice(index, 1);\n            },\n        };\n        this.chain = {\n            networkIdentifier: networkIdentifier !== null && networkIdentifier !== void 0 ? networkIdentifier : defaultNetworkIdentifier,\n            lastBlockHeaders: (_b = lastBlockHeaders) !== null && _b !== void 0 ? _b : [],\n            lastBlockReward: lastBlockReward !== null && lastBlockReward !== void 0 ? lastBlockReward : BigInt(0),\n            get: async (key) => Promise.resolve(lisk_utils_1.objects.cloneDeep(this.chainData[key])),\n            set: async (key, value) => {\n                this.chainData[key] = value;\n            },\n        };\n        this.consensus = {\n            get: async (key) => Promise.resolve(lisk_utils_1.objects.cloneDeep(this.consensusData[key])),\n            set: async (key, value) => {\n                this.consensusData[key] = value;\n            },\n        };\n    }\n}\nexports.StateStoreMock = StateStoreMock;\n//# sourceMappingURL=state_store_mock.js.map"]},"metadata":{},"sourceType":"script"}