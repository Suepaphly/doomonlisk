{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"/home/lisk/doomonlisk/src/app/build/react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _objectSpread = require(\"/home/lisk/doomonlisk/src/app/build/react-app/node_modules/@babel/runtime/helpers/objectSpread2\");\n\nvar _asyncToGenerator = require(\"/home/lisk/doomonlisk/src/app/build/react-app/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getForgers = void 0;\n\nvar getForgers = function getForgers(channel, codec) {\n  return /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_req, res, next) {\n      var forgersFrameworkInfo, forgerAccounts, data, i, account;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return channel.invoke('app:getForgers');\n\n            case 3:\n              forgersFrameworkInfo = _context.sent;\n              _context.next = 10;\n              break;\n\n            case 6:\n              _context.prev = 6;\n              _context.t0 = _context[\"catch\"](0);\n              next(_context.t0);\n              return _context.abrupt(\"return\");\n\n            case 10:\n              _context.prev = 10;\n              _context.next = 13;\n              return channel.invoke('app:getAccounts', {\n                address: forgersFrameworkInfo.map(function (info) {\n                  return info.address;\n                })\n              });\n\n            case 13:\n              forgerAccounts = _context.sent;\n              data = [];\n\n              for (i = 0; i < forgerAccounts.length; i += 1) {\n                account = codec.decodeAccount(forgerAccounts[i]);\n                data.push(_objectSpread({\n                  username: account.dpos.delegate.username,\n                  totalVotesReceived: account.dpos.delegate.totalVotesReceived\n                }, forgersFrameworkInfo[i]));\n              }\n\n              res.status(200).json({\n                data: data,\n                meta: {\n                  count: forgerAccounts.length\n                }\n              });\n              _context.next = 22;\n              break;\n\n            case 19:\n              _context.prev = 19;\n              _context.t1 = _context[\"catch\"](10);\n              next(_context.t1);\n\n            case 22:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 6], [10, 19]]);\n    }));\n\n    return function (_x, _x2, _x3) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n};\n\nexports.getForgers = getForgers;","map":{"version":3,"sources":["../../src/controllers/forgers.ts"],"names":[],"mappings":";;;;;;;;;;;;;AAyBO,IAAM,UAAU,GAAG,SAAb,UAAa,CAAC,OAAD,EAAuB,KAAvB;AAAA;AAAA,wEAA8C,iBACvE,IADuE,EAEvE,GAFuE,EAGvE,IAHuE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAOzC,OAAO,CAAC,MAAR,CAAe,gBAAf,CAPyC;;AAAA;AAOtE,cAAA,oBAPsE;AAAA;AAAA;;AAAA;AAAA;AAAA;AAStE,cAAA,IAAI,aAAJ;AATsE;;AAAA;AAAA;AAAA;AAAA,qBAazC,OAAO,CAAC,MAAR,CAAyB,iBAAzB,EAA4C;AACxE,gBAAA,OAAO,EAAE,oBAAoB,CAAC,GAArB,CAAyB,UAAA,IAAI;AAAA,yBAAI,IAAI,CAAC,OAAT;AAAA,iBAA7B;AAD+D,eAA5C,CAbyC;;AAAA;AAahE,cAAA,cAbgE;AAiBhE,cAAA,IAjBgE,GAiBzD,EAjByD;;AAkBtE,mBAAS,CAAT,GAAa,CAAb,EAAgB,CAAC,GAAG,cAAc,CAAC,MAAnC,EAA2C,CAAC,IAAI,CAAhD,EAAmD;AAC5C,gBAAA,OAD4C,GAClC,KAAK,CAAC,aAAN,CAAqC,cAAc,CAAC,CAAD,CAAnD,CADkC;AAGlD,gBAAA,IAAI,CAAC,IAAL;AACC,kBAAA,QAAQ,EAAE,OAAO,CAAC,IAAR,CAAa,QAAb,CAAsB,QADjC;AAEC,kBAAA,kBAAkB,EAAE,OAAO,CAAC,IAAR,CAAa,QAAb,CAAsB;AAF3C,mBAGI,oBAAoB,CAAC,CAAD,CAHxB;AAKA;;AAED,cAAA,GAAG,CAAC,MAAJ,CAAW,GAAX,EAAgB,IAAhB,CAAqB;AAAE,gBAAA,IAAI,EAAJ,IAAF;AAAQ,gBAAA,IAAI,EAAE;AAAE,kBAAA,KAAK,EAAE,cAAc,CAAC;AAAxB;AAAd,eAArB;AA5BsE;AAAA;;AAAA;AAAA;AAAA;AA8BtE,cAAA,IAAI,aAAJ;;AA9BsE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA9C;;AAAA;AAAA;AAAA;AAAA;AAAA,CAAnB;;AAAM,OAAA,CAAA,UAAA,GAAU,UAAV","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getForgers = void 0;\nconst getForgers = (channel, codec) => async (_req, res, next) => {\n    let forgersFrameworkInfo;\n    try {\n        forgersFrameworkInfo = await channel.invoke('app:getForgers');\n    }\n    catch (err) {\n        next(err);\n        return;\n    }\n    try {\n        const forgerAccounts = await channel.invoke('app:getAccounts', {\n            address: forgersFrameworkInfo.map(info => info.address),\n        });\n        const data = [];\n        for (let i = 0; i < forgerAccounts.length; i += 1) {\n            const account = codec.decodeAccount(forgerAccounts[i]);\n            data.push({\n                username: account.dpos.delegate.username,\n                totalVotesReceived: account.dpos.delegate.totalVotesReceived,\n                ...forgersFrameworkInfo[i],\n            });\n        }\n        res.status(200).json({ data, meta: { count: forgerAccounts.length } });\n    }\n    catch (err) {\n        next(err);\n    }\n};\nexports.getForgers = getForgers;\n//# sourceMappingURL=forgers.js.map"]},"metadata":{},"sourceType":"script"}