{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"/home/lisk/doomonlisk/src/app/build/react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _asyncToGenerator = require(\"/home/lisk/doomonlisk/src/app/build/react-app/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nvar _classCallCheck = require(\"/home/lisk/doomonlisk/src/app/build/react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/home/lisk/doomonlisk/src/app/build/react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _inherits = require(\"/home/lisk/doomonlisk/src/app/build/react-app/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _createSuper = require(\"/home/lisk/doomonlisk/src/app/build/react-app/node_modules/@babel/runtime/helpers/createSuper\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.HTTPAPIPlugin = void 0;\n\nvar lisk_framework_1 = require(\"lisk-framework\");\n\nvar lisk_utils_1 = require(\"@liskhq/lisk-utils\");\n\nvar express = require(\"express\");\n\nvar cors = require(\"cors\");\n\nvar rateLimit = require(\"express-rate-limit\");\n\nvar controllers = require(\"./controllers\");\n\nvar middlewares = require(\"./middlewares\");\n\nvar config = require(\"./defaults\");\n\nvar pJSON = require('../package.json');\n\nvar HTTPAPIPlugin = /*#__PURE__*/function (_lisk_framework_1$Bas) {\n  _inherits(HTTPAPIPlugin, _lisk_framework_1$Bas);\n\n  var _super = _createSuper(HTTPAPIPlugin);\n\n  function HTTPAPIPlugin() {\n    _classCallCheck(this, HTTPAPIPlugin);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(HTTPAPIPlugin, [{\n    key: \"defaults\",\n    get: function get() {\n      return config.defaultConfig;\n    }\n  }, {\n    key: \"events\",\n    get: function get() {\n      return [];\n    }\n  }, {\n    key: \"actions\",\n    get: function get() {\n      return {};\n    }\n  }, {\n    key: \"load\",\n    value: function () {\n      var _load = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(channel) {\n        var _this = this;\n\n        var options;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                this._app = express();\n                options = lisk_utils_1.objects.mergeDeep({}, config.defaultConfig.default, this.options);\n                this._channel = channel;\n\n                this._channel.once('app:ready', function () {\n                  _this._registerMiddlewares(options);\n\n                  _this._registerControllers();\n\n                  _this._registerAfterMiddlewares(options);\n\n                  _this._server = _this._app.listen(options.port, options.host);\n                });\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function load(_x) {\n        return _load.apply(this, arguments);\n      }\n\n      return load;\n    }()\n  }, {\n    key: \"unload\",\n    value: function () {\n      var _unload = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        var _this2 = this;\n\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return new Promise(function (resolve, reject) {\n                  _this2._server.close(function (err) {\n                    if (err) {\n                      reject(err);\n                      return;\n                    }\n\n                    resolve();\n                  });\n                });\n\n              case 2:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function unload() {\n        return _unload.apply(this, arguments);\n      }\n\n      return unload;\n    }()\n  }, {\n    key: \"_registerMiddlewares\",\n    value: function _registerMiddlewares(options) {\n      this._app.use(cors(options.cors));\n\n      this._app.use(express.json());\n\n      this._app.use(rateLimit(options.limits));\n\n      this._app.use(middlewares.whiteListMiddleware(options));\n    }\n  }, {\n    key: \"_registerAfterMiddlewares\",\n    value: function _registerAfterMiddlewares(_options) {\n      this._app.use(middlewares.errorMiddleware());\n    }\n  }, {\n    key: \"_registerControllers\",\n    value: function _registerControllers() {\n      this._app.get('/api/transactions/:id', controllers.transactions.getTransaction(this._channel, this.codec));\n\n      this._app.post('/api/transactions', controllers.transactions.postTransaction(this._channel, this.codec));\n\n      this._app.get('/api/accounts/:address', controllers.accounts.getAccount(this._channel, this.codec));\n\n      this._app.get('/api/node/info', controllers.node.getNodeInfo(this._channel));\n\n      this._app.get('/api/blocks/:id', controllers.blocks.getBlockById(this._channel, this.codec));\n\n      this._app.get('/api/blocks', controllers.blocks.getBlockByHeight(this._channel, this.codec));\n\n      this._app.get('/api/node/transactions', controllers.node.getTransactions(this._channel, this.codec));\n\n      this._app.get('/api/peers', controllers.peers.getPeers(this._channel));\n\n      this._app.get('/api/delegates', controllers.delegates.getDelegates(this._channel, this.codec));\n\n      this._app.get('/api/forgers', controllers.forgers.getForgers(this._channel, this.codec));\n\n      this._app.get('/api/forging/info', controllers.forging.getForgingStatus(this._channel));\n\n      this._app.patch('/api/forging', controllers.forging.updateForging(this._channel));\n    }\n  }], [{\n    key: \"alias\",\n    get: function get() {\n      return 'httpApi';\n    }\n  }, {\n    key: \"info\",\n    get: function get() {\n      return {\n        author: pJSON.author,\n        version: pJSON.version,\n        name: pJSON.name\n      };\n    }\n  }]);\n\n  return HTTPAPIPlugin;\n}(lisk_framework_1.BasePlugin);\n\nexports.HTTPAPIPlugin = HTTPAPIPlugin;","map":{"version":3,"sources":["../src/http_api_plugin.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.HTTPAPIPlugin = void 0;\nconst lisk_framework_1 = require(\"lisk-framework\");\nconst lisk_utils_1 = require(\"@liskhq/lisk-utils\");\nconst express = require(\"express\");\nconst cors = require(\"cors\");\nconst rateLimit = require(\"express-rate-limit\");\nconst controllers = require(\"./controllers\");\nconst middlewares = require(\"./middlewares\");\nconst config = require(\"./defaults\");\nconst pJSON = require('../package.json');\nclass HTTPAPIPlugin extends lisk_framework_1.BasePlugin {\n    static get alias() {\n        return 'httpApi';\n    }\n    static get info() {\n        return {\n            author: pJSON.author,\n            version: pJSON.version,\n            name: pJSON.name,\n        };\n    }\n    get defaults() {\n        return config.defaultConfig;\n    }\n    get events() {\n        return [];\n    }\n    get actions() {\n        return {};\n    }\n    async load(channel) {\n        this._app = express();\n        const options = lisk_utils_1.objects.mergeDeep({}, config.defaultConfig.default, this.options);\n        this._channel = channel;\n        this._channel.once('app:ready', () => {\n            this._registerMiddlewares(options);\n            this._registerControllers();\n            this._registerAfterMiddlewares(options);\n            this._server = this._app.listen(options.port, options.host);\n        });\n    }\n    async unload() {\n        await new Promise((resolve, reject) => {\n            this._server.close(err => {\n                if (err) {\n                    reject(err);\n                    return;\n                }\n                resolve();\n            });\n        });\n    }\n    _registerMiddlewares(options) {\n        this._app.use(cors(options.cors));\n        this._app.use(express.json());\n        this._app.use(rateLimit(options.limits));\n        this._app.use(middlewares.whiteListMiddleware(options));\n    }\n    _registerAfterMiddlewares(_options) {\n        this._app.use(middlewares.errorMiddleware());\n    }\n    _registerControllers() {\n        this._app.get('/api/transactions/:id', controllers.transactions.getTransaction(this._channel, this.codec));\n        this._app.post('/api/transactions', controllers.transactions.postTransaction(this._channel, this.codec));\n        this._app.get('/api/accounts/:address', controllers.accounts.getAccount(this._channel, this.codec));\n        this._app.get('/api/node/info', controllers.node.getNodeInfo(this._channel));\n        this._app.get('/api/blocks/:id', controllers.blocks.getBlockById(this._channel, this.codec));\n        this._app.get('/api/blocks', controllers.blocks.getBlockByHeight(this._channel, this.codec));\n        this._app.get('/api/node/transactions', controllers.node.getTransactions(this._channel, this.codec));\n        this._app.get('/api/peers', controllers.peers.getPeers(this._channel));\n        this._app.get('/api/delegates', controllers.delegates.getDelegates(this._channel, this.codec));\n        this._app.get('/api/forgers', controllers.forgers.getForgers(this._channel, this.codec));\n        this._app.get('/api/forging/info', controllers.forging.getForgingStatus(this._channel));\n        this._app.patch('/api/forging', controllers.forging.updateForging(this._channel));\n    }\n}\nexports.HTTPAPIPlugin = HTTPAPIPlugin;\n//# sourceMappingURL=http_api_plugin.js.map"]},"metadata":{},"sourceType":"script"}