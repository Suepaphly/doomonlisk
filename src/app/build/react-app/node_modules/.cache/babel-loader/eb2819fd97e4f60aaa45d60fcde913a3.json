{"ast":null,"code":"var fs = require('fs');\n\nvar path = require('path');\n\nvar os = require('os'); // Workaround to fix webpack's build warnings: 'the request of a dependency is an expression'\n\n\nvar runtimeRequire = typeof __webpack_require__ === 'function' ? __non_webpack_require__ : require; // eslint-disable-line\n\nvar prebuildsOnly = !!process.env.PREBUILDS_ONLY;\nvar abi = process.versions.modules; // TODO: support old node where this is undef\n\nvar runtime = isElectron() ? 'electron' : 'node';\nvar arch = os.arch();\nvar platform = os.platform();\nvar libc = process.env.LIBC || (isAlpine(platform) ? 'musl' : 'glibc');\nvar armv = process.env.ARM_VERSION || (arch === 'arm64' ? '8' : process.config.variables.arm_version) || '';\nvar uv = (process.versions.uv || '').split('.')[0];\nmodule.exports = load;\n\nfunction load(dir) {\n  return runtimeRequire(load.path(dir));\n}\n\nload.path = function (dir) {\n  dir = path.resolve(dir || '.');\n\n  try {\n    var name = runtimeRequire(path.join(dir, 'package.json')).name.toUpperCase().replace(/-/g, '_');\n    if (process.env[name + '_PREBUILD']) dir = process.env[name + '_PREBUILD'];\n  } catch (err) {}\n\n  if (!prebuildsOnly) {\n    var release = getFirst(path.join(dir, 'build/Release'), matchBuild);\n    if (release) return release;\n    var debug = getFirst(path.join(dir, 'build/Debug'), matchBuild);\n    if (debug) return debug;\n  } // Find most specific flavor first\n\n\n  var prebuilds = path.join(dir, 'prebuilds', platform + '-' + arch);\n  var parsed = readdirSync(prebuilds).map(parseTags);\n  var candidates = parsed.filter(matchTags(runtime, abi));\n  var winner = candidates.sort(compareTags(runtime))[0];\n  if (winner) return path.join(prebuilds, winner.file);\n  var target = ['platform=' + platform, 'arch=' + arch, 'runtime=' + runtime, 'abi=' + abi, 'uv=' + uv, armv ? 'armv=' + armv : '', 'libc=' + libc].filter(Boolean).join(' ');\n  throw new Error('No native build was found for ' + target);\n};\n\nfunction readdirSync(dir) {\n  try {\n    return fs.readdirSync(dir);\n  } catch (err) {\n    return [];\n  }\n}\n\nfunction getFirst(dir, filter) {\n  var files = readdirSync(dir).filter(filter);\n  return files[0] && path.join(dir, files[0]);\n}\n\nfunction matchBuild(name) {\n  return /\\.node$/.test(name);\n}\n\nfunction parseTags(file) {\n  var arr = file.split('.');\n  var extension = arr.pop();\n  var tags = {\n    file: file,\n    specificity: 0\n  };\n  if (extension !== 'node') return;\n\n  for (var i = 0; i < arr.length; i++) {\n    var tag = arr[i];\n\n    if (tag === 'node' || tag === 'electron' || tag === 'node-webkit') {\n      tags.runtime = tag;\n    } else if (tag === 'napi') {\n      tags.napi = true;\n    } else if (tag.slice(0, 3) === 'abi') {\n      tags.abi = tag.slice(3);\n    } else if (tag.slice(0, 2) === 'uv') {\n      tags.uv = tag.slice(2);\n    } else if (tag.slice(0, 4) === 'armv') {\n      tags.armv = tag.slice(4);\n    } else if (tag === 'glibc' || tag === 'musl') {\n      tags.libc = tag;\n    } else {\n      continue;\n    }\n\n    tags.specificity++;\n  }\n\n  return tags;\n}\n\nfunction matchTags(runtime, abi) {\n  return function (tags) {\n    if (tags == null) return false;\n    if (tags.runtime !== runtime && !runtimeAgnostic(tags)) return false;\n    if (tags.abi !== abi && !tags.napi) return false;\n    if (tags.uv && tags.uv !== uv) return false;\n    if (tags.armv && tags.armv !== armv) return false;\n    if (tags.libc && tags.libc !== libc) return false;\n    return true;\n  };\n}\n\nfunction runtimeAgnostic(tags) {\n  return tags.runtime === 'node' && tags.napi;\n}\n\nfunction compareTags(runtime) {\n  // Precedence: non-agnostic runtime, abi over napi, then by specificity.\n  return function (a, b) {\n    if (a.runtime !== b.runtime) {\n      return a.runtime === runtime ? -1 : 1;\n    } else if (a.abi !== b.abi) {\n      return a.abi ? -1 : 1;\n    } else if (a.specificity !== b.specificity) {\n      return a.specificity > b.specificity ? -1 : 1;\n    } else {\n      return 0;\n    }\n  };\n}\n\nfunction isElectron() {\n  if (process.versions && process.versions.electron) return true;\n  if (process.env.ELECTRON_RUN_AS_NODE) return true;\n  return typeof window !== 'undefined' && window.process && window.process.type === 'renderer';\n}\n\nfunction isAlpine(platform) {\n  return platform === 'linux' && fs.existsSync('/etc/alpine-release');\n} // Exposed for unit tests\n// TODO: move to lib\n\n\nload.parseTags = parseTags;\nload.matchTags = matchTags;\nload.compareTags = compareTags;","map":{"version":3,"sources":["/home/lisk/doomonlisk/node_modules/node-gyp-build/index.js"],"names":["fs","require","path","os","runtimeRequire","__webpack_require__","__non_webpack_require__","prebuildsOnly","process","env","PREBUILDS_ONLY","abi","versions","modules","runtime","isElectron","arch","platform","libc","LIBC","isAlpine","armv","ARM_VERSION","config","variables","arm_version","uv","split","module","exports","load","dir","resolve","name","join","toUpperCase","replace","err","release","getFirst","matchBuild","debug","prebuilds","parsed","readdirSync","map","parseTags","candidates","filter","matchTags","winner","sort","compareTags","file","target","Boolean","Error","files","test","arr","extension","pop","tags","specificity","i","length","tag","napi","slice","runtimeAgnostic","a","b","electron","ELECTRON_RUN_AS_NODE","window","type","existsSync"],"mappings":"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","sourcesContent":["var fs = require('fs')\nvar path = require('path')\nvar os = require('os')\n\n// Workaround to fix webpack's build warnings: 'the request of a dependency is an expression'\nvar runtimeRequire = typeof __webpack_require__ === 'function' ? __non_webpack_require__ : require // eslint-disable-line\n\nvar prebuildsOnly = !!process.env.PREBUILDS_ONLY\nvar abi = process.versions.modules // TODO: support old node where this is undef\nvar runtime = isElectron() ? 'electron' : 'node'\nvar arch = os.arch()\nvar platform = os.platform()\nvar libc = process.env.LIBC || (isAlpine(platform) ? 'musl' : 'glibc')\nvar armv = process.env.ARM_VERSION || (arch === 'arm64' ? '8' : process.config.variables.arm_version) || ''\nvar uv = (process.versions.uv || '').split('.')[0]\n\nmodule.exports = load\n\nfunction load (dir) {\n  return runtimeRequire(load.path(dir))\n}\n\nload.path = function (dir) {\n  dir = path.resolve(dir || '.')\n\n  try {\n    var name = runtimeRequire(path.join(dir, 'package.json')).name.toUpperCase().replace(/-/g, '_')\n    if (process.env[name + '_PREBUILD']) dir = process.env[name + '_PREBUILD']\n  } catch (err) {}\n\n  if (!prebuildsOnly) {\n    var release = getFirst(path.join(dir, 'build/Release'), matchBuild)\n    if (release) return release\n\n    var debug = getFirst(path.join(dir, 'build/Debug'), matchBuild)\n    if (debug) return debug\n  }\n\n  // Find most specific flavor first\n  var prebuilds = path.join(dir, 'prebuilds', platform + '-' + arch)\n  var parsed = readdirSync(prebuilds).map(parseTags)\n  var candidates = parsed.filter(matchTags(runtime, abi))\n  var winner = candidates.sort(compareTags(runtime))[0]\n  if (winner) return path.join(prebuilds, winner.file)\n\n  var target = [\n    'platform=' + platform,\n    'arch=' + arch,\n    'runtime=' + runtime,\n    'abi=' + abi,\n    'uv=' + uv,\n    armv ? 'armv=' + armv : '',\n    'libc=' + libc\n  ].filter(Boolean).join(' ')\n\n  throw new Error('No native build was found for ' + target)\n}\n\nfunction readdirSync (dir) {\n  try {\n    return fs.readdirSync(dir)\n  } catch (err) {\n    return []\n  }\n}\n\nfunction getFirst (dir, filter) {\n  var files = readdirSync(dir).filter(filter)\n  return files[0] && path.join(dir, files[0])\n}\n\nfunction matchBuild (name) {\n  return /\\.node$/.test(name)\n}\n\nfunction parseTags (file) {\n  var arr = file.split('.')\n  var extension = arr.pop()\n  var tags = { file: file, specificity: 0 }\n\n  if (extension !== 'node') return\n\n  for (var i = 0; i < arr.length; i++) {\n    var tag = arr[i]\n\n    if (tag === 'node' || tag === 'electron' || tag === 'node-webkit') {\n      tags.runtime = tag\n    } else if (tag === 'napi') {\n      tags.napi = true\n    } else if (tag.slice(0, 3) === 'abi') {\n      tags.abi = tag.slice(3)\n    } else if (tag.slice(0, 2) === 'uv') {\n      tags.uv = tag.slice(2)\n    } else if (tag.slice(0, 4) === 'armv') {\n      tags.armv = tag.slice(4)\n    } else if (tag === 'glibc' || tag === 'musl') {\n      tags.libc = tag\n    } else {\n      continue\n    }\n\n    tags.specificity++\n  }\n\n  return tags\n}\n\nfunction matchTags (runtime, abi) {\n  return function (tags) {\n    if (tags == null) return false\n    if (tags.runtime !== runtime && !runtimeAgnostic(tags)) return false\n    if (tags.abi !== abi && !tags.napi) return false\n    if (tags.uv && tags.uv !== uv) return false\n    if (tags.armv && tags.armv !== armv) return false\n    if (tags.libc && tags.libc !== libc) return false\n\n    return true\n  }\n}\n\nfunction runtimeAgnostic (tags) {\n  return tags.runtime === 'node' && tags.napi\n}\n\nfunction compareTags (runtime) {\n  // Precedence: non-agnostic runtime, abi over napi, then by specificity.\n  return function (a, b) {\n    if (a.runtime !== b.runtime) {\n      return a.runtime === runtime ? -1 : 1\n    } else if (a.abi !== b.abi) {\n      return a.abi ? -1 : 1\n    } else if (a.specificity !== b.specificity) {\n      return a.specificity > b.specificity ? -1 : 1\n    } else {\n      return 0\n    }\n  }\n}\n\nfunction isElectron () {\n  if (process.versions && process.versions.electron) return true\n  if (process.env.ELECTRON_RUN_AS_NODE) return true\n  return typeof window !== 'undefined' && window.process && window.process.type === 'renderer'\n}\n\nfunction isAlpine (platform) {\n  return platform === 'linux' && fs.existsSync('/etc/alpine-release')\n}\n\n// Exposed for unit tests\n// TODO: move to lib\nload.parseTags = parseTags\nload.matchTags = matchTags\nload.compareTags = compareTags\n"]},"metadata":{},"sourceType":"script"}