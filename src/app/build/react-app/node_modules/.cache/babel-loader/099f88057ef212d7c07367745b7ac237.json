{"ast":null,"code":"var fs = require('fs');\n\nvar ncp = require('ncp').ncp;\n\nvar path = require('path');\n\nvar rimraf = require('rimraf');\n\nvar mkdirp = require('mkdirp');\n\nmodule.exports = mv;\n\nfunction mv(source, dest, options, cb) {\n  if (typeof options === 'function') {\n    cb = options;\n    options = {};\n  }\n\n  var shouldMkdirp = !!options.mkdirp;\n  var clobber = options.clobber !== false;\n  var limit = options.limit || 16;\n\n  if (shouldMkdirp) {\n    mkdirs();\n  } else {\n    doRename();\n  }\n\n  function mkdirs() {\n    mkdirp(path.dirname(dest), function (err) {\n      if (err) return cb(err);\n      doRename();\n    });\n  }\n\n  function doRename() {\n    if (clobber) {\n      fs.rename(source, dest, function (err) {\n        if (!err) return cb();\n        if (err.code !== 'EXDEV') return cb(err);\n        moveFileAcrossDevice(source, dest, clobber, limit, cb);\n      });\n    } else {\n      fs.link(source, dest, function (err) {\n        if (err) {\n          if (err.code === 'EXDEV') {\n            moveFileAcrossDevice(source, dest, clobber, limit, cb);\n            return;\n          }\n\n          if (err.code === 'EISDIR' || err.code === 'EPERM') {\n            moveDirAcrossDevice(source, dest, clobber, limit, cb);\n            return;\n          }\n\n          cb(err);\n          return;\n        }\n\n        fs.unlink(source, cb);\n      });\n    }\n  }\n}\n\nfunction moveFileAcrossDevice(source, dest, clobber, limit, cb) {\n  var outFlags = clobber ? 'w' : 'wx';\n  var ins = fs.createReadStream(source);\n  var outs = fs.createWriteStream(dest, {\n    flags: outFlags\n  });\n  ins.on('error', function (err) {\n    ins.destroy();\n    outs.destroy();\n    outs.removeListener('close', onClose);\n\n    if (err.code === 'EISDIR' || err.code === 'EPERM') {\n      moveDirAcrossDevice(source, dest, clobber, limit, cb);\n    } else {\n      cb(err);\n    }\n  });\n  outs.on('error', function (err) {\n    ins.destroy();\n    outs.destroy();\n    outs.removeListener('close', onClose);\n    cb(err);\n  });\n  outs.once('close', onClose);\n  ins.pipe(outs);\n\n  function onClose() {\n    fs.unlink(source, cb);\n  }\n}\n\nfunction moveDirAcrossDevice(source, dest, clobber, limit, cb) {\n  var options = {\n    stopOnErr: true,\n    clobber: false,\n    limit: limit\n  };\n\n  if (clobber) {\n    rimraf(dest, {\n      disableGlob: true\n    }, function (err) {\n      if (err) return cb(err);\n      startNcp();\n    });\n  } else {\n    startNcp();\n  }\n\n  function startNcp() {\n    ncp(source, dest, options, function (errList) {\n      if (errList) return cb(errList[0]);\n      rimraf(source, {\n        disableGlob: true\n      }, cb);\n    });\n  }\n}","map":{"version":3,"sources":["/home/lisk/doomonlisk/node_modules/mv/index.js"],"names":["fs","require","ncp","path","rimraf","mkdirp","module","exports","mv","source","dest","options","cb","shouldMkdirp","clobber","limit","mkdirs","doRename","dirname","err","rename","code","moveFileAcrossDevice","link","moveDirAcrossDevice","unlink","outFlags","ins","createReadStream","outs","createWriteStream","flags","on","destroy","removeListener","onClose","once","pipe","stopOnErr","disableGlob","startNcp","errList"],"mappings":"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","sourcesContent":["var fs = require('fs');\nvar ncp = require('ncp').ncp;\nvar path = require('path');\nvar rimraf = require('rimraf');\nvar mkdirp = require('mkdirp');\n\nmodule.exports = mv;\n\nfunction mv(source, dest, options, cb){\n  if (typeof options === 'function') {\n    cb = options;\n    options = {};\n  }\n  var shouldMkdirp = !!options.mkdirp;\n  var clobber = options.clobber !== false;\n  var limit = options.limit || 16;\n\n  if (shouldMkdirp) {\n    mkdirs();\n  } else {\n    doRename();\n  }\n\n  function mkdirs() {\n    mkdirp(path.dirname(dest), function(err) {\n      if (err) return cb(err);\n      doRename();\n    });\n  }\n\n  function doRename() {\n    if (clobber) {\n      fs.rename(source, dest, function(err) {\n        if (!err) return cb();\n        if (err.code !== 'EXDEV') return cb(err);\n        moveFileAcrossDevice(source, dest, clobber, limit, cb);\n      });\n    } else {\n      fs.link(source, dest, function(err) {\n        if (err) {\n          if (err.code === 'EXDEV') {\n            moveFileAcrossDevice(source, dest, clobber, limit, cb);\n            return;\n          }\n          if (err.code === 'EISDIR' || err.code === 'EPERM') {\n            moveDirAcrossDevice(source, dest, clobber, limit, cb);\n            return;\n          }\n          cb(err);\n          return;\n        }\n        fs.unlink(source, cb);\n      });\n    }\n  }\n}\n\nfunction moveFileAcrossDevice(source, dest, clobber, limit, cb) {\n  var outFlags = clobber ? 'w' : 'wx';\n  var ins = fs.createReadStream(source);\n  var outs = fs.createWriteStream(dest, {flags: outFlags});\n  ins.on('error', function(err){\n    ins.destroy();\n    outs.destroy();\n    outs.removeListener('close', onClose);\n    if (err.code === 'EISDIR' || err.code === 'EPERM') {\n      moveDirAcrossDevice(source, dest, clobber, limit, cb);\n    } else {\n      cb(err);\n    }\n  });\n  outs.on('error', function(err){\n    ins.destroy();\n    outs.destroy();\n    outs.removeListener('close', onClose);\n    cb(err);\n  });\n  outs.once('close', onClose);\n  ins.pipe(outs);\n  function onClose(){\n    fs.unlink(source, cb);\n  }\n}\n\nfunction moveDirAcrossDevice(source, dest, clobber, limit, cb) {\n  var options = {\n    stopOnErr: true,\n    clobber: false,\n    limit: limit,\n  };\n  if (clobber) {\n    rimraf(dest, { disableGlob: true }, function(err) {\n      if (err) return cb(err);\n      startNcp();\n    });\n  } else {\n    startNcp();\n  }\n  function startNcp() {\n    ncp(source, dest, options, function(errList) {\n      if (errList) return cb(errList[0]);\n      rimraf(source, { disableGlob: true }, cb);\n    });\n  }\n}\n"]},"metadata":{},"sourceType":"script"}