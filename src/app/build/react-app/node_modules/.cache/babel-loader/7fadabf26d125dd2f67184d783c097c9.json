{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"/home/lisk/doomonlisk/src/app/build/react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _asyncToGenerator = require(\"/home/lisk/doomonlisk/src/app/build/react-app/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getTransactionStats = void 0;\n\nvar getAverage = function getAverage(transactions) {\n  var transactionCount = 0;\n  var total = 0;\n\n  for (var _i = 0, _Object$values = Object.values(transactions); _i < _Object$values.length; _i++) {\n    var transactionStats = _Object$values[_i];\n    transactionCount += 1;\n    total += transactionStats.count;\n  }\n\n  return transactionCount ? total / transactionCount : 0;\n};\n\nvar getTransactionStats = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(channel, state) {\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.t0 = state.transactions;\n            _context.next = 3;\n            return channel.invoke('app:getConnectedPeers');\n\n          case 3:\n            _context.t1 = _context.sent.length;\n            _context.t2 = getAverage(state.transactions);\n            return _context.abrupt(\"return\", {\n              transactions: _context.t0,\n              connectedPeers: _context.t1,\n              averageReceivedTransactions: _context.t2\n            });\n\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function getTransactionStats(_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nexports.getTransactionStats = getTransactionStats;","map":{"version":3,"sources":["../../src/controllers/transactions.ts"],"names":[],"mappings":";;;;;;;;;;;AAsBA,IAAM,UAAU,GAAG,SAAb,UAAa,CAAC,YAAD,EAAsE;AACxF,MAAI,gBAAgB,GAAG,CAAvB;AACA,MAAI,KAAK,GAAG,CAAZ;;AAEA,oCAA+B,MAAM,CAAC,MAAP,CAAc,YAAd,CAA/B,oCAA4D;AAAvD,QAAM,gBAAgB,qBAAtB;AACJ,IAAA,gBAAgB,IAAI,CAApB;AACA,IAAA,KAAK,IAAI,gBAAgB,CAAC,KAA1B;AACA;;AAED,SAAO,gBAAgB,GAAG,KAAK,GAAG,gBAAX,GAA8B,CAArD;AACA,CAVD;;AAYO,IAAM,mBAAmB;AAAA,sEAAG,iBAClC,OADkC,EAElC,KAFkC;AAAA;AAAA;AAAA;AAAA;AAAA,0BAIpB,KAAK,CAAC,YAJc;AAAA;AAAA,mBAKX,OAAO,CAAC,MAAR,CAAwC,uBAAxC,CALW;;AAAA;AAAA,wCAKuD,MALvD;AAAA,0BAML,UAAU,CAAC,KAAK,CAAC,YAAP,CANL;AAAA;AAIlC,cAAA,YAJkC;AAKlC,cAAA,cALkC;AAMlC,cAAA,2BANkC;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAnB,mBAAmB;AAAA;AAAA;AAAA,GAAzB;;AAAM,OAAA,CAAA,mBAAA,GAAmB,mBAAnB","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getTransactionStats = void 0;\nconst getAverage = (transactions) => {\n    let transactionCount = 0;\n    let total = 0;\n    for (const transactionStats of Object.values(transactions)) {\n        transactionCount += 1;\n        total += transactionStats.count;\n    }\n    return transactionCount ? total / transactionCount : 0;\n};\nconst getTransactionStats = async (channel, state) => ({\n    transactions: state.transactions,\n    connectedPeers: (await channel.invoke('app:getConnectedPeers')).length,\n    averageReceivedTransactions: getAverage(state.transactions),\n});\nexports.getTransactionStats = getTransactionStats;\n//# sourceMappingURL=transactions.js.map"]},"metadata":{},"sourceType":"script"}