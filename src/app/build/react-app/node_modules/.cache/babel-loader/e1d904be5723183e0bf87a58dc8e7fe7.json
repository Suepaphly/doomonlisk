{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"/home/lisk/doomonlisk/src/app/build/react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _asyncToGenerator = require(\"/home/lisk/doomonlisk/src/app/build/react-app/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nvar _classCallCheck = require(\"/home/lisk/doomonlisk/src/app/build/react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/home/lisk/doomonlisk/src/app/build/react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _inherits = require(\"/home/lisk/doomonlisk/src/app/build/react-app/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _createSuper = require(\"/home/lisk/doomonlisk/src/app/build/react-app/node_modules/@babel/runtime/helpers/createSuper\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.InMemoryChannel = void 0;\n\nvar event_1 = require(\"../event\");\n\nvar action_1 = require(\"../action\");\n\nvar base_channel_1 = require(\"./base_channel\");\n\nvar InMemoryChannel = /*#__PURE__*/function (_base_channel_1$BaseC) {\n  _inherits(InMemoryChannel, _base_channel_1$BaseC);\n\n  var _super = _createSuper(InMemoryChannel);\n\n  function InMemoryChannel() {\n    _classCallCheck(this, InMemoryChannel);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(InMemoryChannel, [{\n    key: \"registerToBus\",\n    value: function () {\n      var _registerToBus = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(bus) {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                this.bus = bus;\n                _context.next = 3;\n                return this.bus.registerChannel(this.moduleAlias, this.eventsList, this.actions, {\n                  type: 'inMemory',\n                  channel: this\n                });\n\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function registerToBus(_x) {\n        return _registerToBus.apply(this, arguments);\n      }\n\n      return registerToBus;\n    }()\n  }, {\n    key: \"subscribe\",\n    value: function subscribe(eventName, cb) {\n      this.bus.subscribe(eventName, function (notificationObject) {\n        return setImmediate(cb, event_1.Event.fromJSONRPCNotification(notificationObject).data);\n      });\n    }\n  }, {\n    key: \"once\",\n    value: function once(eventName, cb) {\n      this.bus.once(eventName, function (notificationObject) {\n        return setImmediate(cb, event_1.Event.fromJSONRPCNotification(notificationObject).data);\n      });\n    }\n  }, {\n    key: \"publish\",\n    value: function publish(eventName, data) {\n      var event = new event_1.Event(eventName, data);\n\n      if (event.module !== this.moduleAlias) {\n        throw new Error(\"Event \\\"\".concat(eventName, \"\\\" not registered in \\\"\").concat(this.moduleAlias, \"\\\" module.\"));\n      }\n\n      this.bus.publish(event.toJSONRPCNotification());\n    }\n  }, {\n    key: \"invoke\",\n    value: function () {\n      var _invoke = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(actionName, params) {\n        var _a, action, handler;\n\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                action = new action_1.Action(null, actionName, params);\n\n                if (!(action.module === this.moduleAlias)) {\n                  _context2.next = 8;\n                  break;\n                }\n\n                if (!(this.actions[action.name] === undefined)) {\n                  _context2.next = 4;\n                  break;\n                }\n\n                throw new Error(\"The action '\".concat(action.name, \"' on module '\").concat(this.moduleAlias, \"' does not exist.\"));\n\n              case 4:\n                handler = (_a = this.actions[action.name]) === null || _a === void 0 ? void 0 : _a.handler;\n\n                if (handler) {\n                  _context2.next = 7;\n                  break;\n                }\n\n                throw new Error('Handler does not exist.');\n\n              case 7:\n                return _context2.abrupt(\"return\", handler(action.params));\n\n              case 8:\n                _context2.next = 10;\n                return this.bus.invoke(action.toJSONRPCRequest());\n\n              case 10:\n                return _context2.abrupt(\"return\", _context2.sent.result);\n\n              case 11:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function invoke(_x2, _x3) {\n        return _invoke.apply(this, arguments);\n      }\n\n      return invoke;\n    }()\n  }]);\n\n  return InMemoryChannel;\n}(base_channel_1.BaseChannel);\n\nexports.InMemoryChannel = InMemoryChannel;","map":{"version":3,"sources":["../../../src/controller/channels/in_memory_channel.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAcA,IAAA,OAAA,GAAA,OAAA,CAAA,UAAA,CAAA;;AACA,IAAA,QAAA,GAAA,OAAA,CAAA,WAAA,CAAA;;AACA,IAAA,cAAA,GAAA,OAAA,CAAA,gBAAA,CAAA;;IAIa,e;;;;;;;;;;;;;;oFAGL,iBAAoB,GAApB;AAAA;AAAA;AAAA;AAAA;AACN,qBAAK,GAAL,GAAW,GAAX;AADM;AAAA,uBAGA,KAAK,GAAL,CAAS,eAAT,CAAyB,KAAK,WAA9B,EAA2C,KAAK,UAAhD,EAA4D,KAAK,OAAjE,EAA0E;AAC/E,kBAAA,IAAI,EAAE,UADyE;AAE/E,kBAAA,OAAO,EAAE;AAFsE,iBAA1E,CAHA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;;;;WASA,mBAAU,SAAV,EAA6B,EAA7B,EAA8C;AACpD,WAAK,GAAL,CAAS,SAAT,CAAmB,SAAnB,EAA8B,UAAC,kBAAD;AAAA,eAE7B,YAAY,CAAC,EAAD,EAAK,OAAA,CAAA,KAAA,CAAM,uBAAN,CAA8B,kBAA9B,EAAkD,IAAvD,CAFiB;AAAA,OAA9B;AAIA;;;WAEM,cAAK,SAAL,EAAwB,EAAxB,EAAyC;AAC/C,WAAK,GAAL,CAAS,IAAT,CAAc,SAAd,EAAyB,UAAC,kBAAD;AAAA,eAExB,YAAY,CAAC,EAAD,EAAK,OAAA,CAAA,KAAA,CAAM,uBAAN,CAA8B,kBAA9B,EAAkD,IAAvD,CAFY;AAAA,OAAzB;AAIA;;;WAEM,iBAAQ,SAAR,EAA2B,IAA3B,EAAyD;AAC/D,UAAM,KAAK,GAAG,IAAI,OAAA,CAAA,KAAJ,CAAU,SAAV,EAAqB,IAArB,CAAd;;AAEA,UAAI,KAAK,CAAC,MAAN,KAAiB,KAAK,WAA1B,EAAuC;AACtC,cAAM,IAAI,KAAJ,mBAAoB,SAApB,oCAAqD,KAAK,WAA1D,gBAAN;AACA;;AAED,WAAK,GAAL,CAAS,OAAT,CAAiB,KAAK,CAAC,qBAAN,EAAjB;AACA;;;;6EAEM,kBAAgB,UAAhB,EAAoC,MAApC;AAAA;;AAAA;AAAA;AAAA;AAAA;AACA,gBAAA,MADA,GACS,IAAI,QAAA,CAAA,MAAJ,CAAW,IAAX,EAAiB,UAAjB,EAA6B,MAA7B,CADT;;AAAA,sBAGF,MAAM,CAAC,MAAP,KAAkB,KAAK,WAHrB;AAAA;AAAA;AAAA;;AAAA,sBAID,KAAK,OAAL,CAAa,MAAM,CAAC,IAApB,MAA8B,SAJ7B;AAAA;AAAA;AAAA;;AAAA,sBAKE,IAAI,KAAJ,uBACU,MAAM,CAAC,IADjB,0BACqC,KAAK,WAD1C,uBALF;;AAAA;AAUC,gBAAA,OAVD,GAUW,CAAA,EAAA,GAAA,KAAK,OAAL,CAAa,MAAM,CAAC,IAApB,CAAA,MAAyB,IAAzB,IAAyB,EAAA,KAAA,KAAA,CAAzB,GAAyB,KAAA,CAAzB,GAAyB,EAAA,CAAE,OAVtC;;AAAA,oBAWA,OAXA;AAAA;AAAA;AAAA;;AAAA,sBAYE,IAAI,KAAJ,CAAU,yBAAV,CAZF;;AAAA;AAAA,kDAeE,OAAO,CAAC,MAAM,CAAC,MAAR,CAfT;;AAAA;AAAA;AAAA,uBAkBQ,KAAK,GAAL,CAAS,MAAT,CAAmB,MAAM,CAAC,gBAAP,EAAnB,CAlBR;;AAAA;AAAA,iEAkBuD,MAlBvD;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;;;;;EApC6B,cAAA,CAAA,W;;AAArC,OAAA,CAAA,eAAA,GAAA,eAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.InMemoryChannel = void 0;\nconst event_1 = require(\"../event\");\nconst action_1 = require(\"../action\");\nconst base_channel_1 = require(\"./base_channel\");\nclass InMemoryChannel extends base_channel_1.BaseChannel {\n    async registerToBus(bus) {\n        this.bus = bus;\n        await this.bus.registerChannel(this.moduleAlias, this.eventsList, this.actions, {\n            type: 'inMemory',\n            channel: this,\n        });\n    }\n    subscribe(eventName, cb) {\n        this.bus.subscribe(eventName, (notificationObject) => setImmediate(cb, event_1.Event.fromJSONRPCNotification(notificationObject).data));\n    }\n    once(eventName, cb) {\n        this.bus.once(eventName, (notificationObject) => setImmediate(cb, event_1.Event.fromJSONRPCNotification(notificationObject).data));\n    }\n    publish(eventName, data) {\n        const event = new event_1.Event(eventName, data);\n        if (event.module !== this.moduleAlias) {\n            throw new Error(`Event \"${eventName}\" not registered in \"${this.moduleAlias}\" module.`);\n        }\n        this.bus.publish(event.toJSONRPCNotification());\n    }\n    async invoke(actionName, params) {\n        var _a;\n        const action = new action_1.Action(null, actionName, params);\n        if (action.module === this.moduleAlias) {\n            if (this.actions[action.name] === undefined) {\n                throw new Error(`The action '${action.name}' on module '${this.moduleAlias}' does not exist.`);\n            }\n            const handler = (_a = this.actions[action.name]) === null || _a === void 0 ? void 0 : _a.handler;\n            if (!handler) {\n                throw new Error('Handler does not exist.');\n            }\n            return handler(action.params);\n        }\n        return (await this.bus.invoke(action.toJSONRPCRequest())).result;\n    }\n}\nexports.InMemoryChannel = InMemoryChannel;\n//# sourceMappingURL=in_memory_channel.js.map"]},"metadata":{},"sourceType":"script"}