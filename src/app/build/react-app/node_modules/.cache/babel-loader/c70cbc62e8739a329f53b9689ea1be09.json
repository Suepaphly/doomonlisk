{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"/home/lisk/doomonlisk/src/app/build/react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _asyncToGenerator = require(\"/home/lisk/doomonlisk/src/app/build/react-app/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nvar _objectSpread = require(\"/home/lisk/doomonlisk/src/app/build/react-app/node_modules/@babel/runtime/helpers/objectSpread2\");\n\nvar _createForOfIteratorHelper = require(\"/home/lisk/doomonlisk/src/app/build/react-app/node_modules/@babel/runtime/helpers/createForOfIteratorHelper\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.removeDB = exports.createDB = exports.getDBPath = exports.defaultAccountSchema = exports.waitUntilBlockHeight = exports.getModuleInstance = exports.getAccountSchemaFromModules = void 0;\n\nvar fs = require(\"fs-extra\");\n\nvar lisk_db_1 = require(\"@liskhq/lisk-db\");\n\nvar channel_mock_1 = require(\"./mocks/channel_mock\");\n\nvar data_access_mock_1 = require(\"./mocks/data_access_mock\");\n\nvar logger_mock_1 = require(\"./mocks/logger_mock\");\n\nvar constants_1 = require(\"../constants\");\n\nvar getAccountSchemaFromModules = function getAccountSchemaFromModules(modules, genesisConfig) {\n  var accountSchemas = {};\n\n  var _iterator = _createForOfIteratorHelper(modules),\n      _step;\n\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var Klass = _step.value;\n      var m = new Klass(genesisConfig !== null && genesisConfig !== void 0 ? genesisConfig : {});\n\n      if (m.accountSchema) {\n        accountSchemas[m.name] = _objectSpread(_objectSpread({}, m.accountSchema), {}, {\n          fieldNumber: m.id\n        });\n      }\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n\n  return accountSchemas;\n};\n\nexports.getAccountSchemaFromModules = getAccountSchemaFromModules;\n\nvar getModuleInstance = function getModuleInstance(Module, opts) {\n  var _a, _b, _c, _d;\n\n  var module = new Module((_a = opts === null || opts === void 0 ? void 0 : opts.genesisConfig) !== null && _a !== void 0 ? _a : {});\n  module.init({\n    channel: (_b = opts === null || opts === void 0 ? void 0 : opts.channel) !== null && _b !== void 0 ? _b : channel_mock_1.channelMock,\n    logger: (_c = opts === null || opts === void 0 ? void 0 : opts.logger) !== null && _c !== void 0 ? _c : logger_mock_1.loggerMock,\n    dataAccess: (_d = opts === null || opts === void 0 ? void 0 : opts.dataAccess) !== null && _d !== void 0 ? _d : new data_access_mock_1.DataAccessMock()\n  });\n  return module;\n};\n\nexports.getModuleInstance = getModuleInstance;\n\nvar waitUntilBlockHeight = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref) {\n    var apiClient, height, timeout;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            apiClient = _ref.apiClient, height = _ref.height, timeout = _ref.timeout;\n            return _context.abrupt(\"return\", new Promise(function (resolve, reject) {\n              if (timeout) {\n                setTimeout(function () {\n                  reject(new Error(\"'waitUntilBlockHeight' timed out after \".concat(timeout, \" ms\")));\n                }, timeout);\n              }\n\n              apiClient.subscribe(constants_1.APP_EVENT_BLOCK_NEW, function (data) {\n                var block = data.block;\n\n                var _apiClient$block$deco = apiClient.block.decode(block),\n                    header = _apiClient$block$deco.header;\n\n                if (header.height >= height) {\n                  resolve();\n                }\n              });\n            }));\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function waitUntilBlockHeight(_x) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nexports.waitUntilBlockHeight = waitUntilBlockHeight;\nexports.defaultAccountSchema = {\n  token: {\n    type: 'object',\n    fieldNumber: 2,\n    properties: {\n      balance: {\n        fieldNumber: 1,\n        dataType: 'uint64'\n      }\n    },\n    default: {\n      balance: BigInt(0)\n    }\n  },\n  sequence: {\n    type: 'object',\n    fieldNumber: 3,\n    properties: {\n      nonce: {\n        fieldNumber: 1,\n        dataType: 'uint64'\n      }\n    },\n    default: {\n      nonce: BigInt(0)\n    }\n  },\n  keys: {\n    type: 'object',\n    fieldNumber: 4,\n    properties: {\n      numberOfSignatures: {\n        dataType: 'uint32',\n        fieldNumber: 1\n      },\n      mandatoryKeys: {\n        type: 'array',\n        items: {\n          dataType: 'bytes'\n        },\n        fieldNumber: 2\n      },\n      optionalKeys: {\n        type: 'array',\n        items: {\n          dataType: 'bytes'\n        },\n        fieldNumber: 3\n      }\n    },\n    default: {\n      numberOfSignatures: 0,\n      mandatoryKeys: [],\n      optionalKeys: []\n    }\n  },\n  dpos: {\n    type: 'object',\n    fieldNumber: 5,\n    properties: {\n      delegate: {\n        type: 'object',\n        fieldNumber: 1,\n        properties: {\n          username: {\n            dataType: 'string',\n            fieldNumber: 1\n          },\n          pomHeights: {\n            type: 'array',\n            items: {\n              dataType: 'uint32'\n            },\n            fieldNumber: 2\n          },\n          consecutiveMissedBlocks: {\n            dataType: 'uint32',\n            fieldNumber: 3\n          },\n          lastForgedHeight: {\n            dataType: 'uint32',\n            fieldNumber: 4\n          },\n          isBanned: {\n            dataType: 'boolean',\n            fieldNumber: 5\n          },\n          totalVotesReceived: {\n            dataType: 'uint64',\n            fieldNumber: 6\n          }\n        },\n        required: ['username', 'pomHeights', 'consecutiveMissedBlocks', 'lastForgedHeight', 'isBanned', 'totalVotesReceived']\n      },\n      sentVotes: {\n        type: 'array',\n        fieldNumber: 2,\n        items: {\n          type: 'object',\n          properties: {\n            delegateAddress: {\n              dataType: 'bytes',\n              fieldNumber: 1\n            },\n            amount: {\n              dataType: 'uint64',\n              fieldNumber: 2\n            }\n          },\n          required: ['delegateAddress', 'amount']\n        }\n      },\n      unlocking: {\n        type: 'array',\n        fieldNumber: 3,\n        items: {\n          type: 'object',\n          properties: {\n            delegateAddress: {\n              dataType: 'bytes',\n              fieldNumber: 1\n            },\n            amount: {\n              dataType: 'uint64',\n              fieldNumber: 2\n            },\n            unvoteHeight: {\n              dataType: 'uint32',\n              fieldNumber: 3\n            }\n          },\n          required: ['delegateAddress', 'amount', 'unvoteHeight']\n        }\n      }\n    },\n    default: {\n      delegate: {\n        username: '',\n        pomHeights: [],\n        consecutiveMissedBlocks: 0,\n        lastForgedHeight: 0,\n        isBanned: false,\n        totalVotesReceived: BigInt(0)\n      },\n      sentVotes: [],\n      unlocking: []\n    }\n  }\n};\nvar defaultDatabasePath = '/tmp/lisk-framework/test';\n\nvar getDBPath = function getDBPath(name) {\n  var dbPath = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defaultDatabasePath;\n  return \"\".concat(dbPath, \"/\").concat(name, \".db\");\n};\n\nexports.getDBPath = getDBPath;\n\nvar createDB = function createDB(name) {\n  var dbPath = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defaultDatabasePath;\n  fs.ensureDirSync(dbPath);\n  var filePath = exports.getDBPath(name, dbPath);\n  return new lisk_db_1.KVStore(filePath);\n};\n\nexports.createDB = createDB;\n\nvar removeDB = function removeDB() {\n  var dbPath = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : defaultDatabasePath;\n  return ['forger', 'blockchain', 'node'].forEach(function (name) {\n    return fs.removeSync(exports.getDBPath(name, dbPath));\n  });\n};\n\nexports.removeDB = removeDB;","map":{"version":3,"sources":["../../src/testing/utils.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.removeDB = exports.createDB = exports.getDBPath = exports.defaultAccountSchema = exports.waitUntilBlockHeight = exports.getModuleInstance = exports.getAccountSchemaFromModules = void 0;\nconst fs = require(\"fs-extra\");\nconst lisk_db_1 = require(\"@liskhq/lisk-db\");\nconst channel_mock_1 = require(\"./mocks/channel_mock\");\nconst data_access_mock_1 = require(\"./mocks/data_access_mock\");\nconst logger_mock_1 = require(\"./mocks/logger_mock\");\nconst constants_1 = require(\"../constants\");\nconst getAccountSchemaFromModules = (modules, genesisConfig) => {\n    const accountSchemas = {};\n    for (const Klass of modules) {\n        const m = new Klass(genesisConfig !== null && genesisConfig !== void 0 ? genesisConfig : {});\n        if (m.accountSchema) {\n            accountSchemas[m.name] = { ...m.accountSchema, fieldNumber: m.id };\n        }\n    }\n    return accountSchemas;\n};\nexports.getAccountSchemaFromModules = getAccountSchemaFromModules;\nconst getModuleInstance = (Module, opts) => {\n    var _a, _b, _c, _d;\n    const module = new Module((_a = opts === null || opts === void 0 ? void 0 : opts.genesisConfig) !== null && _a !== void 0 ? _a : {});\n    module.init({\n        channel: (_b = opts === null || opts === void 0 ? void 0 : opts.channel) !== null && _b !== void 0 ? _b : channel_mock_1.channelMock,\n        logger: (_c = opts === null || opts === void 0 ? void 0 : opts.logger) !== null && _c !== void 0 ? _c : logger_mock_1.loggerMock,\n        dataAccess: (_d = opts === null || opts === void 0 ? void 0 : opts.dataAccess) !== null && _d !== void 0 ? _d : new data_access_mock_1.DataAccessMock(),\n    });\n    return module;\n};\nexports.getModuleInstance = getModuleInstance;\nconst waitUntilBlockHeight = async ({ apiClient, height, timeout, }) => new Promise((resolve, reject) => {\n    if (timeout) {\n        setTimeout(() => {\n            reject(new Error(`'waitUntilBlockHeight' timed out after ${timeout} ms`));\n        }, timeout);\n    }\n    apiClient.subscribe(constants_1.APP_EVENT_BLOCK_NEW, data => {\n        const { block } = data;\n        const { header } = apiClient.block.decode(block);\n        if (header.height >= height) {\n            resolve();\n        }\n    });\n});\nexports.waitUntilBlockHeight = waitUntilBlockHeight;\nexports.defaultAccountSchema = {\n    token: {\n        type: 'object',\n        fieldNumber: 2,\n        properties: {\n            balance: {\n                fieldNumber: 1,\n                dataType: 'uint64',\n            },\n        },\n        default: {\n            balance: BigInt(0),\n        },\n    },\n    sequence: {\n        type: 'object',\n        fieldNumber: 3,\n        properties: {\n            nonce: {\n                fieldNumber: 1,\n                dataType: 'uint64',\n            },\n        },\n        default: {\n            nonce: BigInt(0),\n        },\n    },\n    keys: {\n        type: 'object',\n        fieldNumber: 4,\n        properties: {\n            numberOfSignatures: { dataType: 'uint32', fieldNumber: 1 },\n            mandatoryKeys: {\n                type: 'array',\n                items: { dataType: 'bytes' },\n                fieldNumber: 2,\n            },\n            optionalKeys: {\n                type: 'array',\n                items: { dataType: 'bytes' },\n                fieldNumber: 3,\n            },\n        },\n        default: {\n            numberOfSignatures: 0,\n            mandatoryKeys: [],\n            optionalKeys: [],\n        },\n    },\n    dpos: {\n        type: 'object',\n        fieldNumber: 5,\n        properties: {\n            delegate: {\n                type: 'object',\n                fieldNumber: 1,\n                properties: {\n                    username: { dataType: 'string', fieldNumber: 1 },\n                    pomHeights: {\n                        type: 'array',\n                        items: { dataType: 'uint32' },\n                        fieldNumber: 2,\n                    },\n                    consecutiveMissedBlocks: { dataType: 'uint32', fieldNumber: 3 },\n                    lastForgedHeight: { dataType: 'uint32', fieldNumber: 4 },\n                    isBanned: { dataType: 'boolean', fieldNumber: 5 },\n                    totalVotesReceived: { dataType: 'uint64', fieldNumber: 6 },\n                },\n                required: [\n                    'username',\n                    'pomHeights',\n                    'consecutiveMissedBlocks',\n                    'lastForgedHeight',\n                    'isBanned',\n                    'totalVotesReceived',\n                ],\n            },\n            sentVotes: {\n                type: 'array',\n                fieldNumber: 2,\n                items: {\n                    type: 'object',\n                    properties: {\n                        delegateAddress: {\n                            dataType: 'bytes',\n                            fieldNumber: 1,\n                        },\n                        amount: {\n                            dataType: 'uint64',\n                            fieldNumber: 2,\n                        },\n                    },\n                    required: ['delegateAddress', 'amount'],\n                },\n            },\n            unlocking: {\n                type: 'array',\n                fieldNumber: 3,\n                items: {\n                    type: 'object',\n                    properties: {\n                        delegateAddress: {\n                            dataType: 'bytes',\n                            fieldNumber: 1,\n                        },\n                        amount: {\n                            dataType: 'uint64',\n                            fieldNumber: 2,\n                        },\n                        unvoteHeight: {\n                            dataType: 'uint32',\n                            fieldNumber: 3,\n                        },\n                    },\n                    required: ['delegateAddress', 'amount', 'unvoteHeight'],\n                },\n            },\n        },\n        default: {\n            delegate: {\n                username: '',\n                pomHeights: [],\n                consecutiveMissedBlocks: 0,\n                lastForgedHeight: 0,\n                isBanned: false,\n                totalVotesReceived: BigInt(0),\n            },\n            sentVotes: [],\n            unlocking: [],\n        },\n    },\n};\nconst defaultDatabasePath = '/tmp/lisk-framework/test';\nconst getDBPath = (name, dbPath = defaultDatabasePath) => `${dbPath}/${name}.db`;\nexports.getDBPath = getDBPath;\nconst createDB = (name, dbPath = defaultDatabasePath) => {\n    fs.ensureDirSync(dbPath);\n    const filePath = exports.getDBPath(name, dbPath);\n    return new lisk_db_1.KVStore(filePath);\n};\nexports.createDB = createDB;\nconst removeDB = (dbPath = defaultDatabasePath) => ['forger', 'blockchain', 'node'].forEach(name => fs.removeSync(exports.getDBPath(name, dbPath)));\nexports.removeDB = removeDB;\n//# sourceMappingURL=utils.js.map"]},"metadata":{},"sourceType":"script"}