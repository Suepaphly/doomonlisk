{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"/home/lisk/doomonlisk/src/app/build/react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/home/lisk/doomonlisk/src/app/build/react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _createForOfIteratorHelper = require(\"/home/lisk/doomonlisk/src/app/build/react-app/node_modules/@babel/runtime/helpers/createForOfIteratorHelper\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.StateStore = void 0;\n\nvar lisk_codec_1 = require(\"@liskhq/lisk-codec\");\n\nvar account_store_1 = require(\"./account_store\");\n\nvar chain_state_store_1 = require(\"./chain_state_store\");\n\nvar consensus_state_store_1 = require(\"./consensus_state_store\");\n\nvar constants_1 = require(\"../data_access/constants\");\n\nvar schema_1 = require(\"../schema\");\n\nvar saveDiff = function saveDiff(height, stateDiffs, batch) {\n  var diffToEncode = {\n    updated: [],\n    created: [],\n    deleted: []\n  };\n\n  var _iterator = _createForOfIteratorHelper(stateDiffs),\n      _step;\n\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var diff = _step.value;\n      diffToEncode.updated = diffToEncode.updated.concat(diff.updated);\n      diffToEncode.created = diffToEncode.created.concat(diff.created);\n      diffToEncode.deleted = diffToEncode.deleted.concat(diff.deleted);\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n\n  var encodedDiff = lisk_codec_1.codec.encode(schema_1.stateDiffSchema, diffToEncode);\n  batch.put(\"\".concat(constants_1.DB_KEY_DIFF_STATE, \":\").concat(height), encodedDiff);\n};\n\nvar StateStore = /*#__PURE__*/function () {\n  function StateStore(dataAccess, additionalInformation) {\n    _classCallCheck(this, StateStore);\n\n    this.account = new account_store_1.AccountStore(dataAccess, {\n      defaultAccount: additionalInformation.defaultAccount\n    });\n    this.consensus = new consensus_state_store_1.ConsensusStateStore(dataAccess);\n    this.chain = new chain_state_store_1.ChainStateStore(dataAccess, {\n      lastBlockHeaders: additionalInformation.lastBlockHeaders,\n      networkIdentifier: additionalInformation.networkIdentifier,\n      lastBlockReward: additionalInformation.lastBlockReward\n    });\n  }\n\n  _createClass(StateStore, [{\n    key: \"createSnapshot\",\n    value: function createSnapshot() {\n      this.account.createSnapshot();\n      this.consensus.createSnapshot();\n      this.chain.createSnapshot();\n    }\n  }, {\n    key: \"restoreSnapshot\",\n    value: function restoreSnapshot() {\n      this.account.restoreSnapshot();\n      this.consensus.restoreSnapshot();\n      this.chain.restoreSnapshot();\n    }\n  }, {\n    key: \"finalize\",\n    value: function finalize(height, batch) {\n      var accountStateDiff = this.account.finalize(batch);\n      var chainStateDiff = this.chain.finalize(batch);\n      var consensusStateDiff = this.consensus.finalize(batch);\n      saveDiff(height, [accountStateDiff, chainStateDiff, consensusStateDiff], batch);\n    }\n  }]);\n\n  return StateStore;\n}();\n\nexports.StateStore = StateStore;","map":{"version":3,"sources":["../../src/state_store/state_store.ts"],"names":[],"mappings":";;;;;;;;;;;;;AAcA,IAAA,YAAA,GAAA,OAAA,CAAA,oBAAA,CAAA;;AAGA,IAAA,eAAA,GAAA,OAAA,CAAA,iBAAA,CAAA;;AACA,IAAA,mBAAA,GAAA,OAAA,CAAA,qBAAA,CAAA;;AACA,IAAA,uBAAA,GAAA,OAAA,CAAA,yBAAA,CAAA;;AAEA,IAAA,WAAA,GAAA,OAAA,CAAA,0BAAA,CAAA;;AACA,IAAA,QAAA,GAAA,OAAA,CAAA,WAAA,CAAA;;AASA,IAAM,QAAQ,GAAG,SAAX,QAAW,CAChB,MADgB,EAEhB,UAFgB,EAGhB,KAHgB,EAIP;AACT,MAAM,YAAY,GAA0E;AAC3F,IAAA,OAAO,EAAE,EADkF;AAE3F,IAAA,OAAO,EAAE,EAFkF;AAG3F,IAAA,OAAO,EAAE;AAHkF,GAA5F;;AADS,6CAOU,UAPV;AAAA;;AAAA;AAOT,wDAA+B;AAAA,UAApB,IAAoB;AAC9B,MAAA,YAAY,CAAC,OAAb,GAAuB,YAAY,CAAC,OAAb,CAAqB,MAArB,CAA4B,IAAI,CAAC,OAAjC,CAAvB;AACA,MAAA,YAAY,CAAC,OAAb,GAAuB,YAAY,CAAC,OAAb,CAAqB,MAArB,CAA4B,IAAI,CAAC,OAAjC,CAAvB;AACA,MAAA,YAAY,CAAC,OAAb,GAAuB,YAAY,CAAC,OAAb,CAAqB,MAArB,CAA4B,IAAI,CAAC,OAAjC,CAAvB;AACA;AAXQ;AAAA;AAAA;AAAA;AAAA;;AAaT,MAAM,WAAW,GAAG,YAAA,CAAA,KAAA,CAAM,MAAN,CAAa,QAAA,CAAA,eAAb,EAA8B,YAA9B,CAApB;AACA,EAAA,KAAK,CAAC,GAAN,WAAa,WAAA,CAAA,iBAAb,cAAkC,MAAlC,GAA4C,WAA5C;AACA,CAnBD;;IAqBa,U;AAKZ,sBAAmB,UAAnB,EAA2C,qBAA3C,EAAuF;AAAA;;AACtF,SAAK,OAAL,GAAe,IAAI,eAAA,CAAA,YAAJ,CAAiB,UAAjB,EAA6B;AAC3C,MAAA,cAAc,EAAE,qBAAqB,CAAC;AADK,KAA7B,CAAf;AAGA,SAAK,SAAL,GAAiB,IAAI,uBAAA,CAAA,mBAAJ,CAAwB,UAAxB,CAAjB;AACA,SAAK,KAAL,GAAa,IAAI,mBAAA,CAAA,eAAJ,CAAoB,UAApB,EAAgC;AAC5C,MAAA,gBAAgB,EAAE,qBAAqB,CAAC,gBADI;AAE5C,MAAA,iBAAiB,EAAE,qBAAqB,CAAC,iBAFG;AAG5C,MAAA,eAAe,EAAE,qBAAqB,CAAC;AAHK,KAAhC,CAAb;AAKA;;;;WAEM,0BAAc;AACpB,WAAK,OAAL,CAAa,cAAb;AACA,WAAK,SAAL,CAAe,cAAf;AACA,WAAK,KAAL,CAAW,cAAX;AACA;;;WAEM,2BAAe;AACrB,WAAK,OAAL,CAAa,eAAb;AACA,WAAK,SAAL,CAAe,eAAf;AACA,WAAK,KAAL,CAAW,eAAX;AACA;;;WAEM,kBAAS,MAAT,EAAyB,KAAzB,EAA0C;AAChD,UAAM,gBAAgB,GAAG,KAAK,OAAL,CAAa,QAAb,CAAsB,KAAtB,CAAzB;AACA,UAAM,cAAc,GAAG,KAAK,KAAL,CAAW,QAAX,CAAoB,KAApB,CAAvB;AACA,UAAM,kBAAkB,GAAG,KAAK,SAAL,CAAe,QAAf,CAAwB,KAAxB,CAA3B;AACA,MAAA,QAAQ,CAAC,MAAD,EAAS,CAAC,gBAAD,EAAmB,cAAnB,EAAmC,kBAAnC,CAAT,EAAiE,KAAjE,CAAR;AACA;;;;;;AAlCF,OAAA,CAAA,UAAA,GAAA,UAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.StateStore = void 0;\nconst lisk_codec_1 = require(\"@liskhq/lisk-codec\");\nconst account_store_1 = require(\"./account_store\");\nconst chain_state_store_1 = require(\"./chain_state_store\");\nconst consensus_state_store_1 = require(\"./consensus_state_store\");\nconst constants_1 = require(\"../data_access/constants\");\nconst schema_1 = require(\"../schema\");\nconst saveDiff = (height, stateDiffs, batch) => {\n    const diffToEncode = {\n        updated: [],\n        created: [],\n        deleted: [],\n    };\n    for (const diff of stateDiffs) {\n        diffToEncode.updated = diffToEncode.updated.concat(diff.updated);\n        diffToEncode.created = diffToEncode.created.concat(diff.created);\n        diffToEncode.deleted = diffToEncode.deleted.concat(diff.deleted);\n    }\n    const encodedDiff = lisk_codec_1.codec.encode(schema_1.stateDiffSchema, diffToEncode);\n    batch.put(`${constants_1.DB_KEY_DIFF_STATE}:${height}`, encodedDiff);\n};\nclass StateStore {\n    constructor(dataAccess, additionalInformation) {\n        this.account = new account_store_1.AccountStore(dataAccess, {\n            defaultAccount: additionalInformation.defaultAccount,\n        });\n        this.consensus = new consensus_state_store_1.ConsensusStateStore(dataAccess);\n        this.chain = new chain_state_store_1.ChainStateStore(dataAccess, {\n            lastBlockHeaders: additionalInformation.lastBlockHeaders,\n            networkIdentifier: additionalInformation.networkIdentifier,\n            lastBlockReward: additionalInformation.lastBlockReward,\n        });\n    }\n    createSnapshot() {\n        this.account.createSnapshot();\n        this.consensus.createSnapshot();\n        this.chain.createSnapshot();\n    }\n    restoreSnapshot() {\n        this.account.restoreSnapshot();\n        this.consensus.restoreSnapshot();\n        this.chain.restoreSnapshot();\n    }\n    finalize(height, batch) {\n        const accountStateDiff = this.account.finalize(batch);\n        const chainStateDiff = this.chain.finalize(batch);\n        const consensusStateDiff = this.consensus.finalize(batch);\n        saveDiff(height, [accountStateDiff, chainStateDiff, consensusStateDiff], batch);\n    }\n}\nexports.StateStore = StateStore;\n//# sourceMappingURL=state_store.js.map"]},"metadata":{},"sourceType":"script"}