{"ast":null,"code":"\"use strict\";\n\nvar _objectWithoutProperties = require(\"/home/lisk/doomonlisk/src/app/build/react-app/node_modules/@babel/runtime/helpers/objectWithoutProperties\");\n\nvar _createForOfIteratorHelper = require(\"/home/lisk/doomonlisk/src/app/build/react-app/node_modules/@babel/runtime/helpers/createForOfIteratorHelper\");\n\nvar _classCallCheck = require(\"/home/lisk/doomonlisk/src/app/build/react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _inherits = require(\"/home/lisk/doomonlisk/src/app/build/react-app/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _createSuper = require(\"/home/lisk/doomonlisk/src/app/build/react-app/node_modules/@babel/runtime/helpers/createSuper\");\n\nvar _wrapNativeSuper = require(\"/home/lisk/doomonlisk/src/app/build/react-app/node_modules/@babel/runtime/helpers/wrapNativeSuper\");\n\nvar _excluded = [\"statusCode\"];\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.errorMiddleware = exports.ErrorWithStatus = void 0;\n\nvar ErrorWithStatus = /*#__PURE__*/function (_Error) {\n  _inherits(ErrorWithStatus, _Error);\n\n  var _super = _createSuper(ErrorWithStatus);\n\n  function ErrorWithStatus(message, statusCode) {\n    var _this;\n\n    _classCallCheck(this, ErrorWithStatus);\n\n    _this = _super.call(this, message);\n    _this.statusCode = statusCode;\n    return _this;\n  }\n\n  return ErrorWithStatus;\n}( /*#__PURE__*/_wrapNativeSuper(Error));\n\nexports.ErrorWithStatus = ErrorWithStatus;\n\nvar errorMiddleware = function errorMiddleware() {\n  return function (err, _req, res, _next) {\n    var errors;\n    var responseCode = 500;\n\n    if (Array.isArray(err)) {\n      errors = err;\n    } else if (err.errors) {\n      errors = err.errors;\n    } else {\n      errors = [err];\n    }\n\n    var _iterator = _createForOfIteratorHelper(errors),\n        _step;\n\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var error = _step.value;\n        Object.defineProperty(error, 'message', {\n          enumerable: true\n        });\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n\n    if (err instanceof ErrorWithStatus) {\n      var statusCode = err.statusCode,\n          message = _objectWithoutProperties(err, _excluded);\n\n      errors = message;\n      responseCode = statusCode;\n    }\n\n    res.status(responseCode).send({\n      errors: errors\n    });\n  };\n};\n\nexports.errorMiddleware = errorMiddleware;","map":{"version":3,"sources":["../../src/middlewares/errors.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;IAea,e;;;;;AAEZ,2BAAmB,OAAnB,EAAoC,UAApC,EAAsD;AAAA;;AAAA;;AACrD,8BAAM,OAAN;AACA,UAAK,UAAL,GAAkB,UAAlB;AAFqD;AAGrD;;;iCALmC,K;;AAArC,OAAA,CAAA,eAAA,GAAA,eAAA;;AAYO,IAAM,eAAe,GAAG,SAAlB,eAAkB;AAAA,SAAM,UACpC,GADoC,EAEpC,IAFoC,EAGpC,GAHoC,EAIpC,KAJoC,EAK3B;AACT,QAAI,MAAJ;AACA,QAAI,YAAY,GAAG,GAAnB;;AAEA,QAAI,KAAK,CAAC,OAAN,CAAc,GAAd,CAAJ,EAAwB;AACvB,MAAA,MAAM,GAAG,GAAT;AACA,KAFD,MAEO,IAAK,GAAwB,CAAC,MAA9B,EAAsC;AAC5C,MAAA,MAAM,GAAI,GAAwB,CAAC,MAAnC;AACA,KAFM,MAEA;AACN,MAAA,MAAM,GAAG,CAAC,GAAD,CAAT;AACA;;AAVQ,+CAYW,MAZX;AAAA;;AAAA;AAYT,0DAA4B;AAAA,YAAjB,KAAiB;AAE3B,QAAA,MAAM,CAAC,cAAP,CAAsB,KAAtB,EAA6B,SAA7B,EAAwC;AAAE,UAAA,UAAU,EAAE;AAAd,SAAxC;AACA;AAfQ;AAAA;AAAA;AAAA;AAAA;;AAiBT,QAAI,GAAG,YAAY,eAAnB,EAAoC;AACnC,UAAQ,UAAR,GAAmC,GAAnC,CAAQ,UAAR;AAAA,UAAuB,OAAvB,4BAAmC,GAAnC;;AACA,MAAA,MAAM,GAAG,OAAT;AACA,MAAA,YAAY,GAAG,UAAf;AACA;;AAED,IAAA,GAAG,CAAC,MAAJ,CAAW,YAAX,EAAyB,IAAzB,CAA8B;AAAE,MAAA,MAAM,EAAN;AAAF,KAA9B;AACA,GA7B8B;AAAA,CAAxB;;AAAM,OAAA,CAAA,eAAA,GAAe,eAAf","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.errorMiddleware = exports.ErrorWithStatus = void 0;\nclass ErrorWithStatus extends Error {\n    constructor(message, statusCode) {\n        super(message);\n        this.statusCode = statusCode;\n    }\n}\nexports.ErrorWithStatus = ErrorWithStatus;\nconst errorMiddleware = () => (err, _req, res, _next) => {\n    let errors;\n    let responseCode = 500;\n    if (Array.isArray(err)) {\n        errors = err;\n    }\n    else if (err.errors) {\n        errors = err.errors;\n    }\n    else {\n        errors = [err];\n    }\n    for (const error of errors) {\n        Object.defineProperty(error, 'message', { enumerable: true });\n    }\n    if (err instanceof ErrorWithStatus) {\n        const { statusCode, ...message } = err;\n        errors = message;\n        responseCode = statusCode;\n    }\n    res.status(responseCode).send({ errors });\n};\nexports.errorMiddleware = errorMiddleware;\n//# sourceMappingURL=errors.js.map"]},"metadata":{},"sourceType":"script"}