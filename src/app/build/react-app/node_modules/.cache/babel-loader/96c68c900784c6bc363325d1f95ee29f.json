{"ast":null,"code":"\"use strict\";\n\nvar _slicedToArray = require(\"/home/lisk/doomonlisk/src/app/build/react-app/node_modules/@babel/runtime/helpers/slicedToArray\");\n\nvar _defineProperty = require(\"/home/lisk/doomonlisk/src/app/build/react-app/node_modules/@babel/runtime/helpers/defineProperty\");\n\nvar _regeneratorRuntime = require(\"/home/lisk/doomonlisk/src/app/build/react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _createForOfIteratorHelper = require(\"/home/lisk/doomonlisk/src/app/build/react-app/node_modules/@babel/runtime/helpers/createForOfIteratorHelper\");\n\nvar _asyncToGenerator = require(\"/home/lisk/doomonlisk/src/app/build/react-app/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nvar _classCallCheck = require(\"/home/lisk/doomonlisk/src/app/build/react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/home/lisk/doomonlisk/src/app/build/react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Processor = exports.EVENT_PROCESSOR_BROADCAST_BLOCK = exports.EVENT_PROCESSOR_SYNC_REQUIRED = void 0;\n\nvar lisk_bft_1 = require(\"@liskhq/lisk-bft\");\n\nvar lisk_chain_1 = require(\"@liskhq/lisk-chain\");\n\nvar lisk_utils_1 = require(\"@liskhq/lisk-utils\");\n\nvar events_1 = require(\"events\");\n\nvar lisk_codec_1 = require(\"@liskhq/lisk-codec\");\n\nvar lisk_validator_1 = require(\"@liskhq/lisk-validator\");\n\nvar constants_1 = require(\"../../constants\");\n\nvar errors_1 = require(\"../../errors\");\n\nvar forkStatusList = [lisk_bft_1.ForkStatus.IDENTICAL_BLOCK, lisk_bft_1.ForkStatus.VALID_BLOCK, lisk_bft_1.ForkStatus.DOUBLE_FORGING, lisk_bft_1.ForkStatus.TIE_BREAK, lisk_bft_1.ForkStatus.DIFFERENT_CHAIN, lisk_bft_1.ForkStatus.DISCARD];\nexports.EVENT_PROCESSOR_SYNC_REQUIRED = 'EVENT_PROCESSOR_SYNC_REQUIRED';\nexports.EVENT_PROCESSOR_BROADCAST_BLOCK = 'EVENT_PROCESSOR_BROADCAST_BLOCK';\nvar BLOCK_VERSION = 2;\n\nvar Processor = /*#__PURE__*/function () {\n  function Processor(_ref) {\n    var channel = _ref.channel,\n        logger = _ref.logger,\n        chainModule = _ref.chainModule,\n        bftModule = _ref.bftModule;\n\n    _classCallCheck(this, Processor);\n\n    this._modules = [];\n    this._stop = false;\n    this._channel = channel;\n    this._logger = logger;\n    this._chain = chainModule;\n    this._bft = bftModule;\n    this._mutex = new lisk_utils_1.jobHandlers.Mutex();\n    this.events = new events_1.EventEmitter();\n  }\n\n  _createClass(Processor, [{\n    key: \"register\",\n    value: function register(customModule) {\n      var existingModule = this._modules.find(function (m) {\n        return m.id === customModule.id;\n      });\n\n      if (existingModule) {\n        throw new Error(\"Module id \".concat(customModule.id, \" is already registered\"));\n      }\n\n      this._modules.push(customModule);\n    }\n  }, {\n    key: \"init\",\n    value: function () {\n      var _init = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(genesisBlock) {\n        var genesisExist, stateStore, _iterator, _step, customModule;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                this._logger.debug({\n                  id: genesisBlock.header.id,\n                  transactionRoot: genesisBlock.header.transactionRoot\n                }, 'Initializing processor');\n\n                _context.next = 3;\n                return this._chain.genesisBlockExist(genesisBlock);\n\n              case 3:\n                genesisExist = _context.sent;\n                _context.next = 6;\n                return this._chain.newStateStore();\n\n              case 6:\n                stateStore = _context.sent;\n\n                if (genesisExist) {\n                  _context.next = 31;\n                  break;\n                }\n\n                this._chain.validateGenesisBlockHeader(genesisBlock);\n\n                _context.next = 11;\n                return this._chain.applyGenesisBlock(genesisBlock, stateStore);\n\n              case 11:\n                _iterator = _createForOfIteratorHelper(this._modules);\n                _context.prev = 12;\n\n                _iterator.s();\n\n              case 14:\n                if ((_step = _iterator.n()).done) {\n                  _context.next = 21;\n                  break;\n                }\n\n                customModule = _step.value;\n\n                if (!customModule.afterGenesisBlockApply) {\n                  _context.next = 19;\n                  break;\n                }\n\n                _context.next = 19;\n                return customModule.afterGenesisBlockApply({\n                  genesisBlock: genesisBlock,\n                  stateStore: this._createScopedStateStore(stateStore, customModule.name),\n                  reducerHandler: this._createReducerHandler(stateStore)\n                });\n\n              case 19:\n                _context.next = 14;\n                break;\n\n              case 21:\n                _context.next = 26;\n                break;\n\n              case 23:\n                _context.prev = 23;\n                _context.t0 = _context[\"catch\"](12);\n\n                _iterator.e(_context.t0);\n\n              case 26:\n                _context.prev = 26;\n\n                _iterator.f();\n\n                return _context.finish(26);\n\n              case 29:\n                _context.next = 31;\n                return this._chain.saveBlock(genesisBlock, stateStore, 0);\n\n              case 31:\n                _context.next = 33;\n                return this._chain.init(genesisBlock);\n\n              case 33:\n                _context.next = 35;\n                return this._bft.init(stateStore);\n\n              case 35:\n                this._logger.info('Blockchain ready');\n\n              case 36:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[12, 23, 26, 29]]);\n      }));\n\n      function init(_x) {\n        return _init.apply(this, arguments);\n      }\n\n      return init;\n    }()\n  }, {\n    key: \"stop\",\n    value: function () {\n      var _stop = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                this._stop = true;\n                _context2.next = 3;\n                return this._mutex.acquire();\n\n              case 3:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function stop() {\n        return _stop.apply(this, arguments);\n      }\n\n      return stop;\n    }()\n  }, {\n    key: \"process\",\n    value: function () {\n      var _process = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(block) {\n        var _this = this;\n\n        var _ref2,\n            peerId,\n            _args4 = arguments;\n\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _ref2 = _args4.length > 1 && _args4[1] !== undefined ? _args4[1] : {}, peerId = _ref2.peerId;\n\n                if (!this._stop) {\n                  _context4.next = 3;\n                  break;\n                }\n\n                return _context4.abrupt(\"return\");\n\n              case 3:\n                _context4.next = 5;\n                return this._mutex.runExclusive( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n                  var lastBlock, forkStatus, encodedBlock, _encodedBlock, _encodedBlock2, _encodedBlock3, previousLastBlock;\n\n                  return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n                    while (1) {\n                      switch (_context3.prev = _context3.next) {\n                        case 0:\n                          _this._logger.debug({\n                            id: block.header.id,\n                            height: block.header.height\n                          }, 'Starting to process block');\n\n                          lastBlock = _this._chain.lastBlock;\n                          forkStatus = _this._bft.forkChoice(block.header, lastBlock.header);\n\n                          if (forkStatusList.includes(forkStatus)) {\n                            _context3.next = 6;\n                            break;\n                          }\n\n                          _this._logger.debug({\n                            status: forkStatus,\n                            blockId: block.header.id\n                          }, 'Unknown fork status');\n\n                          throw new Error('Unknown fork status');\n\n                        case 6:\n                          if (!(forkStatus === lisk_bft_1.ForkStatus.DISCARD)) {\n                            _context3.next = 11;\n                            break;\n                          }\n\n                          _this._logger.debug({\n                            id: block.header.id,\n                            height: block.header.height\n                          }, 'Discarding block');\n\n                          encodedBlock = _this._chain.dataAccess.encode(block);\n\n                          _this._channel.publish(constants_1.APP_EVENT_CHAIN_FORK, {\n                            block: encodedBlock.toString('hex')\n                          });\n\n                          return _context3.abrupt(\"return\");\n\n                        case 11:\n                          if (!(forkStatus === lisk_bft_1.ForkStatus.IDENTICAL_BLOCK)) {\n                            _context3.next = 14;\n                            break;\n                          }\n\n                          _this._logger.debug({\n                            id: block.header.id,\n                            height: block.header.height\n                          }, 'Block already processed');\n\n                          return _context3.abrupt(\"return\");\n\n                        case 14:\n                          if (!(forkStatus === lisk_bft_1.ForkStatus.DOUBLE_FORGING)) {\n                            _context3.next = 19;\n                            break;\n                          }\n\n                          _this._logger.warn({\n                            id: block.header.id,\n                            generatorPublicKey: block.header.generatorPublicKey\n                          }, 'Discarding block due to double forging');\n\n                          _encodedBlock = _this._chain.dataAccess.encode(block);\n\n                          _this._channel.publish(constants_1.APP_EVENT_CHAIN_FORK, {\n                            block: _encodedBlock.toString('hex')\n                          });\n\n                          return _context3.abrupt(\"return\");\n\n                        case 19:\n                          if (!(forkStatus === lisk_bft_1.ForkStatus.DIFFERENT_CHAIN)) {\n                            _context3.next = 25;\n                            break;\n                          }\n\n                          _this._logger.debug({\n                            id: block.header.id,\n                            height: block.header.height\n                          }, 'Detected different chain to sync');\n\n                          _encodedBlock2 = _this._chain.dataAccess.encode(block);\n\n                          _this.events.emit(exports.EVENT_PROCESSOR_SYNC_REQUIRED, {\n                            block: block,\n                            peerId: peerId\n                          });\n\n                          _this._channel.publish(constants_1.APP_EVENT_CHAIN_FORK, {\n                            block: _encodedBlock2.toString('hex')\n                          });\n\n                          return _context3.abrupt(\"return\");\n\n                        case 25:\n                          if (!(forkStatus === lisk_bft_1.ForkStatus.TIE_BREAK)) {\n                            _context3.next = 44;\n                            break;\n                          }\n\n                          _this._logger.info({\n                            id: lastBlock.header.id,\n                            height: lastBlock.header.height\n                          }, 'Received tie breaking block');\n\n                          _encodedBlock3 = _this._chain.dataAccess.encode(block);\n\n                          _this._channel.publish(constants_1.APP_EVENT_CHAIN_FORK, {\n                            block: _encodedBlock3.toString('hex')\n                          });\n\n                          _this._validate(block);\n\n                          previousLastBlock = lisk_utils_1.objects.cloneDeep(lastBlock);\n                          _context3.next = 33;\n                          return _this._deleteBlock(lastBlock);\n\n                        case 33:\n                          _context3.prev = 33;\n                          _context3.next = 36;\n                          return _this._processValidated(block);\n\n                        case 36:\n                          _context3.next = 43;\n                          break;\n\n                        case 38:\n                          _context3.prev = 38;\n                          _context3.t0 = _context3[\"catch\"](33);\n\n                          _this._logger.error({\n                            id: block.header.id,\n                            previousBlockId: previousLastBlock.header.id,\n                            err: _context3.t0\n                          }, 'Failed to apply newly received block. restoring previous block.');\n\n                          _context3.next = 43;\n                          return _this._processValidated(previousLastBlock, {\n                            skipBroadcast: true\n                          });\n\n                        case 43:\n                          return _context3.abrupt(\"return\");\n\n                        case 44:\n                          _this._logger.debug({\n                            id: block.header.id,\n                            height: block.header.height\n                          }, 'Processing valid block');\n\n                          _this._validate(block);\n\n                          _context3.next = 48;\n                          return _this._processValidated(block);\n\n                        case 48:\n                        case \"end\":\n                          return _context3.stop();\n                      }\n                    }\n                  }, _callee3, null, [[33, 38]]);\n                })));\n\n              case 5:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function process(_x2) {\n        return _process.apply(this, arguments);\n      }\n\n      return process;\n    }()\n  }, {\n    key: \"validate\",\n    value: function validate(block) {\n      this._logger.debug({\n        id: block.header.id,\n        height: block.header.height\n      }, 'Validating block');\n\n      this._validate(block);\n    }\n  }, {\n    key: \"processValidated\",\n    value: function () {\n      var _processValidated2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6(block) {\n        var _this2 = this;\n\n        var _ref4,\n            _ref4$removeFromTempT,\n            removeFromTempTable,\n            _args6 = arguments;\n\n        return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                _ref4 = _args6.length > 1 && _args6[1] !== undefined ? _args6[1] : {}, _ref4$removeFromTempT = _ref4.removeFromTempTable, removeFromTempTable = _ref4$removeFromTempT === void 0 ? false : _ref4$removeFromTempT;\n\n                if (!this._stop) {\n                  _context6.next = 3;\n                  break;\n                }\n\n                return _context6.abrupt(\"return\");\n\n              case 3:\n                _context6.next = 5;\n                return this._mutex.runExclusive( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5() {\n                  return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n                    while (1) {\n                      switch (_context5.prev = _context5.next) {\n                        case 0:\n                          _this2._logger.debug({\n                            id: block.header.id,\n                            height: block.header.height\n                          }, 'Processing validated block');\n\n                          return _context5.abrupt(\"return\", _this2._processValidated(block, {\n                            skipBroadcast: true,\n                            removeFromTempTable: removeFromTempTable\n                          }));\n\n                        case 2:\n                        case \"end\":\n                          return _context5.stop();\n                      }\n                    }\n                  }, _callee5);\n                })));\n\n              case 5:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, this);\n      }));\n\n      function processValidated(_x3) {\n        return _processValidated2.apply(this, arguments);\n      }\n\n      return processValidated;\n    }()\n  }, {\n    key: \"deleteLastBlock\",\n    value: function () {\n      var _deleteLastBlock = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee8() {\n        var _this3 = this;\n\n        var _ref6,\n            _ref6$saveTempBlock,\n            saveTempBlock,\n            _args8 = arguments;\n\n        return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                _ref6 = _args8.length > 0 && _args8[0] !== undefined ? _args8[0] : {}, _ref6$saveTempBlock = _ref6.saveTempBlock, saveTempBlock = _ref6$saveTempBlock === void 0 ? false : _ref6$saveTempBlock;\n\n                if (!this._stop) {\n                  _context8.next = 3;\n                  break;\n                }\n\n                return _context8.abrupt(\"return\");\n\n              case 3:\n                _context8.next = 5;\n                return this._mutex.runExclusive( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee7() {\n                  var lastBlock;\n                  return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n                    while (1) {\n                      switch (_context7.prev = _context7.next) {\n                        case 0:\n                          lastBlock = _this3._chain.lastBlock;\n\n                          _this3._logger.debug({\n                            id: lastBlock.header.id,\n                            height: lastBlock.header.height\n                          }, 'Deleting last block');\n\n                          _context7.next = 4;\n                          return _this3._deleteBlock(lastBlock, saveTempBlock);\n\n                        case 4:\n                          return _context7.abrupt(\"return\", _this3._chain.lastBlock);\n\n                        case 5:\n                        case \"end\":\n                          return _context7.stop();\n                      }\n                    }\n                  }, _callee7);\n                })));\n\n              case 5:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, _callee8, this);\n      }));\n\n      function deleteLastBlock() {\n        return _deleteLastBlock.apply(this, arguments);\n      }\n\n      return deleteLastBlock;\n    }()\n  }, {\n    key: \"validateTransaction\",\n    value: function validateTransaction(transaction) {\n      this._chain.validateTransaction(transaction);\n\n      var customAsset = this._getAsset(transaction);\n\n      if (customAsset.validate) {\n        var decodedAsset = lisk_codec_1.codec.decode(customAsset.schema, transaction.asset);\n        var assetSchemaErrors = lisk_validator_1.validator.validate(customAsset.schema, decodedAsset);\n\n        if (assetSchemaErrors.length) {\n          throw new lisk_validator_1.LiskValidationError(assetSchemaErrors);\n        }\n\n        customAsset.validate({\n          asset: decodedAsset,\n          transaction: transaction\n        });\n      }\n    }\n  }, {\n    key: \"verifyTransactions\",\n    value: function () {\n      var _verifyTransactions = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee9(transactions, stateStore) {\n        var _a, _iterator2, _step2, transaction, _iterator3, _step3, customModule, moduleName, customAsset, decodedAsset, _iterator4, _step4, _customModule;\n\n        return _regeneratorRuntime.wrap(function _callee9$(_context9) {\n          while (1) {\n            switch (_context9.prev = _context9.next) {\n              case 0:\n                if (transactions.length) {\n                  _context9.next = 2;\n                  break;\n                }\n\n                return _context9.abrupt(\"return\");\n\n              case 2:\n                _iterator2 = _createForOfIteratorHelper(transactions);\n                _context9.prev = 3;\n\n                _iterator2.s();\n\n              case 5:\n                if ((_step2 = _iterator2.n()).done) {\n                  _context9.next = 56;\n                  break;\n                }\n\n                transaction = _step2.value;\n                _context9.prev = 7;\n                _iterator3 = _createForOfIteratorHelper(this._modules);\n                _context9.prev = 9;\n\n                _iterator3.s();\n\n              case 11:\n                if ((_step3 = _iterator3.n()).done) {\n                  _context9.next = 18;\n                  break;\n                }\n\n                customModule = _step3.value;\n\n                if (!customModule.beforeTransactionApply) {\n                  _context9.next = 16;\n                  break;\n                }\n\n                _context9.next = 16;\n                return customModule.beforeTransactionApply({\n                  reducerHandler: this._createReducerHandler(stateStore),\n                  stateStore: this._createScopedStateStore(stateStore, customModule.name),\n                  transaction: transaction\n                });\n\n              case 16:\n                _context9.next = 11;\n                break;\n\n              case 18:\n                _context9.next = 23;\n                break;\n\n              case 20:\n                _context9.prev = 20;\n                _context9.t0 = _context9[\"catch\"](9);\n\n                _iterator3.e(_context9.t0);\n\n              case 23:\n                _context9.prev = 23;\n\n                _iterator3.f();\n\n                return _context9.finish(23);\n\n              case 26:\n                moduleName = this._getModule(transaction).name;\n                customAsset = this._getAsset(transaction);\n                decodedAsset = lisk_codec_1.codec.decode(customAsset.schema, transaction.asset);\n                _context9.next = 31;\n                return customAsset.apply({\n                  asset: decodedAsset,\n                  reducerHandler: this._createReducerHandler(stateStore),\n                  stateStore: this._createScopedStateStore(stateStore, moduleName),\n                  transaction: transaction\n                });\n\n              case 31:\n                _iterator4 = _createForOfIteratorHelper(this._modules);\n                _context9.prev = 32;\n\n                _iterator4.s();\n\n              case 34:\n                if ((_step4 = _iterator4.n()).done) {\n                  _context9.next = 41;\n                  break;\n                }\n\n                _customModule = _step4.value;\n\n                if (!_customModule.afterTransactionApply) {\n                  _context9.next = 39;\n                  break;\n                }\n\n                _context9.next = 39;\n                return _customModule.afterTransactionApply({\n                  reducerHandler: this._createReducerHandler(stateStore),\n                  stateStore: this._createScopedStateStore(stateStore, _customModule.name),\n                  transaction: transaction\n                });\n\n              case 39:\n                _context9.next = 34;\n                break;\n\n              case 41:\n                _context9.next = 46;\n                break;\n\n              case 43:\n                _context9.prev = 43;\n                _context9.t1 = _context9[\"catch\"](32);\n\n                _iterator4.e(_context9.t1);\n\n              case 46:\n                _context9.prev = 46;\n\n                _iterator4.f();\n\n                return _context9.finish(46);\n\n              case 49:\n                _context9.next = 54;\n                break;\n\n              case 51:\n                _context9.prev = 51;\n                _context9.t2 = _context9[\"catch\"](7);\n                throw new errors_1.TransactionApplyError((_a = _context9.t2.message) !== null && _a !== void 0 ? _a : 'Transaction verification failed', transaction.id, _context9.t2);\n\n              case 54:\n                _context9.next = 5;\n                break;\n\n              case 56:\n                _context9.next = 61;\n                break;\n\n              case 58:\n                _context9.prev = 58;\n                _context9.t3 = _context9[\"catch\"](3);\n\n                _iterator2.e(_context9.t3);\n\n              case 61:\n                _context9.prev = 61;\n\n                _iterator2.f();\n\n                return _context9.finish(61);\n\n              case 64:\n              case \"end\":\n                return _context9.stop();\n            }\n          }\n        }, _callee9, this, [[3, 58, 61, 64], [7, 51], [9, 20, 23, 26], [32, 43, 46, 49]]);\n      }));\n\n      function verifyTransactions(_x4, _x5) {\n        return _verifyTransactions.apply(this, arguments);\n      }\n\n      return verifyTransactions;\n    }()\n  }, {\n    key: \"_processValidated\",\n    value: function () {\n      var _processValidated3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee10(block) {\n        var _ref8,\n            skipBroadcast,\n            _ref8$removeFromTempT,\n            removeFromTempTable,\n            stateStore,\n            reducerHandler,\n            _iterator5,\n            _step5,\n            _customModule3,\n            _iterator6,\n            _step6,\n            transaction,\n            _iterator7,\n            _step7,\n            customModule,\n            moduleName,\n            customAsset,\n            decodedAsset,\n            _iterator8,\n            _step8,\n            _customModule2,\n            _iterator9,\n            _step9,\n            _customModule4,\n            _args10 = arguments;\n\n        return _regeneratorRuntime.wrap(function _callee10$(_context10) {\n          while (1) {\n            switch (_context10.prev = _context10.next) {\n              case 0:\n                _ref8 = _args10.length > 1 && _args10[1] !== undefined ? _args10[1] : {}, skipBroadcast = _ref8.skipBroadcast, _ref8$removeFromTempT = _ref8.removeFromTempTable, removeFromTempTable = _ref8$removeFromTempT === void 0 ? false : _ref8$removeFromTempT;\n                _context10.next = 3;\n                return this._chain.newStateStore();\n\n              case 3:\n                stateStore = _context10.sent;\n                reducerHandler = this._createReducerHandler(stateStore);\n                _context10.next = 7;\n                return this._chain.verifyBlockHeader(block, stateStore);\n\n              case 7:\n                _context10.next = 9;\n                return this._bft.verifyBlockHeader(block.header, stateStore);\n\n              case 9:\n                if (!skipBroadcast) {\n                  this.events.emit(exports.EVENT_PROCESSOR_BROADCAST_BLOCK, {\n                    block: block\n                  });\n                }\n\n                _iterator5 = _createForOfIteratorHelper(this._modules);\n                _context10.prev = 11;\n\n                _iterator5.s();\n\n              case 13:\n                if ((_step5 = _iterator5.n()).done) {\n                  _context10.next = 20;\n                  break;\n                }\n\n                _customModule3 = _step5.value;\n\n                if (!_customModule3.beforeBlockApply) {\n                  _context10.next = 18;\n                  break;\n                }\n\n                _context10.next = 18;\n                return _customModule3.beforeBlockApply({\n                  block: block,\n                  stateStore: this._createScopedStateStore(stateStore, _customModule3.name),\n                  reducerHandler: reducerHandler\n                });\n\n              case 18:\n                _context10.next = 13;\n                break;\n\n              case 20:\n                _context10.next = 25;\n                break;\n\n              case 22:\n                _context10.prev = 22;\n                _context10.t0 = _context10[\"catch\"](11);\n\n                _iterator5.e(_context10.t0);\n\n              case 25:\n                _context10.prev = 25;\n\n                _iterator5.f();\n\n                return _context10.finish(25);\n\n              case 28:\n                _context10.next = 30;\n                return this._bft.applyBlockHeader(block.header, stateStore);\n\n              case 30:\n                if (!block.payload.length) {\n                  _context10.next = 87;\n                  break;\n                }\n\n                _iterator6 = _createForOfIteratorHelper(block.payload);\n                _context10.prev = 32;\n\n                _iterator6.s();\n\n              case 34:\n                if ((_step6 = _iterator6.n()).done) {\n                  _context10.next = 79;\n                  break;\n                }\n\n                transaction = _step6.value;\n                _iterator7 = _createForOfIteratorHelper(this._modules);\n                _context10.prev = 37;\n\n                _iterator7.s();\n\n              case 39:\n                if ((_step7 = _iterator7.n()).done) {\n                  _context10.next = 46;\n                  break;\n                }\n\n                customModule = _step7.value;\n\n                if (!customModule.beforeTransactionApply) {\n                  _context10.next = 44;\n                  break;\n                }\n\n                _context10.next = 44;\n                return customModule.beforeTransactionApply({\n                  reducerHandler: this._createReducerHandler(stateStore),\n                  stateStore: this._createScopedStateStore(stateStore, customModule.name),\n                  transaction: transaction\n                });\n\n              case 44:\n                _context10.next = 39;\n                break;\n\n              case 46:\n                _context10.next = 51;\n                break;\n\n              case 48:\n                _context10.prev = 48;\n                _context10.t1 = _context10[\"catch\"](37);\n\n                _iterator7.e(_context10.t1);\n\n              case 51:\n                _context10.prev = 51;\n\n                _iterator7.f();\n\n                return _context10.finish(51);\n\n              case 54:\n                moduleName = this._getModule(transaction).name;\n                customAsset = this._getAsset(transaction);\n                decodedAsset = lisk_codec_1.codec.decode(customAsset.schema, transaction.asset);\n                _context10.next = 59;\n                return customAsset.apply({\n                  asset: decodedAsset,\n                  reducerHandler: reducerHandler,\n                  stateStore: this._createScopedStateStore(stateStore, moduleName),\n                  transaction: transaction\n                });\n\n              case 59:\n                _iterator8 = _createForOfIteratorHelper(this._modules);\n                _context10.prev = 60;\n\n                _iterator8.s();\n\n              case 62:\n                if ((_step8 = _iterator8.n()).done) {\n                  _context10.next = 69;\n                  break;\n                }\n\n                _customModule2 = _step8.value;\n\n                if (!_customModule2.afterTransactionApply) {\n                  _context10.next = 67;\n                  break;\n                }\n\n                _context10.next = 67;\n                return _customModule2.afterTransactionApply({\n                  reducerHandler: this._createReducerHandler(stateStore),\n                  stateStore: this._createScopedStateStore(stateStore, _customModule2.name),\n                  transaction: transaction\n                });\n\n              case 67:\n                _context10.next = 62;\n                break;\n\n              case 69:\n                _context10.next = 74;\n                break;\n\n              case 71:\n                _context10.prev = 71;\n                _context10.t2 = _context10[\"catch\"](60);\n\n                _iterator8.e(_context10.t2);\n\n              case 74:\n                _context10.prev = 74;\n\n                _iterator8.f();\n\n                return _context10.finish(74);\n\n              case 77:\n                _context10.next = 34;\n                break;\n\n              case 79:\n                _context10.next = 84;\n                break;\n\n              case 81:\n                _context10.prev = 81;\n                _context10.t3 = _context10[\"catch\"](32);\n\n                _iterator6.e(_context10.t3);\n\n              case 84:\n                _context10.prev = 84;\n\n                _iterator6.f();\n\n                return _context10.finish(84);\n\n              case 87:\n                _iterator9 = _createForOfIteratorHelper(this._modules);\n                _context10.prev = 88;\n\n                _iterator9.s();\n\n              case 90:\n                if ((_step9 = _iterator9.n()).done) {\n                  _context10.next = 97;\n                  break;\n                }\n\n                _customModule4 = _step9.value;\n\n                if (!_customModule4.afterBlockApply) {\n                  _context10.next = 95;\n                  break;\n                }\n\n                _context10.next = 95;\n                return _customModule4.afterBlockApply({\n                  block: block,\n                  reducerHandler: reducerHandler,\n                  stateStore: this._createScopedStateStore(stateStore, _customModule4.name),\n                  consensus: this._createConsensus(stateStore, block.header)\n                });\n\n              case 95:\n                _context10.next = 90;\n                break;\n\n              case 97:\n                _context10.next = 102;\n                break;\n\n              case 99:\n                _context10.prev = 99;\n                _context10.t4 = _context10[\"catch\"](88);\n\n                _iterator9.e(_context10.t4);\n\n              case 102:\n                _context10.prev = 102;\n\n                _iterator9.f();\n\n                return _context10.finish(102);\n\n              case 105:\n                _context10.next = 107;\n                return this._chain.saveBlock(block, stateStore, this._bft.finalizedHeight, {\n                  removeFromTempTable: removeFromTempTable\n                });\n\n              case 107:\n                return _context10.abrupt(\"return\", block);\n\n              case 108:\n              case \"end\":\n                return _context10.stop();\n            }\n          }\n        }, _callee10, this, [[11, 22, 25, 28], [32, 81, 84, 87], [37, 48, 51, 54], [60, 71, 74, 77], [88, 99, 102, 105]]);\n      }));\n\n      function _processValidated(_x6) {\n        return _processValidated3.apply(this, arguments);\n      }\n\n      return _processValidated;\n    }()\n  }, {\n    key: \"_validate\",\n    value: function _validate(block) {\n      var _a;\n\n      if (block.header.version !== BLOCK_VERSION) {\n        throw new errors_1.ApplyPenaltyError(\"Block version must be \".concat(BLOCK_VERSION));\n      }\n\n      try {\n        this._chain.validateBlockHeader(block);\n\n        if (block.payload.length) {\n          var _iterator10 = _createForOfIteratorHelper(block.payload),\n              _step10;\n\n          try {\n            for (_iterator10.s(); !(_step10 = _iterator10.n()).done;) {\n              var transaction = _step10.value;\n              this.validateTransaction(transaction);\n            }\n          } catch (err) {\n            _iterator10.e(err);\n          } finally {\n            _iterator10.f();\n          }\n        }\n      } catch (error) {\n        throw new errors_1.ApplyPenaltyError((_a = error.message) !== null && _a !== void 0 ? _a : 'Invalid block to be processed');\n      }\n    }\n  }, {\n    key: \"_deleteBlock\",\n    value: function () {\n      var _deleteBlock2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee11(block) {\n        var saveTempBlock,\n            stateStore,\n            _args11 = arguments;\n        return _regeneratorRuntime.wrap(function _callee11$(_context11) {\n          while (1) {\n            switch (_context11.prev = _context11.next) {\n              case 0:\n                saveTempBlock = _args11.length > 1 && _args11[1] !== undefined ? _args11[1] : false;\n\n                if (!(block.header.height <= this._bft.finalizedHeight)) {\n                  _context11.next = 3;\n                  break;\n                }\n\n                throw new Error('Can not delete block below or same as finalized height');\n\n              case 3:\n                _context11.next = 5;\n                return this._chain.newStateStore(1);\n\n              case 5:\n                stateStore = _context11.sent;\n                _context11.next = 8;\n                return this._chain.removeBlock(block, stateStore, {\n                  saveTempBlock: saveTempBlock\n                });\n\n              case 8:\n              case \"end\":\n                return _context11.stop();\n            }\n          }\n        }, _callee11, this);\n      }));\n\n      function _deleteBlock(_x7) {\n        return _deleteBlock2.apply(this, arguments);\n      }\n\n      return _deleteBlock;\n    }()\n  }, {\n    key: \"_createConsensus\",\n    value: function _createConsensus(stateStore, blockHeader) {\n      var _this4 = this;\n\n      return {\n        getFinalizedHeight: function getFinalizedHeight() {\n          return _this4._bft.finalizedHeight;\n        },\n        updateDelegates: function () {\n          var _updateDelegates = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee12(delegates) {\n            return _regeneratorRuntime.wrap(function _callee12$(_context12) {\n              while (1) {\n                switch (_context12.prev = _context12.next) {\n                  case 0:\n                    _context12.next = 2;\n                    return _this4._chain.setValidators(delegates, stateStore, blockHeader);\n\n                  case 2:\n                  case \"end\":\n                    return _context12.stop();\n                }\n              }\n            }, _callee12);\n          }));\n\n          function updateDelegates(_x8) {\n            return _updateDelegates.apply(this, arguments);\n          }\n\n          return updateDelegates;\n        }(),\n        getDelegates: function () {\n          var _getDelegates = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee13() {\n            return _regeneratorRuntime.wrap(function _callee13$(_context13) {\n              while (1) {\n                switch (_context13.prev = _context13.next) {\n                  case 0:\n                    return _context13.abrupt(\"return\", lisk_chain_1.getValidators(stateStore));\n\n                  case 1:\n                  case \"end\":\n                    return _context13.stop();\n                }\n              }\n            }, _callee13);\n          }));\n\n          function getDelegates() {\n            return _getDelegates.apply(this, arguments);\n          }\n\n          return getDelegates;\n        }()\n      };\n    }\n  }, {\n    key: \"_createScopedStateStore\",\n    value: function _createScopedStateStore(stateStore, moduleName) {\n      return {\n        account: {\n          get: function () {\n            var _get = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee14(key) {\n              var account;\n              return _regeneratorRuntime.wrap(function _callee14$(_context14) {\n                while (1) {\n                  switch (_context14.prev = _context14.next) {\n                    case 0:\n                      _context14.next = 2;\n                      return stateStore.account.get(key);\n\n                    case 2:\n                      account = _context14.sent;\n                      return _context14.abrupt(\"return\", _defineProperty({\n                        address: account.address\n                      }, moduleName, account[moduleName]));\n\n                    case 4:\n                    case \"end\":\n                      return _context14.stop();\n                  }\n                }\n              }, _callee14);\n            }));\n\n            function get(_x9) {\n              return _get.apply(this, arguments);\n            }\n\n            return get;\n          }(),\n          getOrDefault: function () {\n            var _getOrDefault = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee15(key) {\n              var account;\n              return _regeneratorRuntime.wrap(function _callee15$(_context15) {\n                while (1) {\n                  switch (_context15.prev = _context15.next) {\n                    case 0:\n                      _context15.next = 2;\n                      return stateStore.account.getOrDefault(key);\n\n                    case 2:\n                      account = _context15.sent;\n                      return _context15.abrupt(\"return\", _defineProperty({\n                        address: account.address\n                      }, moduleName, account[moduleName]));\n\n                    case 4:\n                    case \"end\":\n                      return _context15.stop();\n                  }\n                }\n              }, _callee15);\n            }));\n\n            function getOrDefault(_x10) {\n              return _getOrDefault.apply(this, arguments);\n            }\n\n            return getOrDefault;\n          }(),\n          set: function () {\n            var _set = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee16(key, value) {\n              var account;\n              return _regeneratorRuntime.wrap(function _callee16$(_context16) {\n                while (1) {\n                  switch (_context16.prev = _context16.next) {\n                    case 0:\n                      _context16.next = 2;\n                      return stateStore.account.getOrDefault(key);\n\n                    case 2:\n                      account = _context16.sent;\n                      account[moduleName] = value[moduleName];\n                      _context16.next = 6;\n                      return stateStore.account.set(key, account);\n\n                    case 6:\n                    case \"end\":\n                      return _context16.stop();\n                  }\n                }\n              }, _callee16);\n            }));\n\n            function set(_x11, _x12) {\n              return _set.apply(this, arguments);\n            }\n\n            return set;\n          }(),\n          del: function () {\n            var _del = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee17(key) {\n              return _regeneratorRuntime.wrap(function _callee17$(_context17) {\n                while (1) {\n                  switch (_context17.prev = _context17.next) {\n                    case 0:\n                      return _context17.abrupt(\"return\", stateStore.account.del(key));\n\n                    case 1:\n                    case \"end\":\n                      return _context17.stop();\n                  }\n                }\n              }, _callee17);\n            }));\n\n            function del(_x13) {\n              return _del.apply(this, arguments);\n            }\n\n            return del;\n          }()\n        },\n        chain: {\n          get: function () {\n            var _get2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee18(key) {\n              return _regeneratorRuntime.wrap(function _callee18$(_context18) {\n                while (1) {\n                  switch (_context18.prev = _context18.next) {\n                    case 0:\n                      return _context18.abrupt(\"return\", stateStore.chain.get(key));\n\n                    case 1:\n                    case \"end\":\n                      return _context18.stop();\n                  }\n                }\n              }, _callee18);\n            }));\n\n            function get(_x14) {\n              return _get2.apply(this, arguments);\n            }\n\n            return get;\n          }(),\n          lastBlockHeaders: stateStore.chain.lastBlockHeaders,\n          lastBlockReward: stateStore.chain.lastBlockReward,\n          networkIdentifier: stateStore.chain.networkIdentifier,\n          set: function () {\n            var _set2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee19(key, value) {\n              return _regeneratorRuntime.wrap(function _callee19$(_context19) {\n                while (1) {\n                  switch (_context19.prev = _context19.next) {\n                    case 0:\n                      _context19.next = 2;\n                      return stateStore.chain.set(key, value);\n\n                    case 2:\n                    case \"end\":\n                      return _context19.stop();\n                  }\n                }\n              }, _callee19);\n            }));\n\n            function set(_x15, _x16) {\n              return _set2.apply(this, arguments);\n            }\n\n            return set;\n          }()\n        }\n      };\n    }\n  }, {\n    key: \"_createReducerHandler\",\n    value: function _createReducerHandler(stateStore) {\n      var _this5 = this;\n\n      return {\n        invoke: function () {\n          var _invoke = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee20(name, params) {\n            var requestNames, _requestNames, moduleName, funcName, customModule, fn;\n\n            return _regeneratorRuntime.wrap(function _callee20$(_context20) {\n              while (1) {\n                switch (_context20.prev = _context20.next) {\n                  case 0:\n                    requestNames = name.split(':');\n\n                    if (!(requestNames.length !== 2)) {\n                      _context20.next = 3;\n                      break;\n                    }\n\n                    throw new Error('Invalid format to call reducer');\n\n                  case 3:\n                    _requestNames = _slicedToArray(requestNames, 2), moduleName = _requestNames[0], funcName = _requestNames[1];\n                    customModule = _this5._getModuleByName(moduleName);\n                    fn = customModule.reducers[funcName];\n\n                    if (fn) {\n                      _context20.next = 8;\n                      break;\n                    }\n\n                    throw new Error(\"\".concat(funcName, \" does not exist in module \").concat(moduleName));\n\n                  case 8:\n                    return _context20.abrupt(\"return\", fn(params !== null && params !== void 0 ? params : {}, _this5._createScopedStateStore(stateStore, moduleName)));\n\n                  case 9:\n                  case \"end\":\n                    return _context20.stop();\n                }\n              }\n            }, _callee20);\n          }));\n\n          function invoke(_x17, _x18) {\n            return _invoke.apply(this, arguments);\n          }\n\n          return invoke;\n        }()\n      };\n    }\n  }, {\n    key: \"_getModuleByName\",\n    value: function _getModuleByName(name) {\n      var customModule = this._modules.find(function (m) {\n        return m.name === name;\n      });\n\n      if (!customModule) {\n        throw new Error(\"Module \".concat(name, \" does not exist\"));\n      }\n\n      return customModule;\n    }\n  }, {\n    key: \"_getModule\",\n    value: function _getModule(transaction) {\n      var customModule = this._modules.find(function (m) {\n        return m.id === transaction.moduleID;\n      });\n\n      if (!customModule) {\n        throw new Error(\"Module id \".concat(transaction.moduleID, \" does not exist\"));\n      }\n\n      return customModule;\n    }\n  }, {\n    key: \"_getAsset\",\n    value: function _getAsset(transaction) {\n      var customModule = this._getModule(transaction);\n\n      var customAsset = customModule.transactionAssets.find(function (asset) {\n        return asset.id === transaction.assetID;\n      });\n\n      if (!customAsset) {\n        throw new Error(\"Asset id \".concat(transaction.assetID, \" does not exist in module id \").concat(transaction.moduleID, \".\"));\n      }\n\n      return customAsset;\n    }\n  }]);\n\n  return Processor;\n}();\n\nexports.Processor = Processor;","map":{"version":3,"sources":["../../../src/node/processor/processor.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Processor = exports.EVENT_PROCESSOR_BROADCAST_BLOCK = exports.EVENT_PROCESSOR_SYNC_REQUIRED = void 0;\nconst lisk_bft_1 = require(\"@liskhq/lisk-bft\");\nconst lisk_chain_1 = require(\"@liskhq/lisk-chain\");\nconst lisk_utils_1 = require(\"@liskhq/lisk-utils\");\nconst events_1 = require(\"events\");\nconst lisk_codec_1 = require(\"@liskhq/lisk-codec\");\nconst lisk_validator_1 = require(\"@liskhq/lisk-validator\");\nconst constants_1 = require(\"../../constants\");\nconst errors_1 = require(\"../../errors\");\nconst forkStatusList = [\n    lisk_bft_1.ForkStatus.IDENTICAL_BLOCK,\n    lisk_bft_1.ForkStatus.VALID_BLOCK,\n    lisk_bft_1.ForkStatus.DOUBLE_FORGING,\n    lisk_bft_1.ForkStatus.TIE_BREAK,\n    lisk_bft_1.ForkStatus.DIFFERENT_CHAIN,\n    lisk_bft_1.ForkStatus.DISCARD,\n];\nexports.EVENT_PROCESSOR_SYNC_REQUIRED = 'EVENT_PROCESSOR_SYNC_REQUIRED';\nexports.EVENT_PROCESSOR_BROADCAST_BLOCK = 'EVENT_PROCESSOR_BROADCAST_BLOCK';\nconst BLOCK_VERSION = 2;\nclass Processor {\n    constructor({ channel, logger, chainModule, bftModule }) {\n        this._modules = [];\n        this._stop = false;\n        this._channel = channel;\n        this._logger = logger;\n        this._chain = chainModule;\n        this._bft = bftModule;\n        this._mutex = new lisk_utils_1.jobHandlers.Mutex();\n        this.events = new events_1.EventEmitter();\n    }\n    register(customModule) {\n        const existingModule = this._modules.find(m => m.id === customModule.id);\n        if (existingModule) {\n            throw new Error(`Module id ${customModule.id} is already registered`);\n        }\n        this._modules.push(customModule);\n    }\n    async init(genesisBlock) {\n        this._logger.debug({\n            id: genesisBlock.header.id,\n            transactionRoot: genesisBlock.header.transactionRoot,\n        }, 'Initializing processor');\n        const genesisExist = await this._chain.genesisBlockExist(genesisBlock);\n        const stateStore = await this._chain.newStateStore();\n        if (!genesisExist) {\n            this._chain.validateGenesisBlockHeader(genesisBlock);\n            await this._chain.applyGenesisBlock(genesisBlock, stateStore);\n            for (const customModule of this._modules) {\n                if (customModule.afterGenesisBlockApply) {\n                    await customModule.afterGenesisBlockApply({\n                        genesisBlock,\n                        stateStore: this._createScopedStateStore(stateStore, customModule.name),\n                        reducerHandler: this._createReducerHandler(stateStore),\n                    });\n                }\n            }\n            await this._chain.saveBlock(genesisBlock, stateStore, 0);\n        }\n        await this._chain.init(genesisBlock);\n        await this._bft.init(stateStore);\n        this._logger.info('Blockchain ready');\n    }\n    async stop() {\n        this._stop = true;\n        await this._mutex.acquire();\n    }\n    async process(block, { peerId } = {}) {\n        if (this._stop) {\n            return;\n        }\n        await this._mutex.runExclusive(async () => {\n            this._logger.debug({ id: block.header.id, height: block.header.height }, 'Starting to process block');\n            const { lastBlock } = this._chain;\n            const forkStatus = this._bft.forkChoice(block.header, lastBlock.header);\n            if (!forkStatusList.includes(forkStatus)) {\n                this._logger.debug({ status: forkStatus, blockId: block.header.id }, 'Unknown fork status');\n                throw new Error('Unknown fork status');\n            }\n            if (forkStatus === lisk_bft_1.ForkStatus.DISCARD) {\n                this._logger.debug({ id: block.header.id, height: block.header.height }, 'Discarding block');\n                const encodedBlock = this._chain.dataAccess.encode(block);\n                this._channel.publish(constants_1.APP_EVENT_CHAIN_FORK, {\n                    block: encodedBlock.toString('hex'),\n                });\n                return;\n            }\n            if (forkStatus === lisk_bft_1.ForkStatus.IDENTICAL_BLOCK) {\n                this._logger.debug({ id: block.header.id, height: block.header.height }, 'Block already processed');\n                return;\n            }\n            if (forkStatus === lisk_bft_1.ForkStatus.DOUBLE_FORGING) {\n                this._logger.warn({\n                    id: block.header.id,\n                    generatorPublicKey: block.header.generatorPublicKey,\n                }, 'Discarding block due to double forging');\n                const encodedBlock = this._chain.dataAccess.encode(block);\n                this._channel.publish(constants_1.APP_EVENT_CHAIN_FORK, {\n                    block: encodedBlock.toString('hex'),\n                });\n                return;\n            }\n            if (forkStatus === lisk_bft_1.ForkStatus.DIFFERENT_CHAIN) {\n                this._logger.debug({ id: block.header.id, height: block.header.height }, 'Detected different chain to sync');\n                const encodedBlock = this._chain.dataAccess.encode(block);\n                this.events.emit(exports.EVENT_PROCESSOR_SYNC_REQUIRED, {\n                    block,\n                    peerId,\n                });\n                this._channel.publish(constants_1.APP_EVENT_CHAIN_FORK, {\n                    block: encodedBlock.toString('hex'),\n                });\n                return;\n            }\n            if (forkStatus === lisk_bft_1.ForkStatus.TIE_BREAK) {\n                this._logger.info({ id: lastBlock.header.id, height: lastBlock.header.height }, 'Received tie breaking block');\n                const encodedBlock = this._chain.dataAccess.encode(block);\n                this._channel.publish(constants_1.APP_EVENT_CHAIN_FORK, {\n                    block: encodedBlock.toString('hex'),\n                });\n                this._validate(block);\n                const previousLastBlock = lisk_utils_1.objects.cloneDeep(lastBlock);\n                await this._deleteBlock(lastBlock);\n                try {\n                    await this._processValidated(block);\n                }\n                catch (err) {\n                    this._logger.error({\n                        id: block.header.id,\n                        previousBlockId: previousLastBlock.header.id,\n                        err: err,\n                    }, 'Failed to apply newly received block. restoring previous block.');\n                    await this._processValidated(previousLastBlock, {\n                        skipBroadcast: true,\n                    });\n                }\n                return;\n            }\n            this._logger.debug({ id: block.header.id, height: block.header.height }, 'Processing valid block');\n            this._validate(block);\n            await this._processValidated(block);\n        });\n    }\n    validate(block) {\n        this._logger.debug({ id: block.header.id, height: block.header.height }, 'Validating block');\n        this._validate(block);\n    }\n    async processValidated(block, { removeFromTempTable = false } = {}) {\n        if (this._stop) {\n            return;\n        }\n        await this._mutex.runExclusive(async () => {\n            this._logger.debug({ id: block.header.id, height: block.header.height }, 'Processing validated block');\n            return this._processValidated(block, {\n                skipBroadcast: true,\n                removeFromTempTable,\n            });\n        });\n    }\n    async deleteLastBlock({ saveTempBlock = false, } = {}) {\n        if (this._stop) {\n            return;\n        }\n        await this._mutex.runExclusive(async () => {\n            const { lastBlock } = this._chain;\n            this._logger.debug({ id: lastBlock.header.id, height: lastBlock.header.height }, 'Deleting last block');\n            await this._deleteBlock(lastBlock, saveTempBlock);\n            return this._chain.lastBlock;\n        });\n    }\n    validateTransaction(transaction) {\n        this._chain.validateTransaction(transaction);\n        const customAsset = this._getAsset(transaction);\n        if (customAsset.validate) {\n            const decodedAsset = lisk_codec_1.codec.decode(customAsset.schema, transaction.asset);\n            const assetSchemaErrors = lisk_validator_1.validator.validate(customAsset.schema, decodedAsset);\n            if (assetSchemaErrors.length) {\n                throw new lisk_validator_1.LiskValidationError(assetSchemaErrors);\n            }\n            customAsset.validate({\n                asset: decodedAsset,\n                transaction,\n            });\n        }\n    }\n    async verifyTransactions(transactions, stateStore) {\n        var _a;\n        if (!transactions.length) {\n            return;\n        }\n        for (const transaction of transactions) {\n            try {\n                for (const customModule of this._modules) {\n                    if (customModule.beforeTransactionApply) {\n                        await customModule.beforeTransactionApply({\n                            reducerHandler: this._createReducerHandler(stateStore),\n                            stateStore: this._createScopedStateStore(stateStore, customModule.name),\n                            transaction,\n                        });\n                    }\n                }\n                const moduleName = this._getModule(transaction).name;\n                const customAsset = this._getAsset(transaction);\n                const decodedAsset = lisk_codec_1.codec.decode(customAsset.schema, transaction.asset);\n                await customAsset.apply({\n                    asset: decodedAsset,\n                    reducerHandler: this._createReducerHandler(stateStore),\n                    stateStore: this._createScopedStateStore(stateStore, moduleName),\n                    transaction,\n                });\n                for (const customModule of this._modules) {\n                    if (customModule.afterTransactionApply) {\n                        await customModule.afterTransactionApply({\n                            reducerHandler: this._createReducerHandler(stateStore),\n                            stateStore: this._createScopedStateStore(stateStore, customModule.name),\n                            transaction,\n                        });\n                    }\n                }\n            }\n            catch (err) {\n                throw new errors_1.TransactionApplyError((_a = err.message) !== null && _a !== void 0 ? _a : 'Transaction verification failed', transaction.id, err);\n            }\n        }\n    }\n    async _processValidated(block, { skipBroadcast, removeFromTempTable = false, } = {}) {\n        const stateStore = await this._chain.newStateStore();\n        const reducerHandler = this._createReducerHandler(stateStore);\n        await this._chain.verifyBlockHeader(block, stateStore);\n        await this._bft.verifyBlockHeader(block.header, stateStore);\n        if (!skipBroadcast) {\n            this.events.emit(exports.EVENT_PROCESSOR_BROADCAST_BLOCK, {\n                block,\n            });\n        }\n        for (const customModule of this._modules) {\n            if (customModule.beforeBlockApply) {\n                await customModule.beforeBlockApply({\n                    block,\n                    stateStore: this._createScopedStateStore(stateStore, customModule.name),\n                    reducerHandler,\n                });\n            }\n        }\n        await this._bft.applyBlockHeader(block.header, stateStore);\n        if (block.payload.length) {\n            for (const transaction of block.payload) {\n                for (const customModule of this._modules) {\n                    if (customModule.beforeTransactionApply) {\n                        await customModule.beforeTransactionApply({\n                            reducerHandler: this._createReducerHandler(stateStore),\n                            stateStore: this._createScopedStateStore(stateStore, customModule.name),\n                            transaction,\n                        });\n                    }\n                }\n                const moduleName = this._getModule(transaction).name;\n                const customAsset = this._getAsset(transaction);\n                const decodedAsset = lisk_codec_1.codec.decode(customAsset.schema, transaction.asset);\n                await customAsset.apply({\n                    asset: decodedAsset,\n                    reducerHandler,\n                    stateStore: this._createScopedStateStore(stateStore, moduleName),\n                    transaction,\n                });\n                for (const customModule of this._modules) {\n                    if (customModule.afterTransactionApply) {\n                        await customModule.afterTransactionApply({\n                            reducerHandler: this._createReducerHandler(stateStore),\n                            stateStore: this._createScopedStateStore(stateStore, customModule.name),\n                            transaction,\n                        });\n                    }\n                }\n            }\n        }\n        for (const customModule of this._modules) {\n            if (customModule.afterBlockApply) {\n                await customModule.afterBlockApply({\n                    block,\n                    reducerHandler,\n                    stateStore: this._createScopedStateStore(stateStore, customModule.name),\n                    consensus: this._createConsensus(stateStore, block.header),\n                });\n            }\n        }\n        await this._chain.saveBlock(block, stateStore, this._bft.finalizedHeight, {\n            removeFromTempTable,\n        });\n        return block;\n    }\n    _validate(block) {\n        var _a;\n        if (block.header.version !== BLOCK_VERSION) {\n            throw new errors_1.ApplyPenaltyError(`Block version must be ${BLOCK_VERSION}`);\n        }\n        try {\n            this._chain.validateBlockHeader(block);\n            if (block.payload.length) {\n                for (const transaction of block.payload) {\n                    this.validateTransaction(transaction);\n                }\n            }\n        }\n        catch (error) {\n            throw new errors_1.ApplyPenaltyError((_a = error.message) !== null && _a !== void 0 ? _a : 'Invalid block to be processed');\n        }\n    }\n    async _deleteBlock(block, saveTempBlock = false) {\n        if (block.header.height <= this._bft.finalizedHeight) {\n            throw new Error('Can not delete block below or same as finalized height');\n        }\n        const stateStore = await this._chain.newStateStore(1);\n        await this._chain.removeBlock(block, stateStore, { saveTempBlock });\n    }\n    _createConsensus(stateStore, blockHeader) {\n        return {\n            getFinalizedHeight: () => this._bft.finalizedHeight,\n            updateDelegates: async (delegates) => {\n                await this._chain.setValidators(delegates, stateStore, blockHeader);\n            },\n            getDelegates: async () => lisk_chain_1.getValidators(stateStore),\n        };\n    }\n    _createScopedStateStore(stateStore, moduleName) {\n        return {\n            account: {\n                get: async (key) => {\n                    const account = await stateStore.account.get(key);\n                    return {\n                        address: account.address,\n                        [moduleName]: account[moduleName],\n                    };\n                },\n                getOrDefault: async (key) => {\n                    const account = await stateStore.account.getOrDefault(key);\n                    return {\n                        address: account.address,\n                        [moduleName]: account[moduleName],\n                    };\n                },\n                set: async (key, value) => {\n                    const account = await stateStore.account.getOrDefault(key);\n                    account[moduleName] = value[moduleName];\n                    await stateStore.account.set(key, account);\n                },\n                del: async (key) => stateStore.account.del(key),\n            },\n            chain: {\n                get: async (key) => stateStore.chain.get(key),\n                lastBlockHeaders: stateStore.chain.lastBlockHeaders,\n                lastBlockReward: stateStore.chain.lastBlockReward,\n                networkIdentifier: stateStore.chain.networkIdentifier,\n                set: async (key, value) => {\n                    await stateStore.chain.set(key, value);\n                },\n            },\n        };\n    }\n    _createReducerHandler(stateStore) {\n        return {\n            invoke: async (name, params) => {\n                const requestNames = name.split(':');\n                if (requestNames.length !== 2) {\n                    throw new Error('Invalid format to call reducer');\n                }\n                const [moduleName, funcName] = requestNames;\n                const customModule = this._getModuleByName(moduleName);\n                const fn = customModule.reducers[funcName];\n                if (!fn) {\n                    throw new Error(`${funcName} does not exist in module ${moduleName}`);\n                }\n                return fn(params !== null && params !== void 0 ? params : {}, this._createScopedStateStore(stateStore, moduleName));\n            },\n        };\n    }\n    _getModuleByName(name) {\n        const customModule = this._modules.find(m => m.name === name);\n        if (!customModule) {\n            throw new Error(`Module ${name} does not exist`);\n        }\n        return customModule;\n    }\n    _getModule(transaction) {\n        const customModule = this._modules.find(m => m.id === transaction.moduleID);\n        if (!customModule) {\n            throw new Error(`Module id ${transaction.moduleID} does not exist`);\n        }\n        return customModule;\n    }\n    _getAsset(transaction) {\n        const customModule = this._getModule(transaction);\n        const customAsset = customModule.transactionAssets.find(asset => asset.id === transaction.assetID);\n        if (!customAsset) {\n            throw new Error(`Asset id ${transaction.assetID} does not exist in module id ${transaction.moduleID}.`);\n        }\n        return customAsset;\n    }\n}\nexports.Processor = Processor;\n//# sourceMappingURL=processor.js.map"]},"metadata":{},"sourceType":"script"}