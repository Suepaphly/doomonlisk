{"ast":null,"code":"\"use strict\";\n\nvar _taggedTemplateLiteral = require(\"/home/lisk/doomonlisk/src/app/build/react-app/node_modules/@babel/runtime/helpers/taggedTemplateLiteral\");\n\nvar _templateObject, _templateObject2, _templateObject3, _templateObject4, _templateObject5, _templateObject6, _templateObject7, _templateObject8, _templateObject9, _templateObject10;\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.validateKeywordUsage = exports.validSchemaType = exports.funcKeywordCode = exports.macroKeywordCode = void 0;\n\nvar codegen_1 = require(\"../codegen\");\n\nvar names_1 = require(\"../names\");\n\nvar code_1 = require(\"../../vocabularies/code\");\n\nvar errors_1 = require(\"../errors\");\n\nfunction macroKeywordCode(cxt, def) {\n  var gen = cxt.gen,\n      keyword = cxt.keyword,\n      schema = cxt.schema,\n      parentSchema = cxt.parentSchema,\n      it = cxt.it;\n  var macroSchema = def.macro.call(it.self, schema, parentSchema, it);\n  var schemaRef = useKeyword(gen, keyword, macroSchema);\n  if (it.opts.validateSchema !== false) it.self.validateSchema(macroSchema, true);\n  var valid = gen.name(\"valid\");\n  cxt.subschema({\n    schema: macroSchema,\n    schemaPath: codegen_1.nil,\n    errSchemaPath: \"\".concat(it.errSchemaPath, \"/\").concat(keyword),\n    topSchemaRef: schemaRef,\n    compositeRule: true\n  }, valid);\n  cxt.pass(valid, function () {\n    return cxt.error(true);\n  });\n}\n\nexports.macroKeywordCode = macroKeywordCode;\n\nfunction funcKeywordCode(cxt, def) {\n  var _a;\n\n  var gen = cxt.gen,\n      keyword = cxt.keyword,\n      schema = cxt.schema,\n      parentSchema = cxt.parentSchema,\n      $data = cxt.$data,\n      it = cxt.it;\n  checkAsyncKeyword(it, def);\n  var validate = !$data && def.compile ? def.compile.call(it.self, schema, parentSchema, it) : def.validate;\n  var validateRef = useKeyword(gen, keyword, validate);\n  var valid = gen.let(\"valid\");\n  cxt.block$data(valid, validateKeyword);\n  cxt.ok((_a = def.valid) !== null && _a !== void 0 ? _a : valid);\n\n  function validateKeyword() {\n    if (def.errors === false) {\n      assignValid();\n      if (def.modifying) modifyData(cxt);\n      reportErrs(function () {\n        return cxt.error();\n      });\n    } else {\n      var ruleErrs = def.async ? validateAsync() : validateSync();\n      if (def.modifying) modifyData(cxt);\n      reportErrs(function () {\n        return addErrs(cxt, ruleErrs);\n      });\n    }\n  }\n\n  function validateAsync() {\n    var ruleErrs = gen.let(\"ruleErrs\", null);\n    gen.try(function () {\n      return assignValid(codegen_1._(_templateObject || (_templateObject = _taggedTemplateLiteral([\"await \"]))));\n    }, function (e) {\n      return gen.assign(valid, false).if(codegen_1._(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral([\"\", \" instanceof \", \"\"])), e, it.ValidationError), function () {\n        return gen.assign(ruleErrs, codegen_1._(_templateObject3 || (_templateObject3 = _taggedTemplateLiteral([\"\", \".errors\"])), e));\n      }, function () {\n        return gen.throw(e);\n      });\n    });\n    return ruleErrs;\n  }\n\n  function validateSync() {\n    var validateErrs = codegen_1._(_templateObject4 || (_templateObject4 = _taggedTemplateLiteral([\"\", \".errors\"])), validateRef);\n\n    gen.assign(validateErrs, null);\n    assignValid(codegen_1.nil);\n    return validateErrs;\n  }\n\n  function assignValid() {\n    var _await = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : def.async ? codegen_1._(_templateObject5 || (_templateObject5 = _taggedTemplateLiteral([\"await \"]))) : codegen_1.nil;\n\n    var passCxt = it.opts.passContext ? names_1.default.this : names_1.default.self;\n    var passSchema = !(\"compile\" in def && !$data || def.schema === false);\n    gen.assign(valid, codegen_1._(_templateObject6 || (_templateObject6 = _taggedTemplateLiteral([\"\", \"\", \"\"])), _await, code_1.callValidateCode(cxt, validateRef, passCxt, passSchema)), def.modifying);\n  }\n\n  function reportErrs(errors) {\n    var _a;\n\n    gen.if(codegen_1.not((_a = def.valid) !== null && _a !== void 0 ? _a : valid), errors);\n  }\n}\n\nexports.funcKeywordCode = funcKeywordCode;\n\nfunction modifyData(cxt) {\n  var gen = cxt.gen,\n      data = cxt.data,\n      it = cxt.it;\n  gen.if(it.parentData, function () {\n    return gen.assign(data, codegen_1._(_templateObject7 || (_templateObject7 = _taggedTemplateLiteral([\"\", \"[\", \"]\"])), it.parentData, it.parentDataProperty));\n  });\n}\n\nfunction addErrs(cxt, errs) {\n  var gen = cxt.gen;\n  gen.if(codegen_1._(_templateObject8 || (_templateObject8 = _taggedTemplateLiteral([\"Array.isArray(\", \")\"])), errs), function () {\n    gen.assign(names_1.default.vErrors, codegen_1._(_templateObject9 || (_templateObject9 = _taggedTemplateLiteral([\"\", \" === null ? \", \" : \", \".concat(\", \")\"])), names_1.default.vErrors, errs, names_1.default.vErrors, errs)).assign(names_1.default.errors, codegen_1._(_templateObject10 || (_templateObject10 = _taggedTemplateLiteral([\"\", \".length\"])), names_1.default.vErrors));\n    errors_1.extendErrors(cxt);\n  }, function () {\n    return cxt.error();\n  });\n}\n\nfunction checkAsyncKeyword(_ref, def) {\n  var schemaEnv = _ref.schemaEnv;\n  if (def.async && !schemaEnv.$async) throw new Error(\"async keyword in sync schema\");\n}\n\nfunction useKeyword(gen, keyword, result) {\n  if (result === undefined) throw new Error(\"keyword \\\"\".concat(keyword, \"\\\" failed to compile\"));\n  return gen.scopeValue(\"keyword\", typeof result == \"function\" ? {\n    ref: result\n  } : {\n    ref: result,\n    code: codegen_1.stringify(result)\n  });\n}\n\nfunction validSchemaType(schema, schemaType) {\n  var allowUndefined = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  // TODO add tests\n  return !schemaType.length || schemaType.some(function (st) {\n    return st === \"array\" ? Array.isArray(schema) : st === \"object\" ? schema && typeof schema == \"object\" && !Array.isArray(schema) : typeof schema == st || allowUndefined && typeof schema == \"undefined\";\n  });\n}\n\nexports.validSchemaType = validSchemaType;\n\nfunction validateKeywordUsage(_ref2, def, keyword) {\n  var schema = _ref2.schema,\n      opts = _ref2.opts,\n      self = _ref2.self,\n      errSchemaPath = _ref2.errSchemaPath;\n\n  /* istanbul ignore if */\n  if (Array.isArray(def.keyword) ? !def.keyword.includes(keyword) : def.keyword !== keyword) {\n    throw new Error(\"ajv implementation error\");\n  }\n\n  var deps = def.dependencies;\n\n  if (deps === null || deps === void 0 ? void 0 : deps.some(function (kwd) {\n    return !Object.prototype.hasOwnProperty.call(schema, kwd);\n  })) {\n    throw new Error(\"parent schema must have dependencies of \".concat(keyword, \": \").concat(deps.join(\",\")));\n  }\n\n  if (def.validateSchema) {\n    var valid = def.validateSchema(schema[keyword]);\n\n    if (!valid) {\n      var msg = \"keyword \\\"\".concat(keyword, \"\\\" value is invalid at path \\\"\").concat(errSchemaPath, \"\\\": \") + self.errorsText(def.validateSchema.errors);\n      if (opts.validateSchema === \"log\") self.logger.error(msg);else throw new Error(msg);\n    }\n  }\n}\n\nexports.validateKeywordUsage = validateKeywordUsage;","map":{"version":3,"sources":["../../../lib/compile/validate/keyword.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.validateKeywordUsage = exports.validSchemaType = exports.funcKeywordCode = exports.macroKeywordCode = void 0;\nconst codegen_1 = require(\"../codegen\");\nconst names_1 = require(\"../names\");\nconst code_1 = require(\"../../vocabularies/code\");\nconst errors_1 = require(\"../errors\");\nfunction macroKeywordCode(cxt, def) {\n    const { gen, keyword, schema, parentSchema, it } = cxt;\n    const macroSchema = def.macro.call(it.self, schema, parentSchema, it);\n    const schemaRef = useKeyword(gen, keyword, macroSchema);\n    if (it.opts.validateSchema !== false)\n        it.self.validateSchema(macroSchema, true);\n    const valid = gen.name(\"valid\");\n    cxt.subschema({\n        schema: macroSchema,\n        schemaPath: codegen_1.nil,\n        errSchemaPath: `${it.errSchemaPath}/${keyword}`,\n        topSchemaRef: schemaRef,\n        compositeRule: true,\n    }, valid);\n    cxt.pass(valid, () => cxt.error(true));\n}\nexports.macroKeywordCode = macroKeywordCode;\nfunction funcKeywordCode(cxt, def) {\n    var _a;\n    const { gen, keyword, schema, parentSchema, $data, it } = cxt;\n    checkAsyncKeyword(it, def);\n    const validate = !$data && def.compile ? def.compile.call(it.self, schema, parentSchema, it) : def.validate;\n    const validateRef = useKeyword(gen, keyword, validate);\n    const valid = gen.let(\"valid\");\n    cxt.block$data(valid, validateKeyword);\n    cxt.ok((_a = def.valid) !== null && _a !== void 0 ? _a : valid);\n    function validateKeyword() {\n        if (def.errors === false) {\n            assignValid();\n            if (def.modifying)\n                modifyData(cxt);\n            reportErrs(() => cxt.error());\n        }\n        else {\n            const ruleErrs = def.async ? validateAsync() : validateSync();\n            if (def.modifying)\n                modifyData(cxt);\n            reportErrs(() => addErrs(cxt, ruleErrs));\n        }\n    }\n    function validateAsync() {\n        const ruleErrs = gen.let(\"ruleErrs\", null);\n        gen.try(() => assignValid(codegen_1._ `await `), (e) => gen.assign(valid, false).if(codegen_1._ `${e} instanceof ${it.ValidationError}`, () => gen.assign(ruleErrs, codegen_1._ `${e}.errors`), () => gen.throw(e)));\n        return ruleErrs;\n    }\n    function validateSync() {\n        const validateErrs = codegen_1._ `${validateRef}.errors`;\n        gen.assign(validateErrs, null);\n        assignValid(codegen_1.nil);\n        return validateErrs;\n    }\n    function assignValid(_await = def.async ? codegen_1._ `await ` : codegen_1.nil) {\n        const passCxt = it.opts.passContext ? names_1.default.this : names_1.default.self;\n        const passSchema = !((\"compile\" in def && !$data) || def.schema === false);\n        gen.assign(valid, codegen_1._ `${_await}${code_1.callValidateCode(cxt, validateRef, passCxt, passSchema)}`, def.modifying);\n    }\n    function reportErrs(errors) {\n        var _a;\n        gen.if(codegen_1.not((_a = def.valid) !== null && _a !== void 0 ? _a : valid), errors);\n    }\n}\nexports.funcKeywordCode = funcKeywordCode;\nfunction modifyData(cxt) {\n    const { gen, data, it } = cxt;\n    gen.if(it.parentData, () => gen.assign(data, codegen_1._ `${it.parentData}[${it.parentDataProperty}]`));\n}\nfunction addErrs(cxt, errs) {\n    const { gen } = cxt;\n    gen.if(codegen_1._ `Array.isArray(${errs})`, () => {\n        gen\n            .assign(names_1.default.vErrors, codegen_1._ `${names_1.default.vErrors} === null ? ${errs} : ${names_1.default.vErrors}.concat(${errs})`)\n            .assign(names_1.default.errors, codegen_1._ `${names_1.default.vErrors}.length`);\n        errors_1.extendErrors(cxt);\n    }, () => cxt.error());\n}\nfunction checkAsyncKeyword({ schemaEnv }, def) {\n    if (def.async && !schemaEnv.$async)\n        throw new Error(\"async keyword in sync schema\");\n}\nfunction useKeyword(gen, keyword, result) {\n    if (result === undefined)\n        throw new Error(`keyword \"${keyword}\" failed to compile`);\n    return gen.scopeValue(\"keyword\", typeof result == \"function\" ? { ref: result } : { ref: result, code: codegen_1.stringify(result) });\n}\nfunction validSchemaType(schema, schemaType, allowUndefined = false) {\n    // TODO add tests\n    return (!schemaType.length ||\n        schemaType.some((st) => st === \"array\"\n            ? Array.isArray(schema)\n            : st === \"object\"\n                ? schema && typeof schema == \"object\" && !Array.isArray(schema)\n                : typeof schema == st || (allowUndefined && typeof schema == \"undefined\")));\n}\nexports.validSchemaType = validSchemaType;\nfunction validateKeywordUsage({ schema, opts, self, errSchemaPath }, def, keyword) {\n    /* istanbul ignore if */\n    if (Array.isArray(def.keyword) ? !def.keyword.includes(keyword) : def.keyword !== keyword) {\n        throw new Error(\"ajv implementation error\");\n    }\n    const deps = def.dependencies;\n    if (deps === null || deps === void 0 ? void 0 : deps.some((kwd) => !Object.prototype.hasOwnProperty.call(schema, kwd))) {\n        throw new Error(`parent schema must have dependencies of ${keyword}: ${deps.join(\",\")}`);\n    }\n    if (def.validateSchema) {\n        const valid = def.validateSchema(schema[keyword]);\n        if (!valid) {\n            const msg = `keyword \"${keyword}\" value is invalid at path \"${errSchemaPath}\": ` +\n                self.errorsText(def.validateSchema.errors);\n            if (opts.validateSchema === \"log\")\n                self.logger.error(msg);\n            else\n                throw new Error(msg);\n        }\n    }\n}\nexports.validateKeywordUsage = validateKeywordUsage;\n//# sourceMappingURL=keyword.js.map"]},"metadata":{},"sourceType":"script"}