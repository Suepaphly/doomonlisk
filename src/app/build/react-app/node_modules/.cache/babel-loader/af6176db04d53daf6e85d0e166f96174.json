{"ast":null,"code":"\"use strict\";\n\nvar _toConsumableArray = require(\"/home/lisk/doomonlisk/src/app/build/react-app/node_modules/@babel/runtime/helpers/toConsumableArray\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.bufferArrayUniqueItems = exports.bufferArrayOrderByLex = exports.bufferArraySubtract = exports.bufferArrayEqual = exports.bufferArrayContainsSome = exports.bufferArrayContains = exports.bufferArrayIncludes = void 0;\n\nvar buffer_set_1 = require(\"../data_structures/buffer_set\");\n\nvar bufferArrayIncludes = function bufferArrayIncludes(arr, val) {\n  return arr.find(function (a) {\n    return a.equals(val);\n  }) !== undefined;\n};\n\nexports.bufferArrayIncludes = bufferArrayIncludes;\n\nvar bufferArrayContains = function bufferArrayContains(arr1, arr2) {\n  return arr2.every(function (val) {\n    return exports.bufferArrayIncludes(arr1, val);\n  });\n};\n\nexports.bufferArrayContains = bufferArrayContains;\n\nvar bufferArrayContainsSome = function bufferArrayContainsSome(arr1, arr2) {\n  return arr2.some(function (val) {\n    return exports.bufferArrayIncludes(arr1, val);\n  });\n};\n\nexports.bufferArrayContainsSome = bufferArrayContainsSome;\n\nvar bufferArrayEqual = function bufferArrayEqual(arr1, arr2) {\n  return arr1.length === arr2.length && arr1.every(function (val, index) {\n    return val.equals(arr2[index]);\n  });\n};\n\nexports.bufferArrayEqual = bufferArrayEqual;\n\nvar bufferArraySubtract = function bufferArraySubtract(arr1, arr2) {\n  return arr1.filter(function (a) {\n    return !exports.bufferArrayIncludes(arr2, a);\n  });\n};\n\nexports.bufferArraySubtract = bufferArraySubtract;\n\nvar bufferArrayOrderByLex = function bufferArrayOrderByLex(arr1) {\n  var sortedArray = _toConsumableArray(arr1);\n\n  sortedArray.sort(function (a, b) {\n    return a.compare(b);\n  });\n  return exports.bufferArrayEqual(arr1, sortedArray);\n};\n\nexports.bufferArrayOrderByLex = bufferArrayOrderByLex;\n\nvar bufferArrayUniqueItems = function bufferArrayUniqueItems(arr1) {\n  return arr1.length === new buffer_set_1.BufferSet(_toConsumableArray(arr1)).size;\n};\n\nexports.bufferArrayUniqueItems = bufferArrayUniqueItems;","map":{"version":3,"sources":["../../src/objects/buffer_array.ts"],"names":[],"mappings":";;;;;;;;;AAcA,IAAA,YAAA,GAAA,OAAA,CAAA,+BAAA,CAAA;;AAEO,IAAM,mBAAmB,GAAG,SAAtB,mBAAsB,CAAC,GAAD,EAAgB,GAAhB;AAAA,SAClC,GAAG,CAAC,IAAJ,CAAS,UAAA,CAAC;AAAA,WAAI,CAAC,CAAC,MAAF,CAAS,GAAT,CAAJ;AAAA,GAAV,MAAiC,SADC;AAAA,CAA5B;;AAAM,OAAA,CAAA,mBAAA,GAAmB,mBAAnB;;AAGN,IAAM,mBAAmB,GAAG,SAAtB,mBAAsB,CAAC,IAAD,EAAiB,IAAjB;AAAA,SAClC,IAAI,CAAC,KAAL,CAAW,UAAA,GAAG;AAAA,WAAI,OAAA,CAAA,mBAAA,CAAoB,IAApB,EAA0B,GAA1B,CAAJ;AAAA,GAAd,CADkC;AAAA,CAA5B;;AAAM,OAAA,CAAA,mBAAA,GAAmB,mBAAnB;;AAGN,IAAM,uBAAuB,GAAG,SAA1B,uBAA0B,CAAC,IAAD,EAAiB,IAAjB;AAAA,SACtC,IAAI,CAAC,IAAL,CAAU,UAAA,GAAG;AAAA,WAAI,OAAA,CAAA,mBAAA,CAAoB,IAApB,EAA0B,GAA1B,CAAJ;AAAA,GAAb,CADsC;AAAA,CAAhC;;AAAM,OAAA,CAAA,uBAAA,GAAuB,uBAAvB;;AAGN,IAAM,gBAAgB,GAAG,SAAnB,gBAAmB,CAAC,IAAD,EAAiB,IAAjB;AAAA,SAC/B,IAAI,CAAC,MAAL,KAAgB,IAAI,CAAC,MAArB,IAA+B,IAAI,CAAC,KAAL,CAAW,UAAC,GAAD,EAAM,KAAN;AAAA,WAAgB,GAAG,CAAC,MAAJ,CAAW,IAAI,CAAC,KAAD,CAAf,CAAhB;AAAA,GAAX,CADA;AAAA,CAAzB;;AAAM,OAAA,CAAA,gBAAA,GAAgB,gBAAhB;;AAGN,IAAM,mBAAmB,GAAG,SAAtB,mBAAsB,CAAC,IAAD,EAAiB,IAAjB;AAAA,SAClC,IAAI,CAAC,MAAL,CAAY,UAAA,CAAC;AAAA,WAAI,CAAC,OAAA,CAAA,mBAAA,CAAoB,IAApB,EAA0B,CAA1B,CAAL;AAAA,GAAb,CADkC;AAAA,CAA5B;;AAAM,OAAA,CAAA,mBAAA,GAAmB,mBAAnB;;AAGN,IAAM,qBAAqB,GAAG,SAAxB,qBAAwB,CAAC,IAAD,EAA4B;AAChE,MAAM,WAAW,sBAAO,IAAP,CAAjB;;AACA,EAAA,WAAW,CAAC,IAAZ,CAAiB,UAAC,CAAD,EAAI,CAAJ;AAAA,WAAU,CAAC,CAAC,OAAF,CAAU,CAAV,CAAV;AAAA,GAAjB;AAEA,SAAO,OAAA,CAAA,gBAAA,CAAiB,IAAjB,EAAuB,WAAvB,CAAP;AACA,CALM;;AAAM,OAAA,CAAA,qBAAA,GAAqB,qBAArB;;AAON,IAAM,sBAAsB,GAAG,SAAzB,sBAAyB,CAAC,IAAD;AAAA,SACrC,IAAI,CAAC,MAAL,KAAgB,IAAI,YAAA,CAAA,SAAJ,oBAAkB,IAAlB,GAAyB,IADJ;AAAA,CAA/B;;AAAM,OAAA,CAAA,sBAAA,GAAsB,sBAAtB","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.bufferArrayUniqueItems = exports.bufferArrayOrderByLex = exports.bufferArraySubtract = exports.bufferArrayEqual = exports.bufferArrayContainsSome = exports.bufferArrayContains = exports.bufferArrayIncludes = void 0;\nconst buffer_set_1 = require(\"../data_structures/buffer_set\");\nconst bufferArrayIncludes = (arr, val) => arr.find(a => a.equals(val)) !== undefined;\nexports.bufferArrayIncludes = bufferArrayIncludes;\nconst bufferArrayContains = (arr1, arr2) => arr2.every(val => exports.bufferArrayIncludes(arr1, val));\nexports.bufferArrayContains = bufferArrayContains;\nconst bufferArrayContainsSome = (arr1, arr2) => arr2.some(val => exports.bufferArrayIncludes(arr1, val));\nexports.bufferArrayContainsSome = bufferArrayContainsSome;\nconst bufferArrayEqual = (arr1, arr2) => arr1.length === arr2.length && arr1.every((val, index) => val.equals(arr2[index]));\nexports.bufferArrayEqual = bufferArrayEqual;\nconst bufferArraySubtract = (arr1, arr2) => arr1.filter(a => !exports.bufferArrayIncludes(arr2, a));\nexports.bufferArraySubtract = bufferArraySubtract;\nconst bufferArrayOrderByLex = (arr1) => {\n    const sortedArray = [...arr1];\n    sortedArray.sort((a, b) => a.compare(b));\n    return exports.bufferArrayEqual(arr1, sortedArray);\n};\nexports.bufferArrayOrderByLex = bufferArrayOrderByLex;\nconst bufferArrayUniqueItems = (arr1) => arr1.length === new buffer_set_1.BufferSet([...arr1]).size;\nexports.bufferArrayUniqueItems = bufferArrayUniqueItems;\n//# sourceMappingURL=buffer_array.js.map"]},"metadata":{},"sourceType":"script"}