{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.applicationConfigSchema = void 0;\nexports.applicationConfigSchema = {\n  $id: '#/config',\n  type: 'object',\n  required: ['version', 'networkVersion', 'rpc', 'genesisConfig', 'forging', 'network', 'plugins'],\n  properties: {\n    label: {\n      type: 'string',\n      pattern: '^[a-zA-Z][0-9a-zA-Z_-]*$',\n      minLength: 1,\n      maxLength: 30,\n      description: 'Restricted length due to unix domain socket path length limitations.'\n    },\n    version: {\n      type: 'string',\n      format: 'version'\n    },\n    networkVersion: {\n      type: 'string',\n      format: 'networkVersion'\n    },\n    rootPath: {\n      type: 'string',\n      format: 'path',\n      minLength: 1,\n      maxLength: 50,\n      examples: ['~/.lisk'],\n      description: 'The root path for storing temporary pid and socket file and data. Restricted length due to unix domain socket path length limitations.'\n    },\n    logger: {\n      type: 'object',\n      required: ['fileLogLevel', 'logFileName', 'consoleLogLevel'],\n      properties: {\n        fileLogLevel: {\n          type: 'string',\n          enum: ['trace', 'debug', 'info', 'warn', 'error', 'fatal', 'none']\n        },\n        logFileName: {\n          type: 'string'\n        },\n        consoleLogLevel: {\n          type: 'string',\n          enum: ['trace', 'debug', 'info', 'warn', 'error', 'fatal', 'none']\n        }\n      }\n    },\n    genesisConfig: {\n      $id: '#/config/genesisConfig',\n      type: 'object',\n      required: ['blockTime', 'communityIdentifier', 'maxPayloadLength', 'rewards'],\n      properties: {\n        blockTime: {\n          type: 'number',\n          minimum: 2,\n          description: 'Slot time interval in seconds'\n        },\n        communityIdentifier: {\n          type: 'string',\n          description: 'The unique name of the relevant community as a string encoded in UTF-8 format'\n        },\n        bftThreshold: {\n          type: 'integer',\n          minimum: 1,\n          description: 'Number of validators required to set block finality'\n        },\n        minFeePerByte: {\n          type: 'integer',\n          minimum: 0,\n          description: 'Minimum fee per bytes required for a transaction to be valid'\n        },\n        baseFees: {\n          type: 'array',\n          description: 'Base fee for a transaction to be valid',\n          items: {\n            type: 'object',\n            properties: {\n              moduleID: {\n                type: 'number',\n                minimum: 2\n              },\n              assetID: {\n                type: 'integer',\n                minimum: 0\n              },\n              baseFee: {\n                type: 'string',\n                format: 'uint64'\n              }\n            }\n          }\n        },\n        maxPayloadLength: {\n          type: 'integer',\n          minimum: 10 * 1024,\n          maximum: 30 * 1024,\n          description: 'Maximum number of transactions allowed per block'\n        },\n        rewards: {\n          $id: '#/config/rewards',\n          type: 'object',\n          required: ['milestones', 'offset', 'distance'],\n          description: 'Object representing LSK rewards milestone',\n          properties: {\n            milestones: {\n              type: 'array',\n              items: {\n                type: 'string',\n                format: 'uint64'\n              },\n              description: 'Initial 5, and decreasing until 1'\n            },\n            offset: {\n              type: 'integer',\n              minimum: 1,\n              description: 'Start rewards at block (n)'\n            },\n            distance: {\n              type: 'integer',\n              minimum: 1,\n              description: 'Distance between each milestone'\n            }\n          },\n          additionalProperties: false\n        }\n      },\n      additionalProperties: true\n    },\n    forging: {\n      type: 'object',\n      required: ['force', 'waitThreshold', 'delegates'],\n      properties: {\n        force: {\n          type: 'boolean'\n        },\n        waitThreshold: {\n          description: 'Number of seconds to wait for previous block before forging',\n          type: 'integer'\n        },\n        defaultPassword: {\n          type: 'string'\n        },\n        delegates: {\n          type: 'array',\n          items: {\n            required: ['encryptedPassphrase', 'address', 'hashOnion'],\n            properties: {\n              encryptedPassphrase: {\n                type: 'string',\n                format: 'encryptedPassphrase'\n              },\n              address: {\n                type: 'string',\n                format: 'hex'\n              },\n              hashOnion: {\n                type: 'object',\n                required: ['count', 'distance', 'hashes'],\n                properties: {\n                  count: {\n                    minimum: 1,\n                    type: 'integer'\n                  },\n                  distance: {\n                    minimum: 1,\n                    type: 'integer'\n                  },\n                  hashes: {\n                    type: 'array',\n                    minItems: 2,\n                    items: {\n                      type: 'string',\n                      format: 'hex'\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    network: {\n      type: 'object',\n      properties: {\n        port: {\n          type: 'integer',\n          minimum: 1,\n          maximum: 65535\n        },\n        hostIp: {\n          type: 'string',\n          format: 'ip'\n        },\n        seedPeers: {\n          type: 'array',\n          items: {\n            type: 'object',\n            properties: {\n              ip: {\n                type: 'string',\n                format: 'ipOrFQDN'\n              },\n              port: {\n                type: 'integer',\n                minimum: 1,\n                maximum: 65535\n              }\n            }\n          }\n        },\n        blacklistedIPs: {\n          type: 'array',\n          items: {\n            type: 'string',\n            format: 'ip'\n          }\n        },\n        fixedPeers: {\n          type: 'array',\n          items: {\n            type: 'object',\n            properties: {\n              ip: {\n                type: 'string',\n                format: 'ip'\n              },\n              port: {\n                type: 'integer',\n                minimum: 1,\n                maximum: 65535\n              }\n            }\n          },\n          maximum: 4\n        },\n        whitelistedPeers: {\n          type: 'array',\n          items: {\n            type: 'object',\n            properties: {\n              ip: {\n                type: 'string',\n                format: 'ip'\n              },\n              port: {\n                type: 'integer',\n                minimum: 1,\n                maximum: 65535\n              }\n            }\n          }\n        },\n        peerBanTime: {\n          type: 'integer'\n        },\n        connectTimeout: {\n          type: 'integer'\n        },\n        ackTimeout: {\n          type: 'integer'\n        },\n        maxOutboundConnections: {\n          type: 'integer'\n        },\n        maxInboundConnections: {\n          type: 'integer'\n        },\n        sendPeerLimit: {\n          type: 'integer',\n          minimum: 1,\n          maximum: 100\n        },\n        maxPeerDiscoveryResponseLength: {\n          type: 'integer',\n          maximum: 1000\n        },\n        maxPeerInfoSize: {\n          type: 'integer',\n          maximum: 20480\n        },\n        wsMaxPayload: {\n          type: 'integer',\n          maximum: 3048576\n        },\n        advertiseAddress: {\n          type: 'boolean'\n        }\n      },\n      required: ['seedPeers']\n    },\n    plugins: {\n      type: 'object'\n    },\n    transactionPool: {\n      type: 'object',\n      properties: {\n        maxTransactions: {\n          type: 'integer',\n          minimum: 1\n        },\n        maxTransactionsPerAccount: {\n          type: 'integer',\n          minimum: 1\n        },\n        transactionExpiryTime: {\n          type: 'integer',\n          minimum: 60 * 1000\n        },\n        minEntranceFeePriority: {\n          type: 'string',\n          format: 'uint64'\n        },\n        minReplacementFeeDifference: {\n          type: 'string',\n          format: 'uint64'\n        }\n      }\n    },\n    rpc: {\n      type: 'object',\n      properties: {\n        enable: {\n          type: 'boolean'\n        },\n        mode: {\n          type: 'string',\n          enum: ['ipc', 'ws']\n        },\n        port: {\n          type: 'number',\n          minimum: 1024,\n          maximum: 65535\n        },\n        host: {\n          type: 'string',\n          format: 'ip'\n        }\n      }\n    }\n  },\n  additionalProperties: false,\n  default: {\n    label: 'beta-sdk-app',\n    version: '0.0.0',\n    networkVersion: '1.1',\n    rootPath: '~/.lisk',\n    logger: {\n      fileLogLevel: 'info',\n      consoleLogLevel: 'none',\n      logFileName: 'lisk.log'\n    },\n    rpc: {\n      enable: false,\n      mode: 'ipc',\n      port: 8080,\n      host: '127.0.0.1'\n    },\n    genesisConfig: {\n      blockTime: 10,\n      communityIdentifier: 'sdk',\n      maxPayloadLength: 15 * 1024,\n      bftThreshold: 68,\n      minFeePerByte: 1000,\n      baseFees: [],\n      rewards: {\n        milestones: ['500000000', '400000000', '300000000', '200000000', '100000000'],\n        offset: 2160,\n        distance: 3000000\n      }\n    },\n    forging: {\n      force: false,\n      waitThreshold: 2,\n      delegates: []\n    },\n    network: {\n      seedPeers: [],\n      port: 5000\n    },\n    transactionPool: {\n      maxTransactions: 4096,\n      maxTransactionsPerAccount: 64,\n      transactionExpiryTime: 3 * 60 * 60 * 1000,\n      minEntranceFeePriority: '0',\n      minReplacementFeeDifference: '10'\n    },\n    plugins: {}\n  }\n};","map":{"version":3,"sources":["../../src/schema/application_config_schema.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.applicationConfigSchema = void 0;\nexports.applicationConfigSchema = {\n    $id: '#/config',\n    type: 'object',\n    required: ['version', 'networkVersion', 'rpc', 'genesisConfig', 'forging', 'network', 'plugins'],\n    properties: {\n        label: {\n            type: 'string',\n            pattern: '^[a-zA-Z][0-9a-zA-Z_-]*$',\n            minLength: 1,\n            maxLength: 30,\n            description: 'Restricted length due to unix domain socket path length limitations.',\n        },\n        version: {\n            type: 'string',\n            format: 'version',\n        },\n        networkVersion: {\n            type: 'string',\n            format: 'networkVersion',\n        },\n        rootPath: {\n            type: 'string',\n            format: 'path',\n            minLength: 1,\n            maxLength: 50,\n            examples: ['~/.lisk'],\n            description: 'The root path for storing temporary pid and socket file and data. Restricted length due to unix domain socket path length limitations.',\n        },\n        logger: {\n            type: 'object',\n            required: ['fileLogLevel', 'logFileName', 'consoleLogLevel'],\n            properties: {\n                fileLogLevel: {\n                    type: 'string',\n                    enum: ['trace', 'debug', 'info', 'warn', 'error', 'fatal', 'none'],\n                },\n                logFileName: {\n                    type: 'string',\n                },\n                consoleLogLevel: {\n                    type: 'string',\n                    enum: ['trace', 'debug', 'info', 'warn', 'error', 'fatal', 'none'],\n                },\n            },\n        },\n        genesisConfig: {\n            $id: '#/config/genesisConfig',\n            type: 'object',\n            required: ['blockTime', 'communityIdentifier', 'maxPayloadLength', 'rewards'],\n            properties: {\n                blockTime: {\n                    type: 'number',\n                    minimum: 2,\n                    description: 'Slot time interval in seconds',\n                },\n                communityIdentifier: {\n                    type: 'string',\n                    description: 'The unique name of the relevant community as a string encoded in UTF-8 format',\n                },\n                bftThreshold: {\n                    type: 'integer',\n                    minimum: 1,\n                    description: 'Number of validators required to set block finality',\n                },\n                minFeePerByte: {\n                    type: 'integer',\n                    minimum: 0,\n                    description: 'Minimum fee per bytes required for a transaction to be valid',\n                },\n                baseFees: {\n                    type: 'array',\n                    description: 'Base fee for a transaction to be valid',\n                    items: {\n                        type: 'object',\n                        properties: {\n                            moduleID: {\n                                type: 'number',\n                                minimum: 2,\n                            },\n                            assetID: {\n                                type: 'integer',\n                                minimum: 0,\n                            },\n                            baseFee: {\n                                type: 'string',\n                                format: 'uint64',\n                            },\n                        },\n                    },\n                },\n                maxPayloadLength: {\n                    type: 'integer',\n                    minimum: 10 * 1024,\n                    maximum: 30 * 1024,\n                    description: 'Maximum number of transactions allowed per block',\n                },\n                rewards: {\n                    $id: '#/config/rewards',\n                    type: 'object',\n                    required: ['milestones', 'offset', 'distance'],\n                    description: 'Object representing LSK rewards milestone',\n                    properties: {\n                        milestones: {\n                            type: 'array',\n                            items: {\n                                type: 'string',\n                                format: 'uint64',\n                            },\n                            description: 'Initial 5, and decreasing until 1',\n                        },\n                        offset: {\n                            type: 'integer',\n                            minimum: 1,\n                            description: 'Start rewards at block (n)',\n                        },\n                        distance: {\n                            type: 'integer',\n                            minimum: 1,\n                            description: 'Distance between each milestone',\n                        },\n                    },\n                    additionalProperties: false,\n                },\n            },\n            additionalProperties: true,\n        },\n        forging: {\n            type: 'object',\n            required: ['force', 'waitThreshold', 'delegates'],\n            properties: {\n                force: {\n                    type: 'boolean',\n                },\n                waitThreshold: {\n                    description: 'Number of seconds to wait for previous block before forging',\n                    type: 'integer',\n                },\n                defaultPassword: {\n                    type: 'string',\n                },\n                delegates: {\n                    type: 'array',\n                    items: {\n                        required: ['encryptedPassphrase', 'address', 'hashOnion'],\n                        properties: {\n                            encryptedPassphrase: {\n                                type: 'string',\n                                format: 'encryptedPassphrase',\n                            },\n                            address: {\n                                type: 'string',\n                                format: 'hex',\n                            },\n                            hashOnion: {\n                                type: 'object',\n                                required: ['count', 'distance', 'hashes'],\n                                properties: {\n                                    count: {\n                                        minimum: 1,\n                                        type: 'integer',\n                                    },\n                                    distance: {\n                                        minimum: 1,\n                                        type: 'integer',\n                                    },\n                                    hashes: {\n                                        type: 'array',\n                                        minItems: 2,\n                                        items: {\n                                            type: 'string',\n                                            format: 'hex',\n                                        },\n                                    },\n                                },\n                            },\n                        },\n                    },\n                },\n            },\n        },\n        network: {\n            type: 'object',\n            properties: {\n                port: {\n                    type: 'integer',\n                    minimum: 1,\n                    maximum: 65535,\n                },\n                hostIp: {\n                    type: 'string',\n                    format: 'ip',\n                },\n                seedPeers: {\n                    type: 'array',\n                    items: {\n                        type: 'object',\n                        properties: {\n                            ip: {\n                                type: 'string',\n                                format: 'ipOrFQDN',\n                            },\n                            port: {\n                                type: 'integer',\n                                minimum: 1,\n                                maximum: 65535,\n                            },\n                        },\n                    },\n                },\n                blacklistedIPs: {\n                    type: 'array',\n                    items: {\n                        type: 'string',\n                        format: 'ip',\n                    },\n                },\n                fixedPeers: {\n                    type: 'array',\n                    items: {\n                        type: 'object',\n                        properties: {\n                            ip: {\n                                type: 'string',\n                                format: 'ip',\n                            },\n                            port: {\n                                type: 'integer',\n                                minimum: 1,\n                                maximum: 65535,\n                            },\n                        },\n                    },\n                    maximum: 4,\n                },\n                whitelistedPeers: {\n                    type: 'array',\n                    items: {\n                        type: 'object',\n                        properties: {\n                            ip: {\n                                type: 'string',\n                                format: 'ip',\n                            },\n                            port: {\n                                type: 'integer',\n                                minimum: 1,\n                                maximum: 65535,\n                            },\n                        },\n                    },\n                },\n                peerBanTime: {\n                    type: 'integer',\n                },\n                connectTimeout: {\n                    type: 'integer',\n                },\n                ackTimeout: {\n                    type: 'integer',\n                },\n                maxOutboundConnections: {\n                    type: 'integer',\n                },\n                maxInboundConnections: {\n                    type: 'integer',\n                },\n                sendPeerLimit: {\n                    type: 'integer',\n                    minimum: 1,\n                    maximum: 100,\n                },\n                maxPeerDiscoveryResponseLength: {\n                    type: 'integer',\n                    maximum: 1000,\n                },\n                maxPeerInfoSize: {\n                    type: 'integer',\n                    maximum: 20480,\n                },\n                wsMaxPayload: {\n                    type: 'integer',\n                    maximum: 3048576,\n                },\n                advertiseAddress: {\n                    type: 'boolean',\n                },\n            },\n            required: ['seedPeers'],\n        },\n        plugins: {\n            type: 'object',\n        },\n        transactionPool: {\n            type: 'object',\n            properties: {\n                maxTransactions: {\n                    type: 'integer',\n                    minimum: 1,\n                },\n                maxTransactionsPerAccount: {\n                    type: 'integer',\n                    minimum: 1,\n                },\n                transactionExpiryTime: {\n                    type: 'integer',\n                    minimum: 60 * 1000,\n                },\n                minEntranceFeePriority: {\n                    type: 'string',\n                    format: 'uint64',\n                },\n                minReplacementFeeDifference: {\n                    type: 'string',\n                    format: 'uint64',\n                },\n            },\n        },\n        rpc: {\n            type: 'object',\n            properties: {\n                enable: {\n                    type: 'boolean',\n                },\n                mode: {\n                    type: 'string',\n                    enum: ['ipc', 'ws'],\n                },\n                port: {\n                    type: 'number',\n                    minimum: 1024,\n                    maximum: 65535,\n                },\n                host: {\n                    type: 'string',\n                    format: 'ip',\n                },\n            },\n        },\n    },\n    additionalProperties: false,\n    default: {\n        label: 'beta-sdk-app',\n        version: '0.0.0',\n        networkVersion: '1.1',\n        rootPath: '~/.lisk',\n        logger: {\n            fileLogLevel: 'info',\n            consoleLogLevel: 'none',\n            logFileName: 'lisk.log',\n        },\n        rpc: {\n            enable: false,\n            mode: 'ipc',\n            port: 8080,\n            host: '127.0.0.1',\n        },\n        genesisConfig: {\n            blockTime: 10,\n            communityIdentifier: 'sdk',\n            maxPayloadLength: 15 * 1024,\n            bftThreshold: 68,\n            minFeePerByte: 1000,\n            baseFees: [],\n            rewards: {\n                milestones: [\n                    '500000000',\n                    '400000000',\n                    '300000000',\n                    '200000000',\n                    '100000000',\n                ],\n                offset: 2160,\n                distance: 3000000,\n            },\n        },\n        forging: {\n            force: false,\n            waitThreshold: 2,\n            delegates: [],\n        },\n        network: {\n            seedPeers: [],\n            port: 5000,\n        },\n        transactionPool: {\n            maxTransactions: 4096,\n            maxTransactionsPerAccount: 64,\n            transactionExpiryTime: 3 * 60 * 60 * 1000,\n            minEntranceFeePriority: '0',\n            minReplacementFeeDifference: '10',\n        },\n        plugins: {},\n    },\n};\n//# sourceMappingURL=application_config_schema.js.map"]},"metadata":{},"sourceType":"script"}