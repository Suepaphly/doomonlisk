{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"/home/lisk/doomonlisk/src/app/build/react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/home/lisk/doomonlisk/src/app/build/react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _inherits = require(\"/home/lisk/doomonlisk/src/app/build/react-app/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _createSuper = require(\"/home/lisk/doomonlisk/src/app/build/react-app/node_modules/@babel/runtime/helpers/createSuper\");\n\nvar _wrapNativeSuper = require(\"/home/lisk/doomonlisk/src/app/build/react-app/node_modules/@babel/runtime/helpers/wrapNativeSuper\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.TransactionPoolError = void 0;\n\nvar TransactionPoolError = /*#__PURE__*/function (_Error) {\n  _inherits(TransactionPoolError, _Error);\n\n  var _super = _createSuper(TransactionPoolError);\n\n  function TransactionPoolError() {\n    var _this;\n\n    var message = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n    var id = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : Buffer.alloc(0);\n    var dataPath = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';\n    var actual = arguments.length > 3 ? arguments[3] : undefined;\n    var expected = arguments.length > 4 ? arguments[4] : undefined;\n\n    _classCallCheck(this, TransactionPoolError);\n\n    _this = _super.call(this);\n    _this.message = message;\n    _this.id = id;\n    _this.name = 'TransactionPoolError';\n    _this.dataPath = dataPath;\n    _this.actual = actual;\n    _this.expected = expected;\n    return _this;\n  }\n\n  _createClass(TransactionPoolError, [{\n    key: \"toString\",\n    value: function toString() {\n      var defaultMessage = \"TransactionPool: \".concat(this.id.toString('hex'), \" failed to process at \").concat(this.dataPath, \": \").concat(this.message);\n      var withActual = this.actual ? \"\".concat(defaultMessage, \", actual: \").concat(this.actual) : defaultMessage;\n      var withExpected = this.expected ? \"\".concat(withActual, \", expected: \").concat(this.expected) : withActual;\n      return withExpected;\n    }\n  }]);\n\n  return TransactionPoolError;\n}( /*#__PURE__*/_wrapNativeSuper(Error));\n\nexports.TransactionPoolError = TransactionPoolError;","map":{"version":3,"sources":["../src/errors.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;IAca,oB;;;;;AAMZ,kCAK2B;AAAA;;AAAA,QAJ1B,OAI0B,uEAJhB,EAIgB;AAAA,QAH1B,EAG0B,uEAHrB,MAAM,CAAC,KAAP,CAAa,CAAb,CAGqB;AAAA,QAF1B,QAE0B,uEAFf,EAEe;AAAA,QAD1B,MAC0B;AAAA,QAA1B,QAA0B;;AAAA;;AAE1B;AACA,UAAK,OAAL,GAAe,OAAf;AACA,UAAK,EAAL,GAAU,EAAV;AACA,UAAK,IAAL,GAAY,sBAAZ;AACA,UAAK,QAAL,GAAgB,QAAhB;AACA,UAAK,MAAL,GAAc,MAAd;AACA,UAAK,QAAL,GAAgB,QAAhB;AAR0B;AAS1B;;;;WAEM,oBAAQ;AACd,UAAM,cAAc,8BAAuB,KAAK,EAAL,CAAQ,QAAR,CAAiB,KAAjB,CAAvB,mCACnB,KAAK,QADc,eAEf,KAAK,OAFU,CAApB;AAGA,UAAM,UAAU,GAAG,KAAK,MAAL,aAEb,cAFa,uBAEc,KAAK,MAFnB,IAGhB,cAHH;AAIA,UAAM,YAAY,GAAG,KAAK,QAAL,aAEf,UAFe,yBAEU,KAAK,QAFf,IAGlB,UAHH;AAKA,aAAO,YAAP;AACA;;;;iCApCwC,K;;AAA1C,OAAA,CAAA,oBAAA,GAAA,oBAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TransactionPoolError = void 0;\nclass TransactionPoolError extends Error {\n    constructor(message = '', id = Buffer.alloc(0), dataPath = '', actual, expected) {\n        super();\n        this.message = message;\n        this.id = id;\n        this.name = 'TransactionPoolError';\n        this.dataPath = dataPath;\n        this.actual = actual;\n        this.expected = expected;\n    }\n    toString() {\n        const defaultMessage = `TransactionPool: ${this.id.toString('hex')} failed to process at ${this.dataPath}: ${this.message}`;\n        const withActual = this.actual\n            ?\n                `${defaultMessage}, actual: ${this.actual}`\n            : defaultMessage;\n        const withExpected = this.expected\n            ?\n                `${withActual}, expected: ${this.expected}`\n            : withActual;\n        return withExpected;\n    }\n}\nexports.TransactionPoolError = TransactionPoolError;\n//# sourceMappingURL=errors.js.map"]},"metadata":{},"sourceType":"script"}