{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"/home/lisk/doomonlisk/src/app/build/react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _asyncToGenerator = require(\"/home/lisk/doomonlisk/src/app/build/react-app/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nvar _classCallCheck = require(\"/home/lisk/doomonlisk/src/app/build/react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/home/lisk/doomonlisk/src/app/build/react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.IPCSocket = void 0;\n\nvar axon = require(\"pm2-axon\");\n\nvar path_1 = require(\"path\");\n\nvar pm2_axon_rpc_1 = require(\"pm2-axon-rpc\");\n\nvar IPCSocket = /*#__PURE__*/function () {\n  function IPCSocket(options) {\n    _classCallCheck(this, IPCSocket);\n\n    this._eventPubSocketPath = \"unix://\".concat(path_1.join(options.socketsDir, 'pub_socket.sock'));\n    this._eventSubSocketPath = \"unix://\".concat(path_1.join(options.socketsDir, 'sub_socket.sock'));\n    this._actionRpcSeverSocketPath = \"unix://\".concat(path_1.join(options.socketsDir, \"\".concat(options.name, \"_rpc_socket.sock\")));\n    this.rpcServer = new pm2_axon_rpc_1.Server(axon.socket('rep'));\n  }\n\n  _createClass(IPCSocket, [{\n    key: \"rpcServerSocketPath\",\n    get: function get() {\n      return this._actionRpcSeverSocketPath;\n    }\n  }, {\n    key: \"stop\",\n    value: function stop() {\n      this.subSocket.removeAllListeners();\n      this.pubSocket.close();\n      this.subSocket.close();\n      this.rpcServer.sock.close();\n    }\n  }, {\n    key: \"start\",\n    value: function () {\n      var _start = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var _this = this;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return new Promise(function (resolve, reject) {\n                  _this.rpcServer.sock.on('bind', resolve);\n\n                  _this.rpcServer.sock.on('error', reject);\n\n                  _this.rpcServer.sock.bind(_this._actionRpcSeverSocketPath);\n                }).finally(function () {\n                  _this.rpcServer.sock.removeAllListeners('bind');\n\n                  _this.rpcServer.sock.removeAllListeners('error');\n                });\n\n              case 2:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function start() {\n        return _start.apply(this, arguments);\n      }\n\n      return start;\n    }()\n  }]);\n\n  return IPCSocket;\n}();\n\nexports.IPCSocket = IPCSocket;","map":{"version":3,"sources":["../../../src/controller/ipc/ipc_socket.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;AAmBA,IAAA,IAAA,GAAA,OAAA,CAAA,UAAA,CAAA;;AAEA,IAAA,MAAA,GAAA,OAAA,CAAA,MAAA,CAAA;;AACA,IAAA,cAAA,GAAA,OAAA,CAAA,cAAA,CAAA;;IAEsB,S;AASrB,qBAAsB,OAAtB,EAAmE;AAAA;;AAClE,SAAK,mBAAL,oBAAqC,MAAA,CAAA,IAAA,CAAK,OAAO,CAAC,UAAb,EAAyB,iBAAzB,CAArC;AACA,SAAK,mBAAL,oBAAqC,MAAA,CAAA,IAAA,CAAK,OAAO,CAAC,UAAb,EAAyB,iBAAzB,CAArC;AACA,SAAK,yBAAL,oBAA2C,MAAA,CAAA,IAAA,CAC1C,OAAO,CAAC,UADkC,YAEvC,OAAO,CAAC,IAF+B,sBAA3C;AAKA,SAAK,SAAL,GAAiB,IAAI,cAAA,CAAA,MAAJ,CAAc,IAAI,CAAC,MAAL,CAAY,KAAZ,CAAd,CAAjB;AACA;;;;SAED,eAA8B;AAC7B,aAAO,KAAK,yBAAZ;AACA;;;WAEM,gBAAI;AACV,WAAK,SAAL,CAAe,kBAAf;AACA,WAAK,SAAL,CAAe,KAAf;AACA,WAAK,SAAL,CAAe,KAAf;AACA,WAAK,SAAL,CAAe,IAAf,CAAoB,KAApB;AACA;;;;4EAEM;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACA,IAAI,OAAJ,CAAY,UAAC,OAAD,EAAU,MAAV,EAAoB;AACrC,kBAAA,KAAI,CAAC,SAAL,CAAe,IAAf,CAAoB,EAApB,CAAuB,MAAvB,EAA+B,OAA/B;;AACA,kBAAA,KAAI,CAAC,SAAL,CAAe,IAAf,CAAoB,EAApB,CAAuB,OAAvB,EAAgC,MAAhC;;AAEA,kBAAA,KAAI,CAAC,SAAL,CAAe,IAAf,CAAoB,IAApB,CAAyB,KAAI,CAAC,yBAA9B;AACA,iBALK,EAKH,OALG,CAKK,YAAK;AACf,kBAAA,KAAI,CAAC,SAAL,CAAe,IAAf,CAAoB,kBAApB,CAAuC,MAAvC;;AACA,kBAAA,KAAI,CAAC,SAAL,CAAe,IAAf,CAAoB,kBAApB,CAAuC,OAAvC;AACA,iBARK,CADA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;;;;;;;AA/BR,OAAA,CAAA,SAAA,GAAA,SAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.IPCSocket = void 0;\nconst axon = require(\"pm2-axon\");\nconst path_1 = require(\"path\");\nconst pm2_axon_rpc_1 = require(\"pm2-axon-rpc\");\nclass IPCSocket {\n    constructor(options) {\n        this._eventPubSocketPath = `unix://${path_1.join(options.socketsDir, 'pub_socket.sock')}`;\n        this._eventSubSocketPath = `unix://${path_1.join(options.socketsDir, 'sub_socket.sock')}`;\n        this._actionRpcSeverSocketPath = `unix://${path_1.join(options.socketsDir, `${options.name}_rpc_socket.sock`)}`;\n        this.rpcServer = new pm2_axon_rpc_1.Server(axon.socket('rep'));\n    }\n    get rpcServerSocketPath() {\n        return this._actionRpcSeverSocketPath;\n    }\n    stop() {\n        this.subSocket.removeAllListeners();\n        this.pubSocket.close();\n        this.subSocket.close();\n        this.rpcServer.sock.close();\n    }\n    async start() {\n        await new Promise((resolve, reject) => {\n            this.rpcServer.sock.on('bind', resolve);\n            this.rpcServer.sock.on('error', reject);\n            this.rpcServer.sock.bind(this._actionRpcSeverSocketPath);\n        }).finally(() => {\n            this.rpcServer.sock.removeAllListeners('bind');\n            this.rpcServer.sock.removeAllListeners('error');\n        });\n    }\n}\nexports.IPCSocket = IPCSocket;\n//# sourceMappingURL=ipc_socket.js.map"]},"metadata":{},"sourceType":"script"}