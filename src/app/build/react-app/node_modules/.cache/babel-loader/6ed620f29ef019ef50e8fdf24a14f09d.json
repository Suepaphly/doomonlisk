{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"/home/lisk/doomonlisk/src/app/build/react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _inherits = require(\"/home/lisk/doomonlisk/src/app/build/react-app/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _createSuper = require(\"/home/lisk/doomonlisk/src/app/build/react-app/node_modules/@babel/runtime/helpers/createSuper\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.InvalidNonceError = void 0;\n\nvar errors_1 = require(\"../../errors\");\n\nvar InvalidNonceError = /*#__PURE__*/function (_errors_1$FrameworkEr) {\n  _inherits(InvalidNonceError, _errors_1$FrameworkEr);\n\n  var _super = _createSuper(InvalidNonceError);\n\n  function InvalidNonceError(message, actual, expected) {\n    var _this;\n\n    _classCallCheck(this, InvalidNonceError);\n\n    _this = _super.call(this, message);\n    _this.code = 'ERR_INVALID_NONCE';\n    _this.actual = actual.toString();\n    _this.expected = expected.toString();\n    return _this;\n  }\n\n  return InvalidNonceError;\n}(errors_1.FrameworkError);\n\nexports.InvalidNonceError = InvalidNonceError;","map":{"version":3,"sources":["../../../src/modules/sequence/errors.ts"],"names":[],"mappings":";;;;;;;;;;;;;AAcA,IAAA,QAAA,GAAA,OAAA,CAAA,cAAA,CAAA;;IAEa,iB;;;;;AAIZ,6BAAmB,OAAnB,EAAoC,MAApC,EAAoD,QAApD,EAAoE;AAAA;;AAAA;;AACnE,8BAAM,OAAN;AAJM,UAAA,IAAA,GAAO,mBAAP;AAKN,UAAK,MAAL,GAAc,MAAM,CAAC,QAAP,EAAd;AACA,UAAK,QAAL,GAAgB,QAAQ,CAAC,QAAT,EAAhB;AAHmE;AAInE;;;EARqC,QAAA,CAAA,c;;AAAvC,OAAA,CAAA,iBAAA,GAAA,iBAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.InvalidNonceError = void 0;\nconst errors_1 = require(\"../../errors\");\nclass InvalidNonceError extends errors_1.FrameworkError {\n    constructor(message, actual, expected) {\n        super(message);\n        this.code = 'ERR_INVALID_NONCE';\n        this.actual = actual.toString();\n        this.expected = expected.toString();\n    }\n}\nexports.InvalidNonceError = InvalidNonceError;\n//# sourceMappingURL=errors.js.map"]},"metadata":{},"sourceType":"script"}