{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getTotalFees = void 0;\n\nvar getTotalFees = function getTotalFees(block, minFeePerByte, baseFees) {\n  return block.payload.reduce(function (prev, current) {\n    var _a, _b;\n\n    var baseFee = (_b = (_a = baseFees.find(function (fee) {\n      return fee.moduleID === current.moduleID && fee.assetID === current.assetID;\n    })) === null || _a === void 0 ? void 0 : _a.baseFee) !== null && _b !== void 0 ? _b : BigInt(0);\n    var minFee = minFeePerByte * BigInt(current.getBytes().length) + BigInt(baseFee);\n    return {\n      totalFee: prev.totalFee + current.fee,\n      totalMinFee: prev.totalMinFee + minFee\n    };\n  }, {\n    totalFee: BigInt(0),\n    totalMinFee: BigInt(0)\n  });\n};\n\nexports.getTotalFees = getTotalFees;","map":{"version":3,"sources":["../../../src/modules/token/utils.ts"],"names":[],"mappings":";;;;;;;AAeO,IAAM,YAAY,GAAG,SAAf,YAAe,CAC3B,KAD2B,EAE3B,aAF2B,EAG3B,QAH2B;AAAA,SAK3B,KAAK,CAAC,OAAN,CAAc,MAAd,CACC,UAAC,IAAD,EAAO,OAAP,EAAkB;;;AACjB,QAAM,OAAO,GACZ,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,QAAQ,CAAC,IAAT,CACC,UAAC,GAAD;AAAA,aACC,GAAG,CAAC,QAAJ,KAAiB,OAAO,CAAC,QAAzB,IAAqC,GAAG,CAAC,OAAJ,KAAgB,OAAO,CAAC,OAD9D;AAAA,KADD,CAAA,MAGC,IAHD,IAGC,EAAA,KAAA,KAAA,CAHD,GAGC,KAAA,CAHD,GAGC,EAAA,CAAE,OAHH,MAGU,IAHV,IAGU,EAAA,KAAA,KAAA,CAHV,GAGU,EAHV,GAGc,MAAM,CAAC,CAAD,CAJrB;AAKA,QAAM,MAAM,GAAG,aAAa,GAAG,MAAM,CAAC,OAAO,CAAC,QAAR,GAAmB,MAApB,CAAtB,GAAoD,MAAM,CAAC,OAAD,CAAzE;AAEA,WAAO;AACN,MAAA,QAAQ,EAAE,IAAI,CAAC,QAAL,GAAgB,OAAO,CAAC,GAD5B;AAEN,MAAA,WAAW,EAAE,IAAI,CAAC,WAAL,GAAmB;AAF1B,KAAP;AAIA,GAbF,EAcC;AAAE,IAAA,QAAQ,EAAE,MAAM,CAAC,CAAD,CAAlB;AAAuB,IAAA,WAAW,EAAE,MAAM,CAAC,CAAD;AAA1C,GAdD,CAL2B;AAAA,CAArB;;AAAM,OAAA,CAAA,YAAA,GAAY,YAAZ","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getTotalFees = void 0;\nconst getTotalFees = (block, minFeePerByte, baseFees) => block.payload.reduce((prev, current) => {\n    var _a, _b;\n    const baseFee = (_b = (_a = baseFees.find((fee) => fee.moduleID === current.moduleID && fee.assetID === current.assetID)) === null || _a === void 0 ? void 0 : _a.baseFee) !== null && _b !== void 0 ? _b : BigInt(0);\n    const minFee = minFeePerByte * BigInt(current.getBytes().length) + BigInt(baseFee);\n    return {\n        totalFee: prev.totalFee + current.fee,\n        totalMinFee: prev.totalMinFee + minFee,\n    };\n}, { totalFee: BigInt(0), totalMinFee: BigInt(0) });\nexports.getTotalFees = getTotalFees;\n//# sourceMappingURL=utils.js.map"]},"metadata":{},"sourceType":"script"}