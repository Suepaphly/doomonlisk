{"ast":null,"code":"\"use strict\";\n\nvar _slicedToArray = require(\"/home/lisk/doomonlisk/src/app/build/react-app/node_modules/@babel/runtime/helpers/slicedToArray\");\n\nvar _classCallCheck = require(\"/home/lisk/doomonlisk/src/app/build/react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/home/lisk/doomonlisk/src/app/build/react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Action = void 0;\n\nvar assert_1 = require(\"assert\");\n\nvar constants_1 = require(\"../constants\");\n\nvar jsonrpc_1 = require(\"./jsonrpc\");\n\nvar Action = /*#__PURE__*/function () {\n  function Action(id, name, params, handler) {\n    _classCallCheck(this, Action);\n\n    assert_1.strict(constants_1.actionWithModuleNameReg.test(name), \"Action name \\\"\".concat(name, \"\\\" must be a valid name with module name and action name.\"));\n    this.id = id;\n\n    var _name$split = name.split(':');\n\n    var _name$split2 = _slicedToArray(_name$split, 2);\n\n    this.module = _name$split2[0];\n    this.name = _name$split2[1];\n    this.params = params !== null && params !== void 0 ? params : {};\n    this.handler = handler;\n  }\n\n  _createClass(Action, [{\n    key: \"toJSONRPCRequest\",\n    value: function toJSONRPCRequest() {\n      return {\n        jsonrpc: jsonrpc_1.VERSION,\n        id: this.id,\n        method: \"\".concat(this.module, \":\").concat(this.name),\n        params: this.params\n      };\n    }\n  }, {\n    key: \"buildJSONRPCResponse\",\n    value: function buildJSONRPCResponse(_ref) {\n      var error = _ref.error,\n          result = _ref.result;\n\n      if (error) {\n        return {\n          id: this.id,\n          jsonrpc: jsonrpc_1.VERSION,\n          error: error\n        };\n      }\n\n      return {\n        id: this.id,\n        jsonrpc: jsonrpc_1.VERSION,\n        result: result\n      };\n    }\n  }, {\n    key: \"key\",\n    value: function key() {\n      return \"\".concat(this.module, \":\").concat(this.name);\n    }\n  }], [{\n    key: \"fromJSONRPCRequest\",\n    value: function fromJSONRPCRequest(data) {\n      var _ref2 = typeof data === 'string' ? JSON.parse(data) : data,\n          id = _ref2.id,\n          method = _ref2.method,\n          params = _ref2.params;\n\n      return new Action(id, method, params);\n    }\n  }]);\n\n  return Action;\n}();\n\nexports.Action = Action;","map":{"version":3,"sources":["../../src/controller/action.ts"],"names":[],"mappings":";;;;;;;;;;;;;AAcA,IAAA,QAAA,GAAA,OAAA,CAAA,QAAA,CAAA;;AACA,IAAA,WAAA,GAAA,OAAA,CAAA,cAAA,CAAA;;AACA,IAAA,SAAA,GAAA,OAAA,CAAA,WAAA,CAAA;;IAea,M;AAOZ,kBACC,EADD,EAEC,IAFD,EAGC,MAHD,EAIC,OAJD,EAIwB;AAAA;;AAEvB,IAAA,QAAA,CAAA,MAAA,CACC,WAAA,CAAA,uBAAA,CAAwB,IAAxB,CAA6B,IAA7B,CADD,0BAEiB,IAFjB;AAKA,SAAK,EAAL,GAAU,EAAV;;AAPuB,sBAQI,IAAI,CAAC,KAAL,CAAW,GAAX,CARJ;;AAAA;;AAQtB,SAAK,MARiB;AAQT,SAAK,IARI;AASvB,SAAK,MAAL,GAAc,MAAM,KAAA,IAAN,IAAA,MAAM,KAAA,KAAA,CAAN,GAAA,MAAA,GAAU,EAAxB;AACA,SAAK,OAAL,GAAe,OAAf;AACA;;;;WASM,4BAAgB;AACtB,aAAO;AACN,QAAA,OAAO,EAAE,SAAA,CAAA,OADH;AAEN,QAAA,EAAE,EAAE,KAAK,EAFH;AAGN,QAAA,MAAM,YAAK,KAAK,MAAV,cAAoB,KAAK,IAAzB,CAHA;AAIN,QAAA,MAAM,EAAE,KAAK;AAJP,OAAP;AAMA;;;WAEM,oCAMN;AAAA,UALA,KAKA,QALA,KAKA;AAAA,UAJA,MAIA,QAJA,MAIA;;AACA,UAAI,KAAJ,EAAW;AACV,eAAO;AAAE,UAAA,EAAE,EAAE,KAAK,EAAX;AAAe,UAAA,OAAO,EAAE,SAAA,CAAA,OAAxB;AAAiC,UAAA,KAAK,EAAL;AAAjC,SAAP;AACA;;AAED,aAAO;AAAE,QAAA,EAAE,EAAE,KAAK,EAAX;AAAe,QAAA,OAAO,EAAE,SAAA,CAAA,OAAxB;AAAiC,QAAA,MAAM,EAAE;AAAzC,OAAP;AACA;;;WAEM,eAAG;AACT,uBAAU,KAAK,MAAf,cAAyB,KAAK,IAA9B;AACA;;;WAhCM,4BAA0B,IAA1B,EAAsD;AAC5D,kBACC,OAAO,IAAP,KAAgB,QAAhB,GAA4B,IAAI,CAAC,KAAL,CAAW,IAAX,CAA5B,GAAiE,IADlE;AAAA,UAAQ,EAAR,SAAQ,EAAR;AAAA,UAAY,MAAZ,SAAY,MAAZ;AAAA,UAAoB,MAApB,SAAoB,MAApB;;AAGA,aAAO,IAAI,MAAJ,CAAW,EAAX,EAAe,MAAf,EAAuB,MAAvB,CAAP;AACA;;;;;;AA7BF,OAAA,CAAA,MAAA,GAAA,MAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Action = void 0;\nconst assert_1 = require(\"assert\");\nconst constants_1 = require(\"../constants\");\nconst jsonrpc_1 = require(\"./jsonrpc\");\nclass Action {\n    constructor(id, name, params, handler) {\n        assert_1.strict(constants_1.actionWithModuleNameReg.test(name), `Action name \"${name}\" must be a valid name with module name and action name.`);\n        this.id = id;\n        [this.module, this.name] = name.split(':');\n        this.params = params !== null && params !== void 0 ? params : {};\n        this.handler = handler;\n    }\n    static fromJSONRPCRequest(data) {\n        const { id, method, params } = typeof data === 'string' ? JSON.parse(data) : data;\n        return new Action(id, method, params);\n    }\n    toJSONRPCRequest() {\n        return {\n            jsonrpc: jsonrpc_1.VERSION,\n            id: this.id,\n            method: `${this.module}:${this.name}`,\n            params: this.params,\n        };\n    }\n    buildJSONRPCResponse({ error, result, }) {\n        if (error) {\n            return { id: this.id, jsonrpc: jsonrpc_1.VERSION, error };\n        }\n        return { id: this.id, jsonrpc: jsonrpc_1.VERSION, result: result };\n    }\n    key() {\n        return `${this.module}:${this.name}`;\n    }\n}\nexports.Action = Action;\n//# sourceMappingURL=action.js.map"]},"metadata":{},"sourceType":"script"}