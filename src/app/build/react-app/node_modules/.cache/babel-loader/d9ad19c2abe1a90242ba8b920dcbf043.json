{"ast":null,"code":"var cloneDeep = require('lodash.clonedeep');\n\nvar Emitter = require('component-emitter');\n\nvar Response = require('./response').Response;\n\nvar scErrors = require('sc-errors');\n\nvar InvalidArgumentsError = scErrors.InvalidArgumentsError;\nvar SocketProtocolError = scErrors.SocketProtocolError;\nvar TimeoutError = scErrors.TimeoutError;\nvar InvalidActionError = scErrors.InvalidActionError;\n\nvar SCServerSocket = function SCServerSocket(id, server, socket) {\n  var self = this;\n  Emitter.call(this);\n  this._localEvents = {\n    'subscribe': 1,\n    'unsubscribe': 1,\n    'connect': 1,\n    '_connect': 1,\n    'disconnect': 1,\n    '_disconnect': 1,\n    'connectAbort': 1,\n    '_connectAbort': 1,\n    'close': 1,\n    '_close': 1,\n    'message': 1,\n    'error': 1,\n    'authStateChange': 1,\n    'authTokenSigned': 1,\n    'authenticate': 1,\n    'deauthenticate': 1,\n    'badAuthToken': 1,\n    'raw': 1\n  };\n  this._autoAckEvents = {\n    '#publish': 1\n  };\n  this.id = id;\n  this.server = server;\n  this.socket = socket;\n  this.state = this.CONNECTING;\n  this.authState = this.UNAUTHENTICATED;\n  this.active = true;\n  this.request = this.socket.upgradeReq || {};\n  var wsEngine = this.server.options.wsEngine;\n\n  if (wsEngine === 'sc-uws' || wsEngine === 'uws') {\n    this.request.connection = this.socket._socket;\n  }\n\n  if (this.request.connection) {\n    this.remoteAddress = this.request.connection.remoteAddress;\n    this.remoteFamily = this.request.connection.remoteFamily;\n    this.remotePort = this.request.connection.remotePort;\n  } else {\n    this.remoteAddress = this.request.remoteAddress;\n    this.remoteFamily = this.request.remoteFamily;\n    this.remotePort = this.request.remotePort;\n  }\n\n  if (this.request.forwardedForAddress) {\n    this.forwardedForAddress = this.request.forwardedForAddress;\n  }\n\n  this._cid = 1;\n  this._callbackMap = {};\n  this._batchSendList = [];\n  this.channelSubscriptions = {};\n  this.channelSubscriptionsCount = 0;\n  this.socket.on('error', function (err) {\n    Emitter.prototype.emit.call(self, 'error', err);\n  });\n  this.socket.on('close', function (code, data) {\n    self._onSCClose(code, data);\n  });\n\n  if (!this.server.pingTimeoutDisabled) {\n    this._pingIntervalTicker = setInterval(this._sendPing.bind(this), this.server.pingInterval);\n  }\n\n  this._resetPongTimeout(); // Receive incoming raw messages\n\n\n  this.socket.on('message', function (message, flags) {\n    self._resetPongTimeout();\n\n    Emitter.prototype.emit.call(self, 'message', message);\n    var obj;\n\n    try {\n      obj = self.decode(message);\n    } catch (err) {\n      if (err.name === 'Error') {\n        err.name = 'InvalidMessageError';\n      }\n\n      Emitter.prototype.emit.call(self, 'error', err);\n\n      if (self.server.strictHandshake && self.state === self.CONNECTING) {\n        self._onSCClose(4009);\n\n        self.socket.close(4009);\n      }\n\n      return;\n    }\n\n    if (self.server.strictHandshake && self.state === self.CONNECTING && (!obj || obj.event !== '#handshake')) {\n      self._onSCClose(4009);\n\n      self.socket.close(4009);\n      return;\n    } // If pong\n\n\n    if (obj === '#2') {\n      var token = self.getAuthToken();\n\n      if (self.server.isAuthTokenExpired(token)) {\n        self.deauthenticate();\n      }\n    } else {\n      if (Array.isArray(obj)) {\n        var len = obj.length;\n\n        for (var i = 0; i < len; i++) {\n          self._handleEventObject(obj[i], message);\n        }\n      } else {\n        self._handleEventObject(obj, message);\n      }\n    }\n  });\n};\n\nSCServerSocket.prototype = Object.create(Emitter.prototype);\nSCServerSocket.CONNECTING = SCServerSocket.prototype.CONNECTING = 'connecting';\nSCServerSocket.OPEN = SCServerSocket.prototype.OPEN = 'open';\nSCServerSocket.CLOSED = SCServerSocket.prototype.CLOSED = 'closed';\nSCServerSocket.AUTHENTICATED = SCServerSocket.prototype.AUTHENTICATED = 'authenticated';\nSCServerSocket.UNAUTHENTICATED = SCServerSocket.prototype.UNAUTHENTICATED = 'unauthenticated';\nSCServerSocket.ignoreStatuses = scErrors.socketProtocolIgnoreStatuses;\nSCServerSocket.errorStatuses = scErrors.socketProtocolErrorStatuses;\n\nSCServerSocket.prototype._sendPing = function () {\n  if (this.state !== this.CLOSED) {\n    this.sendObject('#1');\n  }\n};\n\nSCServerSocket.prototype._handleEventObject = function (obj, message) {\n  var self = this;\n\n  if (obj && obj.event != null) {\n    var eventName = obj.event;\n\n    if (self._localEvents[eventName] == null) {\n      var response = new Response(self, obj.cid);\n      self.server.verifyInboundEvent(self, eventName, obj.data, function (err, newEventData, ackData) {\n        if (err) {\n          response.error(err, ackData);\n        } else {\n          if (eventName === '#disconnect') {\n            var disconnectData = newEventData || {};\n\n            self._onSCClose(disconnectData.code, disconnectData.data);\n          } else {\n            if (self._autoAckEvents[eventName]) {\n              if (ackData !== undefined) {\n                response.end(ackData);\n              } else {\n                response.end();\n              }\n\n              Emitter.prototype.emit.call(self, eventName, newEventData);\n            } else {\n              Emitter.prototype.emit.call(self, eventName, newEventData, response.callback.bind(response));\n            }\n          }\n        }\n      });\n    }\n  } else if (obj && obj.rid != null) {\n    // If incoming message is a response to a previously sent message\n    var ret = self._callbackMap[obj.rid];\n\n    if (ret) {\n      clearTimeout(ret.timeout);\n      delete self._callbackMap[obj.rid];\n      var rehydratedError = scErrors.hydrateError(obj.error);\n      ret.callback(rehydratedError, obj.data);\n    }\n  } else {\n    // The last remaining case is to treat the message as raw\n    Emitter.prototype.emit.call(self, 'raw', message);\n  }\n};\n\nSCServerSocket.prototype._resetPongTimeout = function () {\n  if (this.server.pingTimeoutDisabled) {\n    return;\n  }\n\n  var self = this;\n  clearTimeout(this._pingTimeoutTicker);\n  this._pingTimeoutTicker = setTimeout(function () {\n    self._onSCClose(4001);\n\n    self.socket.close(4001);\n  }, this.server.pingTimeout);\n};\n\nSCServerSocket.prototype._nextCallId = function () {\n  return this._cid++;\n};\n\nSCServerSocket.prototype.getState = function () {\n  return this.state;\n};\n\nSCServerSocket.prototype.getBytesReceived = function () {\n  return this.socket.bytesReceived;\n};\n\nSCServerSocket.prototype._onSCClose = function (code, data) {\n  clearInterval(this._pingIntervalTicker);\n  clearTimeout(this._pingTimeoutTicker);\n\n  if (this.state !== this.CLOSED) {\n    var prevState = this.state;\n    this.state = this.CLOSED;\n\n    if (prevState === this.CONNECTING) {\n      // Private connectAbort event for internal use only\n      Emitter.prototype.emit.call(this, '_connectAbort', code, data);\n      Emitter.prototype.emit.call(this, 'connectAbort', code, data);\n    } else {\n      // Private disconnect event for internal use only\n      Emitter.prototype.emit.call(this, '_disconnect', code, data);\n      Emitter.prototype.emit.call(this, 'disconnect', code, data);\n    } // Private close event for internal use only\n\n\n    Emitter.prototype.emit.call(this, '_close', code, data);\n    Emitter.prototype.emit.call(this, 'close', code, data);\n\n    if (!SCServerSocket.ignoreStatuses[code]) {\n      var closeMessage;\n\n      if (data) {\n        var reasonString;\n\n        if (typeof data === 'object') {\n          try {\n            reasonString = JSON.stringify(data);\n          } catch (error) {\n            reasonString = data.toString();\n          }\n        } else {\n          reasonString = data;\n        }\n\n        closeMessage = 'Socket connection closed with status code ' + code + ' and reason: ' + reasonString;\n      } else {\n        closeMessage = 'Socket connection closed with status code ' + code;\n      }\n\n      var err = new SocketProtocolError(SCServerSocket.errorStatuses[code] || closeMessage, code);\n      Emitter.prototype.emit.call(this, 'error', err);\n    }\n  }\n};\n\nSCServerSocket.prototype.disconnect = function (code, data) {\n  code = code || 1000;\n\n  if (typeof code !== 'number') {\n    var err = new InvalidArgumentsError('If specified, the code argument must be a number');\n    Emitter.prototype.emit.call(this, 'error', err);\n  }\n\n  if (this.state !== this.CLOSED) {\n    var packet = {\n      code: code,\n      data: data\n    };\n    this.emit('#disconnect', packet);\n\n    this._onSCClose(code, data);\n\n    this.socket.close(code);\n  }\n};\n\nSCServerSocket.prototype.destroy = function (code, data) {\n  this.active = false;\n  this.disconnect(code, data);\n};\n\nSCServerSocket.prototype.terminate = function () {\n  this.socket.terminate();\n};\n\nSCServerSocket.prototype.send = function (data, options) {\n  var self = this;\n  this.socket.send(data, options, function (err) {\n    if (err) {\n      self._onSCClose(1006, err.toString());\n    }\n  });\n};\n\nSCServerSocket.prototype.decode = function (message) {\n  return this.server.codec.decode(message);\n};\n\nSCServerSocket.prototype.encode = function (object) {\n  return this.server.codec.encode(object);\n};\n\nSCServerSocket.prototype.sendObjectBatch = function (object) {\n  var self = this;\n\n  this._batchSendList.push(object);\n\n  if (this._batchTimeout) {\n    return;\n  }\n\n  this._batchTimeout = setTimeout(function () {\n    delete self._batchTimeout;\n\n    if (self._batchSendList.length) {\n      var str;\n\n      try {\n        str = self.encode(self._batchSendList);\n      } catch (err) {\n        Emitter.prototype.emit.call(self, 'error', err);\n      }\n\n      if (str != null) {\n        self.send(str);\n      }\n\n      self._batchSendList = [];\n    }\n  }, this.server.options.pubSubBatchDuration || 0);\n};\n\nSCServerSocket.prototype.sendObjectSingle = function (object) {\n  var str;\n\n  try {\n    str = this.encode(object);\n  } catch (err) {\n    Emitter.prototype.emit.call(this, 'error', err);\n  }\n\n  if (str != null) {\n    this.send(str);\n  }\n};\n\nSCServerSocket.prototype.sendObject = function (object, options) {\n  if (options && options.batch) {\n    this.sendObjectBatch(object);\n  } else {\n    this.sendObjectSingle(object);\n  }\n};\n\nSCServerSocket.prototype.emit = function (event, data, callback, options) {\n  var self = this;\n\n  if (this._localEvents[event] == null) {\n    this.server.verifyOutboundEvent(this, event, data, options, function (err, newData) {\n      var eventObject = {\n        event: event\n      };\n\n      if (newData !== undefined) {\n        eventObject.data = newData;\n      }\n\n      if (err) {\n        if (callback) {\n          eventObject.cid = self._nextCallId();\n          callback(err, eventObject);\n        }\n      } else {\n        if (callback) {\n          eventObject.cid = self._nextCallId();\n          var timeout = setTimeout(function () {\n            var error = new TimeoutError(\"Event response for '\" + event + \"' timed out\");\n            delete self._callbackMap[eventObject.cid];\n            callback(error, eventObject);\n          }, self.server.ackTimeout);\n          self._callbackMap[eventObject.cid] = {\n            callback: callback,\n            timeout: timeout\n          };\n        }\n\n        if (options && options.useCache && options.stringifiedData != null) {\n          // Optimized\n          self.send(options.stringifiedData);\n        } else {\n          self.sendObject(eventObject);\n        }\n      }\n    });\n  } else if (event === 'error') {\n    Emitter.prototype.emit.call(this, event, data);\n  } else {\n    var error = new InvalidActionError('The \"' + event + '\" event is reserved and cannot be emitted on a server socket');\n    Emitter.prototype.emit.call(this, 'error', error);\n  }\n};\n\nSCServerSocket.prototype.triggerAuthenticationEvents = function (oldState) {\n  if (oldState !== this.AUTHENTICATED) {\n    var stateChangeData = {\n      oldState: oldState,\n      newState: this.authState,\n      authToken: this.authToken\n    };\n    Emitter.prototype.emit.call(this, 'authStateChange', stateChangeData);\n    this.server.emit('authenticationStateChange', this, stateChangeData);\n  }\n\n  Emitter.prototype.emit.call(this, 'authenticate', this.authToken);\n  this.server.emit('authentication', this, this.authToken);\n};\n\nSCServerSocket.prototype.setAuthToken = function (data, options, callback) {\n  var self = this;\n  var authToken = cloneDeep(data);\n  var oldState = this.authState;\n  this.authState = this.AUTHENTICATED;\n\n  if (options == null) {\n    options = {};\n  } else {\n    options = cloneDeep(options);\n\n    if (options.algorithm != null) {\n      delete options.algorithm;\n      var err = new InvalidArgumentsError('Cannot change auth token algorithm at runtime - It must be specified as a config option on launch');\n      Emitter.prototype.emit.call(this, 'error', err);\n    }\n  }\n\n  options.mutatePayload = true;\n  var defaultSignatureOptions = this.server.defaultSignatureOptions; // We cannot have the exp claim on the token and the expiresIn option\n  // set at the same time or else auth.signToken will throw an error.\n\n  var expiresIn;\n\n  if (options.expiresIn == null) {\n    expiresIn = defaultSignatureOptions.expiresIn;\n  } else {\n    expiresIn = options.expiresIn;\n  }\n\n  if (authToken) {\n    if (authToken.exp == null) {\n      options.expiresIn = expiresIn;\n    } else {\n      delete options.expiresIn;\n    }\n  } else {\n    options.expiresIn = expiresIn;\n  } // Always use the default sync/async signing mode since it cannot be changed at runtime.\n\n\n  if (defaultSignatureOptions.async != null) {\n    options.async = defaultSignatureOptions.async;\n  } // Always use the default algorithm since it cannot be changed at runtime.\n\n\n  if (defaultSignatureOptions.algorithm != null) {\n    options.algorithm = defaultSignatureOptions.algorithm;\n  }\n\n  this.authToken = authToken;\n  this.server.auth.signToken(authToken, this.server.signatureKey, options, function (err, signedToken) {\n    if (err) {\n      Emitter.prototype.emit.call(self, 'error', err);\n\n      self._onSCClose(4002, err.toString());\n\n      self.socket.close(4002);\n      callback && callback(err);\n    } else {\n      var tokenData = {\n        token: signedToken\n      };\n\n      if (self.authToken === authToken) {\n        self.signedAuthToken = signedToken;\n        Emitter.prototype.emit.call(self, 'authTokenSigned', signedToken);\n      }\n\n      self.emit('#setAuthToken', tokenData, callback);\n    }\n  });\n  this.triggerAuthenticationEvents(oldState);\n};\n\nSCServerSocket.prototype.getAuthToken = function () {\n  return this.authToken;\n};\n\nSCServerSocket.prototype.deauthenticateSelf = function () {\n  var oldState = this.authState;\n  var oldToken = this.authToken;\n  this.signedAuthToken = null;\n  this.authToken = null;\n  this.authState = this.UNAUTHENTICATED;\n\n  if (oldState !== this.UNAUTHENTICATED) {\n    var stateChangeData = {\n      oldState: oldState,\n      newState: this.authState\n    };\n    Emitter.prototype.emit.call(this, 'authStateChange', stateChangeData);\n    this.server.emit('authenticationStateChange', this, stateChangeData);\n  }\n\n  Emitter.prototype.emit.call(this, 'deauthenticate', oldToken);\n  this.server.emit('deauthentication', this, oldToken);\n};\n\nSCServerSocket.prototype.deauthenticate = function (callback) {\n  this.deauthenticateSelf();\n  this.emit('#removeAuthToken', null, callback);\n};\n\nSCServerSocket.prototype.kickOut = function (channel, message, callback) {\n  var self = this;\n\n  if (channel == null) {\n    Object.keys(this.channelSubscriptions).forEach(function (channelName) {\n      delete self.channelSubscriptions[channelName];\n      self.channelSubscriptionsCount--;\n      self.emit('#kickOut', {\n        message: message,\n        channel: channelName\n      });\n    });\n  } else {\n    delete this.channelSubscriptions[channel];\n    this.channelSubscriptionsCount--;\n    this.emit('#kickOut', {\n      message: message,\n      channel: channel\n    });\n  }\n\n  this.server.brokerEngine.unsubscribeSocket(this, channel, callback);\n};\n\nSCServerSocket.prototype.subscriptions = function () {\n  var subs = [];\n\n  for (var i in this.channelSubscriptions) {\n    if (this.channelSubscriptions.hasOwnProperty(i)) {\n      subs.push(i);\n    }\n  }\n\n  return subs;\n};\n\nSCServerSocket.prototype.isSubscribed = function (channel) {\n  return !!this.channelSubscriptions[channel];\n};\n\nmodule.exports = SCServerSocket;","map":{"version":3,"sources":["/home/lisk/doomonlisk/node_modules/socketcluster-server/scserversocket.js"],"names":["cloneDeep","require","Emitter","Response","scErrors","InvalidArgumentsError","SocketProtocolError","TimeoutError","InvalidActionError","SCServerSocket","id","server","socket","self","call","_localEvents","_autoAckEvents","state","CONNECTING","authState","UNAUTHENTICATED","active","request","upgradeReq","wsEngine","options","connection","_socket","remoteAddress","remoteFamily","remotePort","forwardedForAddress","_cid","_callbackMap","_batchSendList","channelSubscriptions","channelSubscriptionsCount","on","err","prototype","emit","code","data","_onSCClose","pingTimeoutDisabled","_pingIntervalTicker","setInterval","_sendPing","bind","pingInterval","_resetPongTimeout","message","flags","obj","decode","name","strictHandshake","close","event","token","getAuthToken","isAuthTokenExpired","deauthenticate","Array","isArray","len","length","i","_handleEventObject","Object","create","OPEN","CLOSED","AUTHENTICATED","ignoreStatuses","socketProtocolIgnoreStatuses","errorStatuses","socketProtocolErrorStatuses","sendObject","eventName","response","cid","verifyInboundEvent","newEventData","ackData","error","disconnectData","undefined","end","callback","rid","ret","clearTimeout","timeout","rehydratedError","hydrateError","_pingTimeoutTicker","setTimeout","pingTimeout","_nextCallId","getState","getBytesReceived","bytesReceived","clearInterval","prevState","closeMessage","reasonString","JSON","stringify","toString","disconnect","packet","destroy","terminate","send","codec","encode","object","sendObjectBatch","push","_batchTimeout","str","pubSubBatchDuration","sendObjectSingle","batch","verifyOutboundEvent","newData","eventObject","ackTimeout","useCache","stringifiedData","triggerAuthenticationEvents","oldState","stateChangeData","newState","authToken","setAuthToken","algorithm","mutatePayload","defaultSignatureOptions","expiresIn","exp","async","auth","signToken","signatureKey","signedToken","tokenData","signedAuthToken","deauthenticateSelf","oldToken","kickOut","channel","keys","forEach","channelName","brokerEngine","unsubscribeSocket","subscriptions","subs","hasOwnProperty","isSubscribed","module","exports"],"mappings":"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","sourcesContent":["var cloneDeep = require('lodash.clonedeep');\nvar Emitter = require('component-emitter');\nvar Response = require('./response').Response;\n\nvar scErrors = require('sc-errors');\nvar InvalidArgumentsError = scErrors.InvalidArgumentsError;\nvar SocketProtocolError = scErrors.SocketProtocolError;\nvar TimeoutError = scErrors.TimeoutError;\nvar InvalidActionError = scErrors.InvalidActionError;\n\n\nvar SCServerSocket = function (id, server, socket) {\n  var self = this;\n\n  Emitter.call(this);\n\n  this._localEvents = {\n    'subscribe': 1,\n    'unsubscribe': 1,\n    'connect': 1,\n    '_connect': 1,\n    'disconnect': 1,\n    '_disconnect': 1,\n    'connectAbort': 1,\n    '_connectAbort': 1,\n    'close': 1,\n    '_close': 1,\n    'message': 1,\n    'error': 1,\n    'authStateChange': 1,\n    'authTokenSigned': 1,\n    'authenticate': 1,\n    'deauthenticate': 1,\n    'badAuthToken': 1,\n    'raw': 1\n  };\n\n  this._autoAckEvents = {\n    '#publish': 1\n  };\n\n  this.id = id;\n  this.server = server;\n  this.socket = socket;\n  this.state = this.CONNECTING;\n  this.authState = this.UNAUTHENTICATED;\n  this.active = true;\n\n  this.request = this.socket.upgradeReq || {};\n\n  var wsEngine = this.server.options.wsEngine;\n  if (wsEngine === 'sc-uws' || wsEngine === 'uws') {\n    this.request.connection = this.socket._socket;\n  }\n  if (this.request.connection) {\n    this.remoteAddress = this.request.connection.remoteAddress;\n    this.remoteFamily = this.request.connection.remoteFamily;\n    this.remotePort = this.request.connection.remotePort;\n  } else {\n    this.remoteAddress = this.request.remoteAddress;\n    this.remoteFamily = this.request.remoteFamily;\n    this.remotePort = this.request.remotePort;\n  }\n  if (this.request.forwardedForAddress) {\n    this.forwardedForAddress = this.request.forwardedForAddress;\n  }\n\n  this._cid = 1;\n  this._callbackMap = {};\n  this._batchSendList = [];\n\n  this.channelSubscriptions = {};\n  this.channelSubscriptionsCount = 0;\n\n  this.socket.on('error', function (err) {\n    Emitter.prototype.emit.call(self, 'error', err);\n  });\n\n  this.socket.on('close', function (code, data) {\n    self._onSCClose(code, data);\n  });\n\n  if (!this.server.pingTimeoutDisabled) {\n    this._pingIntervalTicker = setInterval(this._sendPing.bind(this), this.server.pingInterval);\n  }\n  this._resetPongTimeout();\n\n  // Receive incoming raw messages\n  this.socket.on('message', function (message, flags) {\n    self._resetPongTimeout();\n\n    Emitter.prototype.emit.call(self, 'message', message);\n\n    var obj;\n    try {\n      obj = self.decode(message);\n    } catch (err) {\n      if (err.name === 'Error') {\n        err.name = 'InvalidMessageError';\n      }\n      Emitter.prototype.emit.call(self, 'error', err);\n      if (\n        self.server.strictHandshake &&\n        self.state === self.CONNECTING\n      ) {\n        self._onSCClose(4009);\n        self.socket.close(4009);\n      }\n      return;\n    }\n\n    if (\n      self.server.strictHandshake &&\n      self.state === self.CONNECTING &&\n      (!obj || obj.event !== '#handshake')\n    ) {\n      self._onSCClose(4009);\n      self.socket.close(4009);\n      return;\n    }\n\n    // If pong\n    if (obj === '#2') {\n      var token = self.getAuthToken();\n      if (self.server.isAuthTokenExpired(token)) {\n        self.deauthenticate();\n      }\n    } else {\n      if (Array.isArray(obj)) {\n        var len = obj.length;\n        for (var i = 0; i < len; i++) {\n          self._handleEventObject(obj[i], message);\n        }\n      } else {\n        self._handleEventObject(obj, message);\n      }\n    }\n  });\n};\n\nSCServerSocket.prototype = Object.create(Emitter.prototype);\n\nSCServerSocket.CONNECTING = SCServerSocket.prototype.CONNECTING = 'connecting';\nSCServerSocket.OPEN = SCServerSocket.prototype.OPEN = 'open';\nSCServerSocket.CLOSED = SCServerSocket.prototype.CLOSED = 'closed';\n\nSCServerSocket.AUTHENTICATED = SCServerSocket.prototype.AUTHENTICATED = 'authenticated';\nSCServerSocket.UNAUTHENTICATED = SCServerSocket.prototype.UNAUTHENTICATED = 'unauthenticated';\n\nSCServerSocket.ignoreStatuses = scErrors.socketProtocolIgnoreStatuses;\nSCServerSocket.errorStatuses = scErrors.socketProtocolErrorStatuses;\n\nSCServerSocket.prototype._sendPing = function () {\n  if (this.state !== this.CLOSED) {\n    this.sendObject('#1');\n  }\n};\n\nSCServerSocket.prototype._handleEventObject = function (obj, message) {\n  var self = this;\n  if (obj && obj.event != null) {\n    var eventName = obj.event;\n\n    if (self._localEvents[eventName] == null) {\n      var response = new Response(self, obj.cid);\n      self.server.verifyInboundEvent(self, eventName, obj.data, function (err, newEventData, ackData) {\n        if (err) {\n          response.error(err, ackData);\n        } else {\n          if (eventName === '#disconnect') {\n            var disconnectData = newEventData || {};\n            self._onSCClose(disconnectData.code, disconnectData.data);\n          } else {\n            if (self._autoAckEvents[eventName]) {\n              if (ackData !== undefined) {\n                response.end(ackData);\n              } else {\n                response.end();\n              }\n              Emitter.prototype.emit.call(self, eventName, newEventData);\n            } else {\n              Emitter.prototype.emit.call(self, eventName, newEventData, response.callback.bind(response));\n            }\n          }\n        }\n      });\n    }\n  } else if (obj && obj.rid != null) {\n    // If incoming message is a response to a previously sent message\n    var ret = self._callbackMap[obj.rid];\n    if (ret) {\n      clearTimeout(ret.timeout);\n      delete self._callbackMap[obj.rid];\n      var rehydratedError = scErrors.hydrateError(obj.error);\n      ret.callback(rehydratedError, obj.data);\n    }\n  } else {\n    // The last remaining case is to treat the message as raw\n    Emitter.prototype.emit.call(self, 'raw', message);\n  }\n};\n\nSCServerSocket.prototype._resetPongTimeout = function () {\n  if (this.server.pingTimeoutDisabled) {\n    return;\n  }\n  var self = this;\n\n  clearTimeout(this._pingTimeoutTicker);\n  this._pingTimeoutTicker = setTimeout(function() {\n    self._onSCClose(4001);\n    self.socket.close(4001);\n  }, this.server.pingTimeout);\n};\n\nSCServerSocket.prototype._nextCallId = function () {\n  return this._cid++;\n};\n\nSCServerSocket.prototype.getState = function () {\n  return this.state;\n};\n\nSCServerSocket.prototype.getBytesReceived = function () {\n  return this.socket.bytesReceived;\n};\n\nSCServerSocket.prototype._onSCClose = function (code, data) {\n  clearInterval(this._pingIntervalTicker);\n  clearTimeout(this._pingTimeoutTicker);\n\n  if (this.state !== this.CLOSED) {\n    var prevState = this.state;\n    this.state = this.CLOSED;\n\n    if (prevState === this.CONNECTING) {\n      // Private connectAbort event for internal use only\n      Emitter.prototype.emit.call(this, '_connectAbort', code, data);\n      Emitter.prototype.emit.call(this, 'connectAbort', code, data);\n    } else {\n      // Private disconnect event for internal use only\n      Emitter.prototype.emit.call(this, '_disconnect', code, data);\n      Emitter.prototype.emit.call(this, 'disconnect', code, data);\n    }\n    // Private close event for internal use only\n    Emitter.prototype.emit.call(this, '_close', code, data);\n    Emitter.prototype.emit.call(this, 'close', code, data);\n\n    if (!SCServerSocket.ignoreStatuses[code]) {\n      var closeMessage;\n      if (data) {\n        var reasonString;\n        if (typeof data === 'object') {\n          try {\n            reasonString = JSON.stringify(data);\n          } catch (error) {\n            reasonString = data.toString();\n          }\n        } else {\n          reasonString = data;\n        }\n        closeMessage = 'Socket connection closed with status code ' + code + ' and reason: ' + reasonString;\n      } else {\n        closeMessage = 'Socket connection closed with status code ' + code;\n      }\n      var err = new SocketProtocolError(SCServerSocket.errorStatuses[code] || closeMessage, code);\n      Emitter.prototype.emit.call(this, 'error', err);\n    }\n  }\n};\n\nSCServerSocket.prototype.disconnect = function (code, data) {\n  code = code || 1000;\n\n  if (typeof code !== 'number') {\n    var err = new InvalidArgumentsError('If specified, the code argument must be a number');\n    Emitter.prototype.emit.call(this, 'error', err);\n  }\n\n  if (this.state !== this.CLOSED) {\n    var packet = {\n      code: code,\n      data: data\n    };\n    this.emit('#disconnect', packet);\n    this._onSCClose(code, data);\n    this.socket.close(code);\n  }\n};\n\nSCServerSocket.prototype.destroy = function (code, data) {\n  this.active = false;\n  this.disconnect(code, data);\n};\n\nSCServerSocket.prototype.terminate = function () {\n  this.socket.terminate();\n};\n\nSCServerSocket.prototype.send = function (data, options) {\n  var self = this;\n\n  this.socket.send(data, options, function (err) {\n    if (err) {\n      self._onSCClose(1006, err.toString());\n    }\n  });\n};\n\nSCServerSocket.prototype.decode = function (message) {\n  return this.server.codec.decode(message);\n};\n\nSCServerSocket.prototype.encode = function (object) {\n  return this.server.codec.encode(object);\n};\n\nSCServerSocket.prototype.sendObjectBatch = function (object) {\n  var self = this;\n\n  this._batchSendList.push(object);\n  if (this._batchTimeout) {\n    return;\n  }\n\n  this._batchTimeout = setTimeout(function () {\n    delete self._batchTimeout;\n    if (self._batchSendList.length) {\n      var str;\n      try {\n        str = self.encode(self._batchSendList);\n      } catch (err) {\n        Emitter.prototype.emit.call(self, 'error', err);\n      }\n      if (str != null) {\n        self.send(str);\n      }\n      self._batchSendList = [];\n    }\n  }, this.server.options.pubSubBatchDuration || 0);\n};\n\nSCServerSocket.prototype.sendObjectSingle = function (object) {\n  var str;\n  try {\n    str = this.encode(object);\n  } catch (err) {\n    Emitter.prototype.emit.call(this, 'error', err);\n  }\n  if (str != null) {\n    this.send(str);\n  }\n};\n\nSCServerSocket.prototype.sendObject = function (object, options) {\n  if (options && options.batch) {\n    this.sendObjectBatch(object);\n  } else {\n    this.sendObjectSingle(object);\n  }\n};\n\nSCServerSocket.prototype.emit = function (event, data, callback, options) {\n  var self = this;\n\n  if (this._localEvents[event] == null) {\n    this.server.verifyOutboundEvent(this, event, data, options, function (err, newData) {\n      var eventObject = {\n        event: event\n      };\n      if (newData !== undefined) {\n        eventObject.data = newData;\n      }\n\n      if (err) {\n        if (callback) {\n          eventObject.cid = self._nextCallId();\n          callback(err, eventObject);\n        }\n      } else {\n        if (callback) {\n          eventObject.cid = self._nextCallId();\n          var timeout = setTimeout(function () {\n            var error = new TimeoutError(\"Event response for '\" + event + \"' timed out\");\n\n            delete self._callbackMap[eventObject.cid];\n            callback(error, eventObject);\n          }, self.server.ackTimeout);\n\n          self._callbackMap[eventObject.cid] = {callback: callback, timeout: timeout};\n        }\n        if (options && options.useCache && options.stringifiedData != null) {\n          // Optimized\n          self.send(options.stringifiedData);\n        } else {\n          self.sendObject(eventObject);\n        }\n      }\n    });\n  } else if (event === 'error') {\n    Emitter.prototype.emit.call(this, event, data);\n  } else {\n    var error = new InvalidActionError('The \"' + event + '\" event is reserved and cannot be emitted on a server socket');\n    Emitter.prototype.emit.call(this, 'error', error);\n  }\n};\n\nSCServerSocket.prototype.triggerAuthenticationEvents = function (oldState) {\n  if (oldState !== this.AUTHENTICATED) {\n    var stateChangeData = {\n      oldState: oldState,\n      newState: this.authState,\n      authToken: this.authToken\n    };\n    Emitter.prototype.emit.call(this, 'authStateChange', stateChangeData);\n    this.server.emit('authenticationStateChange', this, stateChangeData);\n  }\n  Emitter.prototype.emit.call(this, 'authenticate', this.authToken);\n  this.server.emit('authentication', this, this.authToken);\n};\n\nSCServerSocket.prototype.setAuthToken = function (data, options, callback) {\n  var self = this;\n\n  var authToken = cloneDeep(data);\n  var oldState = this.authState;\n  this.authState = this.AUTHENTICATED;\n\n  if (options == null) {\n    options = {};\n  } else {\n    options = cloneDeep(options);\n    if (options.algorithm != null) {\n      delete options.algorithm;\n      var err = new InvalidArgumentsError('Cannot change auth token algorithm at runtime - It must be specified as a config option on launch');\n      Emitter.prototype.emit.call(this, 'error', err);\n    }\n  }\n\n  options.mutatePayload = true;\n\n  var defaultSignatureOptions = this.server.defaultSignatureOptions;\n\n  // We cannot have the exp claim on the token and the expiresIn option\n  // set at the same time or else auth.signToken will throw an error.\n  var expiresIn;\n  if (options.expiresIn == null) {\n    expiresIn = defaultSignatureOptions.expiresIn;\n  } else {\n    expiresIn = options.expiresIn;\n  }\n  if (authToken) {\n    if (authToken.exp == null) {\n      options.expiresIn = expiresIn;\n    } else {\n      delete options.expiresIn;\n    }\n  } else {\n    options.expiresIn = expiresIn;\n  }\n\n  // Always use the default sync/async signing mode since it cannot be changed at runtime.\n  if (defaultSignatureOptions.async != null) {\n    options.async = defaultSignatureOptions.async;\n  }\n  // Always use the default algorithm since it cannot be changed at runtime.\n  if (defaultSignatureOptions.algorithm != null) {\n    options.algorithm = defaultSignatureOptions.algorithm;\n  }\n\n  this.authToken = authToken;\n\n  this.server.auth.signToken(authToken, this.server.signatureKey, options, function (err, signedToken) {\n    if (err) {\n      Emitter.prototype.emit.call(self, 'error', err);\n      self._onSCClose(4002, err.toString());\n      self.socket.close(4002);\n      callback && callback(err);\n    } else {\n      var tokenData = {\n        token: signedToken\n      };\n      if (self.authToken === authToken) {\n        self.signedAuthToken = signedToken;\n        Emitter.prototype.emit.call(self, 'authTokenSigned', signedToken);\n      }\n      self.emit('#setAuthToken', tokenData, callback);\n    }\n  });\n\n  this.triggerAuthenticationEvents(oldState);\n};\n\nSCServerSocket.prototype.getAuthToken = function () {\n  return this.authToken;\n};\n\nSCServerSocket.prototype.deauthenticateSelf = function () {\n  var oldState = this.authState;\n  var oldToken = this.authToken;\n  this.signedAuthToken = null;\n  this.authToken = null;\n  this.authState = this.UNAUTHENTICATED;\n  if (oldState !== this.UNAUTHENTICATED) {\n    var stateChangeData = {\n      oldState: oldState,\n      newState: this.authState\n    };\n    Emitter.prototype.emit.call(this, 'authStateChange', stateChangeData);\n    this.server.emit('authenticationStateChange', this, stateChangeData);\n  }\n  Emitter.prototype.emit.call(this, 'deauthenticate', oldToken);\n  this.server.emit('deauthentication', this, oldToken);\n};\n\nSCServerSocket.prototype.deauthenticate = function (callback) {\n  this.deauthenticateSelf();\n  this.emit('#removeAuthToken', null, callback);\n};\n\nSCServerSocket.prototype.kickOut = function (channel, message, callback) {\n  var self = this;\n\n  if (channel == null) {\n    Object.keys(this.channelSubscriptions).forEach(function (channelName) {\n      delete self.channelSubscriptions[channelName];\n      self.channelSubscriptionsCount--;\n      self.emit('#kickOut', {message: message, channel: channelName});\n    });\n  } else {\n    delete this.channelSubscriptions[channel];\n    this.channelSubscriptionsCount--;\n    this.emit('#kickOut', {message: message, channel: channel});\n  }\n  this.server.brokerEngine.unsubscribeSocket(this, channel, callback);\n};\n\nSCServerSocket.prototype.subscriptions = function () {\n  var subs = [];\n  for (var i in this.channelSubscriptions) {\n    if (this.channelSubscriptions.hasOwnProperty(i)) {\n      subs.push(i);\n    }\n  }\n  return subs;\n};\n\nSCServerSocket.prototype.isSubscribed = function (channel) {\n  return !!this.channelSubscriptions[channel];\n};\n\nmodule.exports = SCServerSocket;\n"]},"metadata":{},"sourceType":"script"}