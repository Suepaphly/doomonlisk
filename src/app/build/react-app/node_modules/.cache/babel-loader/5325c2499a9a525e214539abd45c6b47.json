{"ast":null,"code":"\"use strict\";\n\nvar _createForOfIteratorHelper = require(\"/home/lisk/doomonlisk/src/app/build/react-app/node_modules/@babel/runtime/helpers/createForOfIteratorHelper\");\n\nvar _toConsumableArray = require(\"/home/lisk/doomonlisk/src/app/build/react-app/node_modules/@babel/runtime/helpers/toConsumableArray\");\n\nvar _regeneratorRuntime = require(\"/home/lisk/doomonlisk/src/app/build/react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _asyncToGenerator = require(\"/home/lisk/doomonlisk/src/app/build/react-app/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nvar _objectSpread = require(\"/home/lisk/doomonlisk/src/app/build/react-app/node_modules/@babel/runtime/helpers/objectSpread2\");\n\nvar _classCallCheck = require(\"/home/lisk/doomonlisk/src/app/build/react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/home/lisk/doomonlisk/src/app/build/react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Controller = void 0;\n\nvar childProcess = require(\"child_process\");\n\nvar path = require(\"path\");\n\nvar base_plugin_1 = require(\"../plugins/base_plugin\");\n\nvar system_dirs_1 = require(\"../system_dirs\");\n\nvar bus_1 = require(\"./bus\");\n\nvar in_memory_channel_1 = require(\"./channels/in_memory_channel\");\n\nvar Controller = /*#__PURE__*/function () {\n  function Controller(options) {\n    _classCallCheck(this, Controller);\n\n    this.logger = options.logger;\n    this.appLabel = options.appLabel;\n    this.channel = options.channel;\n    this.logger.info('Initializing controller');\n    var dirs = system_dirs_1.systemDirs(this.appLabel, options.config.rootPath);\n    this.config = {\n      dataPath: dirs.dataPath,\n      dirs: _objectSpread({}, dirs),\n      socketsPath: {\n        root: \"unix://\".concat(dirs.sockets),\n        pub: \"unix://\".concat(dirs.sockets, \"/lisk_pub.sock\"),\n        sub: \"unix://\".concat(dirs.sockets, \"/lisk_sub.sock\"),\n        rpc: \"unix://\".concat(dirs.sockets, \"/lisk_rpc.sock\")\n      },\n      rpc: options.config.rpc\n    };\n    this._inMemoryPlugins = {};\n    this._childProcesses = {};\n  }\n\n  _createClass(Controller, [{\n    key: \"load\",\n    value: function () {\n      var _load = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                this.logger.info('Loading controller');\n                _context.next = 3;\n                return this._setupBus();\n\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function load() {\n        return _load.apply(this, arguments);\n      }\n\n      return load;\n    }()\n  }, {\n    key: \"loadPlugins\",\n    value: function () {\n      var _loadPlugins = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(plugins, pluginOptions) {\n        var _i, _Object$keys, alias, klass, options;\n\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (this.bus) {\n                  _context2.next = 2;\n                  break;\n                }\n\n                throw new Error('Controller bus is not initialized. Plugins can not be loaded.');\n\n              case 2:\n                _i = 0, _Object$keys = Object.keys(plugins);\n\n              case 3:\n                if (!(_i < _Object$keys.length)) {\n                  _context2.next = 17;\n                  break;\n                }\n\n                alias = _Object$keys[_i];\n                klass = plugins[alias];\n                options = pluginOptions[alias];\n\n                if (!(options.loadAsChildProcess && this.config.rpc.enable)) {\n                  _context2.next = 12;\n                  break;\n                }\n\n                _context2.next = 10;\n                return this._loadChildProcessPlugin(alias, klass, options);\n\n              case 10:\n                _context2.next = 14;\n                break;\n\n              case 12:\n                _context2.next = 14;\n                return this._loadInMemoryPlugin(alias, klass, options);\n\n              case 14:\n                _i++;\n                _context2.next = 3;\n                break;\n\n              case 17:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function loadPlugins(_x, _x2) {\n        return _loadPlugins.apply(this, arguments);\n      }\n\n      return loadPlugins;\n    }()\n  }, {\n    key: \"unloadPlugins\",\n    value: function () {\n      var _unloadPlugins = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n        var plugins,\n            pluginsToUnload,\n            hasError,\n            _iterator,\n            _step,\n            alias,\n            _args3 = arguments;\n\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                plugins = _args3.length > 0 && _args3[0] !== undefined ? _args3[0] : [];\n                pluginsToUnload = plugins.length > 0 ? plugins : [].concat(_toConsumableArray(Object.keys(this._inMemoryPlugins)), _toConsumableArray(Object.keys(this._childProcesses)));\n                hasError = false;\n                _iterator = _createForOfIteratorHelper(pluginsToUnload);\n                _context3.prev = 4;\n\n                _iterator.s();\n\n              case 6:\n                if ((_step = _iterator.n()).done) {\n                  _context3.next = 28;\n                  break;\n                }\n\n                alias = _step.value;\n                _context3.prev = 8;\n\n                if (!this._inMemoryPlugins[alias]) {\n                  _context3.next = 14;\n                  break;\n                }\n\n                _context3.next = 12;\n                return this._unloadInMemoryPlugin(alias);\n\n              case 12:\n                _context3.next = 20;\n                break;\n\n              case 14:\n                if (!this._childProcesses[alias]) {\n                  _context3.next = 19;\n                  break;\n                }\n\n                _context3.next = 17;\n                return this._unloadChildProcessPlugin(alias);\n\n              case 17:\n                _context3.next = 20;\n                break;\n\n              case 19:\n                throw new Error(\"Unknown plugin \\\"\".concat(alias, \"\\\" was asked to unload.\"));\n\n              case 20:\n                _context3.next = 26;\n                break;\n\n              case 22:\n                _context3.prev = 22;\n                _context3.t0 = _context3[\"catch\"](8);\n                this.logger.error(_context3.t0);\n                hasError = true;\n\n              case 26:\n                _context3.next = 6;\n                break;\n\n              case 28:\n                _context3.next = 33;\n                break;\n\n              case 30:\n                _context3.prev = 30;\n                _context3.t1 = _context3[\"catch\"](4);\n\n                _iterator.e(_context3.t1);\n\n              case 33:\n                _context3.prev = 33;\n\n                _iterator.f();\n\n                return _context3.finish(33);\n\n              case 36:\n                if (!hasError) {\n                  _context3.next = 38;\n                  break;\n                }\n\n                throw new Error('Unload Plugins failed');\n\n              case 38:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this, [[4, 30, 33, 36], [8, 22]]);\n      }));\n\n      function unloadPlugins() {\n        return _unloadPlugins.apply(this, arguments);\n      }\n\n      return unloadPlugins;\n    }()\n  }, {\n    key: \"cleanup\",\n    value: function () {\n      var _cleanup = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(_code, reason) {\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                this.logger.info('Controller cleanup started');\n\n                if (reason) {\n                  this.logger.debug(\"Reason: \".concat(reason));\n                }\n\n                _context4.prev = 2;\n                this.logger.debug('Plugins cleanup started');\n                _context4.next = 6;\n                return this.unloadPlugins();\n\n              case 6:\n                this.logger.debug('Plugins cleanup completed');\n                this.logger.debug('Bus cleanup started');\n                _context4.next = 10;\n                return this.bus.cleanup();\n\n              case 10:\n                this.logger.debug('Bus cleanup completed');\n                this.logger.info('Controller cleanup completed');\n                _context4.next = 17;\n                break;\n\n              case 14:\n                _context4.prev = 14;\n                _context4.t0 = _context4[\"catch\"](2);\n                this.logger.error(_context4.t0, 'Controller cleanup failed');\n\n              case 17:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this, [[2, 14]]);\n      }));\n\n      function cleanup(_x3, _x4) {\n        return _cleanup.apply(this, arguments);\n      }\n\n      return cleanup;\n    }()\n  }, {\n    key: \"_setupBus\",\n    value: function () {\n      var _setupBus2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5() {\n        var _this = this;\n\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                this.bus = new bus_1.Bus(this.logger, this.config);\n                _context5.next = 3;\n                return this.bus.setup();\n\n              case 3:\n                _context5.next = 5;\n                return this.channel.registerToBus(this.bus);\n\n              case 5:\n                this.bus.subscribe('*', function (event) {\n                  _this.logger.error(\"eventName: \".concat(event.method, \",\"), 'Monitor Bus Channel');\n                });\n\n              case 6:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n\n      function _setupBus() {\n        return _setupBus2.apply(this, arguments);\n      }\n\n      return _setupBus;\n    }()\n  }, {\n    key: \"_loadInMemoryPlugin\",\n    value: function () {\n      var _loadInMemoryPlugin2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6(alias, Klass, options) {\n        var pluginAlias, _Klass$info, name, version, plugin, channel;\n\n        return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                pluginAlias = alias || Klass.alias;\n                _Klass$info = Klass.info, name = _Klass$info.name, version = _Klass$info.version;\n                plugin = new Klass(options);\n                this.logger.info({\n                  name: name,\n                  version: version,\n                  alias: pluginAlias\n                }, 'Loading in-memory plugin');\n                channel = new in_memory_channel_1.InMemoryChannel(pluginAlias, plugin.events, plugin.actions);\n                _context6.next = 7;\n                return channel.registerToBus(this.bus);\n\n              case 7:\n                channel.publish(\"\".concat(pluginAlias, \":registeredToBus\"));\n                channel.publish(\"\".concat(pluginAlias, \":loading:started\"));\n                _context6.next = 11;\n                return plugin.init(channel);\n\n              case 11:\n                _context6.next = 13;\n                return plugin.load(channel);\n\n              case 13:\n                channel.publish(\"\".concat(pluginAlias, \":loading:finished\"));\n                this._inMemoryPlugins[pluginAlias] = {\n                  plugin: plugin,\n                  channel: channel\n                };\n                this.logger.info({\n                  name: name,\n                  version: version,\n                  alias: pluginAlias\n                }, 'Loaded in-memory plugin');\n\n              case 16:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, this);\n      }));\n\n      function _loadInMemoryPlugin(_x5, _x6, _x7) {\n        return _loadInMemoryPlugin2.apply(this, arguments);\n      }\n\n      return _loadInMemoryPlugin;\n    }()\n  }, {\n    key: \"_loadChildProcessPlugin\",\n    value: function () {\n      var _loadChildProcessPlugin2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee7(alias, Klass, options) {\n        var _this2 = this;\n\n        var pluginAlias, _Klass$info2, name, version, program, parameters, forkedProcessOptions, maxPort, minPort, child;\n\n        return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                pluginAlias = alias || Klass.alias;\n                _Klass$info2 = Klass.info, name = _Klass$info2.name, version = _Klass$info2.version;\n                this.logger.info({\n                  name: name,\n                  version: version,\n                  alias: pluginAlias\n                }, 'Loading child-process plugin');\n                program = path.resolve(__dirname, 'child_process_loader');\n                parameters = [base_plugin_1.getPluginExportPath(Klass), Klass.name];\n                forkedProcessOptions = {\n                  execArgv: undefined\n                };\n                maxPort = 20000;\n                minPort = 10000;\n\n                if (process.env.NODE_DEBUG) {\n                  forkedProcessOptions.execArgv = [\"--inspect=\".concat(Math.floor(Math.random() * (maxPort - minPort) + minPort))];\n                }\n\n                child = childProcess.fork(program, parameters, forkedProcessOptions);\n                child.send({\n                  action: 'load',\n                  config: this.config,\n                  options: options\n                });\n                this._childProcesses[pluginAlias] = child;\n                child.on('exit', function (code, signal) {\n                  if (code !== null && code !== undefined && code !== 0) {\n                    _this2.logger.error({\n                      name: name,\n                      version: version,\n                      pluginAlias: pluginAlias,\n                      code: code,\n                      signal: signal !== null && signal !== void 0 ? signal : ''\n                    }, 'Child process plugin exited');\n                  }\n                });\n                child.on('error', function (error) {\n                  _this2.logger.error(error, \"Child process for \\\"\".concat(pluginAlias, \"\\\" faced error.\"));\n                });\n                _context7.next = 16;\n                return Promise.race([new Promise(function (resolve) {\n                  _this2.channel.once(\"\".concat(pluginAlias, \":loading:finished\"), function () {\n                    _this2.logger.info({\n                      name: name,\n                      version: version,\n                      alias: pluginAlias\n                    }, 'Loaded child-process plugin');\n\n                    resolve();\n                  });\n                }), new Promise(function (_, reject) {\n                  setTimeout(function () {\n                    reject(new Error('Child process plugin loading timeout'));\n                  }, 2000);\n                })]);\n\n              case 16:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7, this);\n      }));\n\n      function _loadChildProcessPlugin(_x8, _x9, _x10) {\n        return _loadChildProcessPlugin2.apply(this, arguments);\n      }\n\n      return _loadChildProcessPlugin;\n    }()\n  }, {\n    key: \"_unloadInMemoryPlugin\",\n    value: function () {\n      var _unloadInMemoryPlugin2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee8(alias) {\n        return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                this._inMemoryPlugins[alias].channel.publish(\"\".concat(alias, \":unloading:started\"));\n\n                _context8.prev = 1;\n                _context8.next = 4;\n                return this._inMemoryPlugins[alias].plugin.unload();\n\n              case 4:\n                this._inMemoryPlugins[alias].channel.publish(\"\".concat(alias, \":unloading:finished\"));\n\n                _context8.next = 10;\n                break;\n\n              case 7:\n                _context8.prev = 7;\n                _context8.t0 = _context8[\"catch\"](1);\n\n                this._inMemoryPlugins[alias].channel.publish(\"\".concat(alias, \":unloading:error\"), _context8.t0);\n\n              case 10:\n                _context8.prev = 10;\n                delete this._inMemoryPlugins[alias];\n                return _context8.finish(10);\n\n              case 13:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, _callee8, this, [[1, 7, 10, 13]]);\n      }));\n\n      function _unloadInMemoryPlugin(_x11) {\n        return _unloadInMemoryPlugin2.apply(this, arguments);\n      }\n\n      return _unloadInMemoryPlugin;\n    }()\n  }, {\n    key: \"_unloadChildProcessPlugin\",\n    value: function () {\n      var _unloadChildProcessPlugin2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee9(alias) {\n        var _this3 = this;\n\n        return _regeneratorRuntime.wrap(function _callee9$(_context9) {\n          while (1) {\n            switch (_context9.prev = _context9.next) {\n              case 0:\n                if (this._childProcesses[alias].connected) {\n                  _context9.next = 4;\n                  break;\n                }\n\n                this._childProcesses[alias].kill('SIGTERM');\n\n                delete this._childProcesses[alias];\n                throw new Error('Child process is not connected any more.');\n\n              case 4:\n                this._childProcesses[alias].send({\n                  action: 'unload'\n                });\n\n                _context9.next = 7;\n                return Promise.race([new Promise(function (resolve) {\n                  _this3.channel.once(\"\".concat(alias, \":unloading:finished\"), function () {\n                    _this3.logger.info(\"Child process plugin \\\"\".concat(alias, \"\\\" unloaded\"));\n\n                    delete _this3._childProcesses[alias];\n                    resolve();\n                  });\n                }), new Promise(function (_, reject) {\n                  _this3.channel.once(\"\".concat(alias, \":unloading:error\"), function (data) {\n                    _this3.logger.info(\"Child process plugin \\\"\".concat(alias, \"\\\" unloaded with error\"));\n\n                    _this3.logger.error(data !== null && data !== void 0 ? data : {}, 'Unloading plugin error.');\n\n                    delete _this3._childProcesses[alias];\n                    reject(data);\n                  });\n                }), new Promise(function (_, reject) {\n                  setTimeout(function () {\n                    _this3._childProcesses[alias].kill('SIGTERM');\n\n                    delete _this3._childProcesses[alias];\n                    reject(new Error('Child process plugin unload timeout'));\n                  }, 2000);\n                })]);\n\n              case 7:\n              case \"end\":\n                return _context9.stop();\n            }\n          }\n        }, _callee9, this);\n      }));\n\n      function _unloadChildProcessPlugin(_x12) {\n        return _unloadChildProcessPlugin2.apply(this, arguments);\n      }\n\n      return _unloadChildProcessPlugin;\n    }()\n  }]);\n\n  return Controller;\n}();\n\nexports.Controller = Controller;","map":{"version":3,"sources":["../../src/controller/controller.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Controller = void 0;\nconst childProcess = require(\"child_process\");\nconst path = require(\"path\");\nconst base_plugin_1 = require(\"../plugins/base_plugin\");\nconst system_dirs_1 = require(\"../system_dirs\");\nconst bus_1 = require(\"./bus\");\nconst in_memory_channel_1 = require(\"./channels/in_memory_channel\");\nclass Controller {\n    constructor(options) {\n        this.logger = options.logger;\n        this.appLabel = options.appLabel;\n        this.channel = options.channel;\n        this.logger.info('Initializing controller');\n        const dirs = system_dirs_1.systemDirs(this.appLabel, options.config.rootPath);\n        this.config = {\n            dataPath: dirs.dataPath,\n            dirs: {\n                ...dirs,\n            },\n            socketsPath: {\n                root: `unix://${dirs.sockets}`,\n                pub: `unix://${dirs.sockets}/lisk_pub.sock`,\n                sub: `unix://${dirs.sockets}/lisk_sub.sock`,\n                rpc: `unix://${dirs.sockets}/lisk_rpc.sock`,\n            },\n            rpc: options.config.rpc,\n        };\n        this._inMemoryPlugins = {};\n        this._childProcesses = {};\n    }\n    async load() {\n        this.logger.info('Loading controller');\n        await this._setupBus();\n    }\n    async loadPlugins(plugins, pluginOptions) {\n        if (!this.bus) {\n            throw new Error('Controller bus is not initialized. Plugins can not be loaded.');\n        }\n        for (const alias of Object.keys(plugins)) {\n            const klass = plugins[alias];\n            const options = pluginOptions[alias];\n            if (options.loadAsChildProcess && this.config.rpc.enable) {\n                await this._loadChildProcessPlugin(alias, klass, options);\n            }\n            else {\n                await this._loadInMemoryPlugin(alias, klass, options);\n            }\n        }\n    }\n    async unloadPlugins(plugins = []) {\n        const pluginsToUnload = plugins.length > 0\n            ? plugins\n            : [...Object.keys(this._inMemoryPlugins), ...Object.keys(this._childProcesses)];\n        let hasError = false;\n        for (const alias of pluginsToUnload) {\n            try {\n                if (this._inMemoryPlugins[alias]) {\n                    await this._unloadInMemoryPlugin(alias);\n                }\n                else if (this._childProcesses[alias]) {\n                    await this._unloadChildProcessPlugin(alias);\n                }\n                else {\n                    throw new Error(`Unknown plugin \"${alias}\" was asked to unload.`);\n                }\n            }\n            catch (error) {\n                this.logger.error(error);\n                hasError = true;\n            }\n        }\n        if (hasError) {\n            throw new Error('Unload Plugins failed');\n        }\n    }\n    async cleanup(_code, reason) {\n        this.logger.info('Controller cleanup started');\n        if (reason) {\n            this.logger.debug(`Reason: ${reason}`);\n        }\n        try {\n            this.logger.debug('Plugins cleanup started');\n            await this.unloadPlugins();\n            this.logger.debug('Plugins cleanup completed');\n            this.logger.debug('Bus cleanup started');\n            await this.bus.cleanup();\n            this.logger.debug('Bus cleanup completed');\n            this.logger.info('Controller cleanup completed');\n        }\n        catch (err) {\n            this.logger.error(err, 'Controller cleanup failed');\n        }\n    }\n    async _setupBus() {\n        this.bus = new bus_1.Bus(this.logger, this.config);\n        await this.bus.setup();\n        await this.channel.registerToBus(this.bus);\n        this.bus.subscribe('*', (event) => {\n            this.logger.error(`eventName: ${event.method},`, 'Monitor Bus Channel');\n        });\n    }\n    async _loadInMemoryPlugin(alias, Klass, options) {\n        const pluginAlias = alias || Klass.alias;\n        const { name, version } = Klass.info;\n        const plugin = new Klass(options);\n        this.logger.info({ name, version, alias: pluginAlias }, 'Loading in-memory plugin');\n        const channel = new in_memory_channel_1.InMemoryChannel(pluginAlias, plugin.events, plugin.actions);\n        await channel.registerToBus(this.bus);\n        channel.publish(`${pluginAlias}:registeredToBus`);\n        channel.publish(`${pluginAlias}:loading:started`);\n        await plugin.init(channel);\n        await plugin.load(channel);\n        channel.publish(`${pluginAlias}:loading:finished`);\n        this._inMemoryPlugins[pluginAlias] = { plugin, channel };\n        this.logger.info({ name, version, alias: pluginAlias }, 'Loaded in-memory plugin');\n    }\n    async _loadChildProcessPlugin(alias, Klass, options) {\n        const pluginAlias = alias || Klass.alias;\n        const { name, version } = Klass.info;\n        this.logger.info({ name, version, alias: pluginAlias }, 'Loading child-process plugin');\n        const program = path.resolve(__dirname, 'child_process_loader');\n        const parameters = [base_plugin_1.getPluginExportPath(Klass), Klass.name];\n        const forkedProcessOptions = {\n            execArgv: undefined,\n        };\n        const maxPort = 20000;\n        const minPort = 10000;\n        if (process.env.NODE_DEBUG) {\n            forkedProcessOptions.execArgv = [\n                `--inspect=${Math.floor(Math.random() * (maxPort - minPort) + minPort)}`,\n            ];\n        }\n        const child = childProcess.fork(program, parameters, forkedProcessOptions);\n        child.send({\n            action: 'load',\n            config: this.config,\n            options,\n        });\n        this._childProcesses[pluginAlias] = child;\n        child.on('exit', (code, signal) => {\n            if (code !== null && code !== undefined && code !== 0) {\n                this.logger.error({ name, version, pluginAlias, code, signal: signal !== null && signal !== void 0 ? signal : '' }, 'Child process plugin exited');\n            }\n        });\n        child.on('error', error => {\n            this.logger.error(error, `Child process for \"${pluginAlias}\" faced error.`);\n        });\n        await Promise.race([\n            new Promise(resolve => {\n                this.channel.once(`${pluginAlias}:loading:finished`, () => {\n                    this.logger.info({ name, version, alias: pluginAlias }, 'Loaded child-process plugin');\n                    resolve();\n                });\n            }),\n            new Promise((_, reject) => {\n                setTimeout(() => {\n                    reject(new Error('Child process plugin loading timeout'));\n                }, 2000);\n            }),\n        ]);\n    }\n    async _unloadInMemoryPlugin(alias) {\n        this._inMemoryPlugins[alias].channel.publish(`${alias}:unloading:started`);\n        try {\n            await this._inMemoryPlugins[alias].plugin.unload();\n            this._inMemoryPlugins[alias].channel.publish(`${alias}:unloading:finished`);\n        }\n        catch (error) {\n            this._inMemoryPlugins[alias].channel.publish(`${alias}:unloading:error`, error);\n        }\n        finally {\n            delete this._inMemoryPlugins[alias];\n        }\n    }\n    async _unloadChildProcessPlugin(alias) {\n        if (!this._childProcesses[alias].connected) {\n            this._childProcesses[alias].kill('SIGTERM');\n            delete this._childProcesses[alias];\n            throw new Error('Child process is not connected any more.');\n        }\n        this._childProcesses[alias].send({\n            action: 'unload',\n        });\n        await Promise.race([\n            new Promise(resolve => {\n                this.channel.once(`${alias}:unloading:finished`, () => {\n                    this.logger.info(`Child process plugin \"${alias}\" unloaded`);\n                    delete this._childProcesses[alias];\n                    resolve();\n                });\n            }),\n            new Promise((_, reject) => {\n                this.channel.once(`${alias}:unloading:error`, data => {\n                    this.logger.info(`Child process plugin \"${alias}\" unloaded with error`);\n                    this.logger.error(data !== null && data !== void 0 ? data : {}, 'Unloading plugin error.');\n                    delete this._childProcesses[alias];\n                    reject(data);\n                });\n            }),\n            new Promise((_, reject) => {\n                setTimeout(() => {\n                    this._childProcesses[alias].kill('SIGTERM');\n                    delete this._childProcesses[alias];\n                    reject(new Error('Child process plugin unload timeout'));\n                }, 2000);\n            }),\n        ]);\n    }\n}\nexports.Controller = Controller;\n//# sourceMappingURL=controller.js.map"]},"metadata":{},"sourceType":"script"}