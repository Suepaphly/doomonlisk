{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.oddInteger = exports.ipOrFQDN = exports.ip = exports.encryptedPassphrase = exports.path = exports.networkVersion = exports.version = exports.camelCase = exports.int32 = exports.uint32 = exports.uint64 = exports.int64 = exports.bytes = exports.hex = void 0;\n\nvar validation_1 = require(\"./validation\");\n\nexports.hex = validation_1.isHexString;\nexports.bytes = validation_1.isBytes;\n\nvar int64 = function int64(data) {\n  return validation_1.isNumberString(data) && validation_1.isSInt64(BigInt(data));\n};\n\nexports.int64 = int64;\n\nvar uint64 = function uint64(data) {\n  return validation_1.isNumberString(data) && validation_1.isUInt64(BigInt(data));\n};\n\nexports.uint64 = uint64;\n\nvar uint32 = function uint32(data) {\n  return validation_1.isNumberString(data) && validation_1.isUInt32(Number(data));\n};\n\nexports.uint32 = uint32;\n\nvar int32 = function int32(data) {\n  return validation_1.isNumberString(data) && validation_1.isSInt32(Number(data));\n};\n\nexports.int32 = int32;\nvar camelCaseRegex = /^[a-z]+((\\d)|([A-Z0-9][a-zA-Z0-9]+))*([a-z0-9A-Z])?$/;\n\nvar camelCase = function camelCase(data) {\n  return camelCaseRegex.exec(data) !== null;\n};\n\nexports.camelCase = camelCase;\nexports.version = validation_1.isSemVer;\n\nvar networkVersion = function networkVersion(data) {\n  return /^(\\d|[1-9]\\d{1,2})\\.(\\d|[1-9]\\d{1,2})$/.test(data);\n};\n\nexports.networkVersion = networkVersion;\n\nvar path = function path(data) {\n  return /^(.?)(\\/[^/]+)+(\\/?)$/.test(data);\n};\n\nexports.path = path;\nexports.encryptedPassphrase = validation_1.isEncryptedPassphrase;\nexports.ip = validation_1.isIP;\n\nvar ipOrFQDN = function ipOrFQDN(data) {\n  var hostnameRegex = /^[a-zA-Z](([-0-9a-zA-Z]+)?[0-9a-zA-Z])?(\\.[a-zA-Z](([-0-9a-zA-Z]+)?[0-9a-zA-Z])?)*$/;\n  return validation_1.isIPV4(data) || hostnameRegex.test(data);\n};\n\nexports.ipOrFQDN = ipOrFQDN;\n\nvar oddInteger = function oddInteger(data) {\n  if (typeof data === 'number') {\n    return Number.isInteger(data) && data % 2 === 1;\n  }\n\n  return /^\\d*[13579]$/.test(data);\n};\n\nexports.oddInteger = oddInteger;","map":{"version":3,"sources":["../src/formats.ts"],"names":[],"mappings":";;;;;;;AAcA,IAAA,YAAA,GAAA,OAAA,CAAA,cAAA,CAAA;;AAca,OAAA,CAAA,GAAA,GAAM,YAAA,CAAA,WAAN;AACA,OAAA,CAAA,KAAA,GAAQ,YAAA,CAAA,OAAR;;AAEN,IAAM,KAAK,GAAG,SAAR,KAAQ,CAAC,IAAD;AAAA,SAA2B,YAAA,CAAA,cAAA,CAAe,IAAf,KAAwB,YAAA,CAAA,QAAA,CAAS,MAAM,CAAC,IAAD,CAAf,CAAnD;AAAA,CAAd;;AAAM,OAAA,CAAA,KAAA,GAAK,KAAL;;AAEN,IAAM,MAAM,GAAG,SAAT,MAAS,CAAC,IAAD;AAAA,SAA2B,YAAA,CAAA,cAAA,CAAe,IAAf,KAAwB,YAAA,CAAA,QAAA,CAAS,MAAM,CAAC,IAAD,CAAf,CAAnD;AAAA,CAAf;;AAAM,OAAA,CAAA,MAAA,GAAM,MAAN;;AAEN,IAAM,MAAM,GAAG,SAAT,MAAS,CAAC,IAAD;AAAA,SAA2B,YAAA,CAAA,cAAA,CAAe,IAAf,KAAwB,YAAA,CAAA,QAAA,CAAS,MAAM,CAAC,IAAD,CAAf,CAAnD;AAAA,CAAf;;AAAM,OAAA,CAAA,MAAA,GAAM,MAAN;;AAEN,IAAM,KAAK,GAAG,SAAR,KAAQ,CAAC,IAAD;AAAA,SAA2B,YAAA,CAAA,cAAA,CAAe,IAAf,KAAwB,YAAA,CAAA,QAAA,CAAS,MAAM,CAAC,IAAD,CAAf,CAAnD;AAAA,CAAd;;AAAM,OAAA,CAAA,KAAA,GAAK,KAAL;AAEb,IAAM,cAAc,GAAG,sDAAvB;;AAEO,IAAM,SAAS,GAAG,SAAZ,SAAY,CAAC,IAAD;AAAA,SAA2B,cAAc,CAAC,IAAf,CAAoB,IAApB,MAA8B,IAAzD;AAAA,CAAlB;;AAAM,OAAA,CAAA,SAAA,GAAS,SAAT;AAEA,OAAA,CAAA,OAAA,GAAU,YAAA,CAAA,QAAV;;AAEN,IAAM,cAAc,GAAG,SAAjB,cAAiB,CAAC,IAAD;AAAA,SAC7B,yCAAyC,IAAzC,CAA8C,IAA9C,CAD6B;AAAA,CAAvB;;AAAM,OAAA,CAAA,cAAA,GAAc,cAAd;;AAGN,IAAM,IAAI,GAAG,SAAP,IAAO,CAAC,IAAD;AAAA,SAA2B,wBAAwB,IAAxB,CAA6B,IAA7B,CAA3B;AAAA,CAAb;;AAAM,OAAA,CAAA,IAAA,GAAI,IAAJ;AAEA,OAAA,CAAA,mBAAA,GAAsB,YAAA,CAAA,qBAAtB;AAEA,OAAA,CAAA,EAAA,GAAK,YAAA,CAAA,IAAL;;AAEN,IAAM,QAAQ,GAAG,SAAX,QAAW,CAAC,IAAD,EAA0B;AACjD,MAAM,aAAa,GAAG,qFAAtB;AACA,SAAO,YAAA,CAAA,MAAA,CAAO,IAAP,KAAgB,aAAa,CAAC,IAAd,CAAmB,IAAnB,CAAvB;AACA,CAHM;;AAAM,OAAA,CAAA,QAAA,GAAQ,QAAR;;AAKN,IAAM,UAAU,GAAG,SAAb,UAAa,CAAC,IAAD,EAAmC;AAC5D,MAAI,OAAO,IAAP,KAAgB,QAApB,EAA8B;AAC7B,WAAO,MAAM,CAAC,SAAP,CAAiB,IAAjB,KAA0B,IAAI,GAAG,CAAP,KAAa,CAA9C;AACA;;AACD,SAAO,eAAe,IAAf,CAAoB,IAApB,CAAP;AACA,CALM;;AAAM,OAAA,CAAA,UAAA,GAAU,UAAV","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.oddInteger = exports.ipOrFQDN = exports.ip = exports.encryptedPassphrase = exports.path = exports.networkVersion = exports.version = exports.camelCase = exports.int32 = exports.uint32 = exports.uint64 = exports.int64 = exports.bytes = exports.hex = void 0;\nconst validation_1 = require(\"./validation\");\nexports.hex = validation_1.isHexString;\nexports.bytes = validation_1.isBytes;\nconst int64 = (data) => validation_1.isNumberString(data) && validation_1.isSInt64(BigInt(data));\nexports.int64 = int64;\nconst uint64 = (data) => validation_1.isNumberString(data) && validation_1.isUInt64(BigInt(data));\nexports.uint64 = uint64;\nconst uint32 = (data) => validation_1.isNumberString(data) && validation_1.isUInt32(Number(data));\nexports.uint32 = uint32;\nconst int32 = (data) => validation_1.isNumberString(data) && validation_1.isSInt32(Number(data));\nexports.int32 = int32;\nconst camelCaseRegex = /^[a-z]+((\\d)|([A-Z0-9][a-zA-Z0-9]+))*([a-z0-9A-Z])?$/;\nconst camelCase = (data) => camelCaseRegex.exec(data) !== null;\nexports.camelCase = camelCase;\nexports.version = validation_1.isSemVer;\nconst networkVersion = (data) => /^(\\d|[1-9]\\d{1,2})\\.(\\d|[1-9]\\d{1,2})$/.test(data);\nexports.networkVersion = networkVersion;\nconst path = (data) => /^(.?)(\\/[^/]+)+(\\/?)$/.test(data);\nexports.path = path;\nexports.encryptedPassphrase = validation_1.isEncryptedPassphrase;\nexports.ip = validation_1.isIP;\nconst ipOrFQDN = (data) => {\n    const hostnameRegex = /^[a-zA-Z](([-0-9a-zA-Z]+)?[0-9a-zA-Z])?(\\.[a-zA-Z](([-0-9a-zA-Z]+)?[0-9a-zA-Z])?)*$/;\n    return validation_1.isIPV4(data) || hostnameRegex.test(data);\n};\nexports.ipOrFQDN = ipOrFQDN;\nconst oddInteger = (data) => {\n    if (typeof data === 'number') {\n        return Number.isInteger(data) && data % 2 === 1;\n    }\n    return /^\\d*[13579]$/.test(data);\n};\nexports.oddInteger = oddInteger;\n//# sourceMappingURL=formats.js.map"]},"metadata":{},"sourceType":"script"}