{"ast":null,"code":"\"use strict\";\n\nvar _createForOfIteratorHelper = require(\"/home/lisk/doomonlisk/src/app/build/react-app/node_modules/@babel/runtime/helpers/createForOfIteratorHelper\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.whiteListMiddleware = void 0;\n\nvar ip = require(\"ip\");\n\nvar errors_1 = require(\"./errors\");\n\nvar defualtOption = {\n  whiteList: []\n};\n\nvar checkIpInList = function checkIpInList(list, addr) {\n  var entry;\n\n  var _iterator = _createForOfIteratorHelper(list),\n      _step;\n\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var value = _step.value;\n      entry = value;\n\n      if (ip.isV4Format(entry)) {\n        entry += '/32';\n      }\n\n      try {\n        entry = ip.cidrSubnet(entry);\n\n        if (entry.contains(addr)) {\n          return true;\n        }\n      } catch (err) {\n        console.error('CheckIpInList:', err.toString());\n      }\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n\n  return false;\n};\n\nvar whiteListMiddleware = function whiteListMiddleware() {\n  var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : defualtOption,\n      whiteList = _ref.whiteList;\n\n  return function (req, _res, next) {\n    if (whiteList.length === 0 || checkIpInList(whiteList, req.ip)) {\n      next();\n      return;\n    }\n\n    next(new errors_1.ErrorWithStatus('Access Denied', 401));\n  };\n};\n\nexports.whiteListMiddleware = whiteListMiddleware;","map":{"version":3,"sources":["../../src/middlewares/whitelist.ts"],"names":[],"mappings":";;;;;;;;;AAaA,IAAA,EAAA,GAAA,OAAA,CAAA,IAAA,CAAA;;AAEA,IAAA,QAAA,GAAA,OAAA,CAAA,UAAA,CAAA;;AAEA,IAAM,aAAa,GAAG;AAAE,EAAA,SAAS,EAAE;AAAb,CAAtB;;AAEA,IAAM,aAAa,GAAG,SAAhB,aAAgB,CAAC,IAAD,EAA8B,IAA9B,EAAuD;AAC5E,MAAI,KAAJ;;AAD4E,6CAExD,IAFwD;AAAA;;AAAA;AAE5E,wDAA0B;AAAA,UAAf,KAAe;AACzB,MAAA,KAAK,GAAG,KAAR;;AACA,UAAI,EAAE,CAAC,UAAH,CAAc,KAAd,CAAJ,EAA0B;AAEzB,QAAA,KAAK,IAAI,KAAT;AACA;;AACD,UAAI;AACH,QAAA,KAAK,GAAG,EAAE,CAAC,UAAH,CAAc,KAAd,CAAR;;AACA,YAAI,KAAK,CAAC,QAAN,CAAe,IAAf,CAAJ,EAA0B;AACzB,iBAAO,IAAP;AACA;AACD,OALD,CAKE,OAAO,GAAP,EAAY;AAEb,QAAA,OAAO,CAAC,KAAR,CAAc,gBAAd,EAAgC,GAAG,CAAC,QAAJ,EAAhC;AACA;AACD;AAjB2E;AAAA;AAAA;AAAA;AAAA;;AAkB5E,SAAO,KAAP;AACA,CAnBD;;AAqBO,IAAM,mBAAmB,GAAG,SAAtB,mBAAsB;AAAA,iFAEO,aAFP;AAAA,MAClC,SADkC,QAClC,SADkC;;AAAA,SAEyB,UAC3D,GAD2D,EAE3D,IAF2D,EAG3D,IAH2D,EAIlD;AACT,QAAI,SAAS,CAAC,MAAV,KAAqB,CAArB,IAA0B,aAAa,CAAC,SAAD,EAAY,GAAG,CAAC,EAAhB,CAA3C,EAAgE;AAC/D,MAAA,IAAI;AACJ;AACA;;AAED,IAAA,IAAI,CAAC,IAAI,QAAA,CAAA,eAAJ,CAAoB,eAApB,EAAqC,GAArC,CAAD,CAAJ;AACA,GAbkC;AAAA,CAA5B;;AAAM,OAAA,CAAA,mBAAA,GAAmB,mBAAnB","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.whiteListMiddleware = void 0;\nconst ip = require(\"ip\");\nconst errors_1 = require(\"./errors\");\nconst defualtOption = { whiteList: [] };\nconst checkIpInList = (list, addr) => {\n    let entry;\n    for (const value of list) {\n        entry = value;\n        if (ip.isV4Format(entry)) {\n            entry += '/32';\n        }\n        try {\n            entry = ip.cidrSubnet(entry);\n            if (entry.contains(addr)) {\n                return true;\n            }\n        }\n        catch (err) {\n            console.error('CheckIpInList:', err.toString());\n        }\n    }\n    return false;\n};\nconst whiteListMiddleware = ({ whiteList, } = defualtOption) => (req, _res, next) => {\n    if (whiteList.length === 0 || checkIpInList(whiteList, req.ip)) {\n        next();\n        return;\n    }\n    next(new errors_1.ErrorWithStatus('Access Denied', 401));\n};\nexports.whiteListMiddleware = whiteListMiddleware;\n//# sourceMappingURL=whitelist.js.map"]},"metadata":{},"sourceType":"script"}