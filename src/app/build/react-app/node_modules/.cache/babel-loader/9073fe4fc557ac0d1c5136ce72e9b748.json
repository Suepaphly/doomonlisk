{"ast":null,"code":"var fs = require('fs'),\n    path = require('path');\n\nmodule.exports = ncp;\nncp.ncp = ncp;\n\nfunction ncp(source, dest, options, callback) {\n  var cback = callback;\n\n  if (!callback) {\n    cback = options;\n    options = {};\n  }\n\n  var basePath = process.cwd(),\n      currentPath = path.resolve(basePath, source),\n      targetPath = path.resolve(basePath, dest),\n      filter = options.filter,\n      rename = options.rename,\n      transform = options.transform,\n      clobber = options.clobber !== false,\n      modified = options.modified,\n      dereference = options.dereference,\n      errs = null,\n      started = 0,\n      finished = 0,\n      running = 0,\n      limit = options.limit || ncp.limit || 16;\n  limit = limit < 1 ? 1 : limit > 512 ? 512 : limit;\n  startCopy(currentPath);\n\n  function startCopy(source) {\n    started++;\n\n    if (filter) {\n      if (filter instanceof RegExp) {\n        if (!filter.test(source)) {\n          return cb(true);\n        }\n      } else if (typeof filter === 'function') {\n        if (!filter(source)) {\n          return cb(true);\n        }\n      }\n    }\n\n    return getStats(source);\n  }\n\n  function getStats(source) {\n    var stat = dereference ? fs.stat : fs.lstat;\n\n    if (running >= limit) {\n      return setImmediate(function () {\n        getStats(source);\n      });\n    }\n\n    running++;\n    stat(source, function (err, stats) {\n      var item = {};\n\n      if (err) {\n        return onError(err);\n      } // We need to get the mode from the stats object and preserve it.\n\n\n      item.name = source;\n      item.mode = stats.mode;\n      item.mtime = stats.mtime; //modified time\n\n      item.atime = stats.atime; //access time\n\n      if (stats.isDirectory()) {\n        return onDir(item);\n      } else if (stats.isFile()) {\n        return onFile(item);\n      } else if (stats.isSymbolicLink()) {\n        // Symlinks don't really need to know about the mode.\n        return onLink(source);\n      }\n    });\n  }\n\n  function onFile(file) {\n    var target = file.name.replace(currentPath, targetPath);\n\n    if (rename) {\n      target = rename(target);\n    }\n\n    isWritable(target, function (writable) {\n      if (writable) {\n        return copyFile(file, target);\n      }\n\n      if (clobber) {\n        rmFile(target, function () {\n          copyFile(file, target);\n        });\n      }\n\n      if (modified) {\n        var stat = dereference ? fs.stat : fs.lstat;\n        stat(target, function (err, stats) {\n          //if souce modified time greater to target modified time copy file\n          if (file.mtime.getTime() > stats.mtime.getTime()) copyFile(file, target);else return cb();\n        });\n      } else {\n        return cb();\n      }\n    });\n  }\n\n  function copyFile(file, target) {\n    var readStream = fs.createReadStream(file.name),\n        writeStream = fs.createWriteStream(target, {\n      mode: file.mode\n    });\n    readStream.on('error', onError);\n    writeStream.on('error', onError);\n\n    if (transform) {\n      transform(readStream, writeStream, file);\n    } else {\n      writeStream.on('open', function () {\n        readStream.pipe(writeStream);\n      });\n    }\n\n    writeStream.once('finish', function () {\n      if (modified) {\n        //target file modified date sync.\n        fs.utimesSync(target, file.atime, file.mtime);\n        cb();\n      } else cb();\n    });\n  }\n\n  function rmFile(file, done) {\n    fs.unlink(file, function (err) {\n      if (err) {\n        return onError(err);\n      }\n\n      return done();\n    });\n  }\n\n  function onDir(dir) {\n    var target = dir.name.replace(currentPath, targetPath);\n    isWritable(target, function (writable) {\n      if (writable) {\n        return mkDir(dir, target);\n      }\n\n      copyDir(dir.name);\n    });\n  }\n\n  function mkDir(dir, target) {\n    fs.mkdir(target, dir.mode, function (err) {\n      if (err) {\n        return onError(err);\n      }\n\n      copyDir(dir.name);\n    });\n  }\n\n  function copyDir(dir) {\n    fs.readdir(dir, function (err, items) {\n      if (err) {\n        return onError(err);\n      }\n\n      items.forEach(function (item) {\n        startCopy(path.join(dir, item));\n      });\n      return cb();\n    });\n  }\n\n  function onLink(link) {\n    var target = link.replace(currentPath, targetPath);\n    fs.readlink(link, function (err, resolvedPath) {\n      if (err) {\n        return onError(err);\n      }\n\n      checkLink(resolvedPath, target);\n    });\n  }\n\n  function checkLink(resolvedPath, target) {\n    if (dereference) {\n      resolvedPath = path.resolve(basePath, resolvedPath);\n    }\n\n    isWritable(target, function (writable) {\n      if (writable) {\n        return makeLink(resolvedPath, target);\n      }\n\n      fs.readlink(target, function (err, targetDest) {\n        if (err) {\n          return onError(err);\n        }\n\n        if (dereference) {\n          targetDest = path.resolve(basePath, targetDest);\n        }\n\n        if (targetDest === resolvedPath) {\n          return cb();\n        }\n\n        return rmFile(target, function () {\n          makeLink(resolvedPath, target);\n        });\n      });\n    });\n  }\n\n  function makeLink(linkPath, target) {\n    fs.symlink(linkPath, target, function (err) {\n      if (err) {\n        return onError(err);\n      }\n\n      return cb();\n    });\n  }\n\n  function isWritable(path, done) {\n    fs.lstat(path, function (err) {\n      if (err) {\n        if (err.code === 'ENOENT') return done(true);\n        return done(false);\n      }\n\n      return done(false);\n    });\n  }\n\n  function onError(err) {\n    if (options.stopOnError) {\n      return cback(err);\n    } else if (!errs && options.errs) {\n      errs = fs.createWriteStream(options.errs);\n    } else if (!errs) {\n      errs = [];\n    }\n\n    if (typeof errs.write === 'undefined') {\n      errs.push(err);\n    } else {\n      errs.write(err.stack + '\\n\\n');\n    }\n\n    return cb();\n  }\n\n  function cb(skipped) {\n    if (!skipped) running--;\n    finished++;\n\n    if (started === finished && running === 0) {\n      if (cback !== undefined) {\n        return errs ? cback(errs) : cback(null);\n      }\n    }\n  }\n}","map":{"version":3,"sources":["/home/lisk/doomonlisk/node_modules/ncp/lib/ncp.js"],"names":["fs","require","path","module","exports","ncp","source","dest","options","callback","cback","basePath","process","cwd","currentPath","resolve","targetPath","filter","rename","transform","clobber","modified","dereference","errs","started","finished","running","limit","startCopy","RegExp","test","cb","getStats","stat","lstat","setImmediate","err","stats","item","onError","name","mode","mtime","atime","isDirectory","onDir","isFile","onFile","isSymbolicLink","onLink","file","target","replace","isWritable","writable","copyFile","rmFile","getTime","readStream","createReadStream","writeStream","createWriteStream","on","pipe","once","utimesSync","done","unlink","dir","mkDir","copyDir","mkdir","readdir","items","forEach","join","link","readlink","resolvedPath","checkLink","makeLink","targetDest","linkPath","symlink","code","stopOnError","write","push","stack","skipped","undefined"],"mappings":"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","sourcesContent":["var fs = require('fs'),\n    path = require('path');\n\nmodule.exports = ncp;\nncp.ncp = ncp;\n\nfunction ncp (source, dest, options, callback) {\n  var cback = callback;\n\n  if (!callback) {\n    cback = options;\n    options = {};\n  }\n\n  var basePath = process.cwd(),\n      currentPath = path.resolve(basePath, source),\n      targetPath = path.resolve(basePath, dest),\n      filter = options.filter,\n      rename = options.rename,\n      transform = options.transform,\n      clobber = options.clobber !== false,\n      modified = options.modified,\n      dereference = options.dereference,\n      errs = null,\n      started = 0,\n      finished = 0,\n      running = 0,\n      limit = options.limit || ncp.limit || 16;\n\n  limit = (limit < 1) ? 1 : (limit > 512) ? 512 : limit;\n\n  startCopy(currentPath);\n  \n  function startCopy(source) {\n    started++;\n    if (filter) {\n      if (filter instanceof RegExp) {\n        if (!filter.test(source)) {\n          return cb(true);\n        }\n      }\n      else if (typeof filter === 'function') {\n        if (!filter(source)) {\n          return cb(true);\n        }\n      }\n    }\n    return getStats(source);\n  }\n\n  function getStats(source) {\n    var stat = dereference ? fs.stat : fs.lstat;\n    if (running >= limit) {\n      return setImmediate(function () {\n        getStats(source);\n      });\n    }\n    running++;\n    stat(source, function (err, stats) {\n      var item = {};\n      if (err) {\n        return onError(err);\n      }\n\n      // We need to get the mode from the stats object and preserve it.\n      item.name = source;\n      item.mode = stats.mode;\n      item.mtime = stats.mtime; //modified time\n      item.atime = stats.atime; //access time\n\n      if (stats.isDirectory()) {\n        return onDir(item);\n      }\n      else if (stats.isFile()) {\n        return onFile(item);\n      }\n      else if (stats.isSymbolicLink()) {\n        // Symlinks don't really need to know about the mode.\n        return onLink(source);\n      }\n    });\n  }\n\n  function onFile(file) {\n    var target = file.name.replace(currentPath, targetPath);\n    if(rename) {\n      target =  rename(target);\n    }\n    isWritable(target, function (writable) {\n      if (writable) {\n        return copyFile(file, target);\n      }\n      if(clobber) {\n        rmFile(target, function () {\n          copyFile(file, target);\n        });\n      }\n      if (modified) {\n        var stat = dereference ? fs.stat : fs.lstat;\n        stat(target, function(err, stats) {\n            //if souce modified time greater to target modified time copy file\n            if (file.mtime.getTime()>stats.mtime.getTime())\n                copyFile(file, target);\n            else return cb();\n        });\n      }\n      else {\n        return cb();\n      }\n    });\n  }\n\n  function copyFile(file, target) {\n    var readStream = fs.createReadStream(file.name),\n        writeStream = fs.createWriteStream(target, { mode: file.mode });\n    \n    readStream.on('error', onError);\n    writeStream.on('error', onError);\n    \n    if(transform) {\n      transform(readStream, writeStream, file);\n    } else {\n      writeStream.on('open', function() {\n        readStream.pipe(writeStream);\n      });\n    }\n    writeStream.once('finish', function() {\n        if (modified) {\n            //target file modified date sync.\n            fs.utimesSync(target, file.atime, file.mtime);\n            cb();\n        }\n        else cb();\n    });\n  }\n\n  function rmFile(file, done) {\n    fs.unlink(file, function (err) {\n      if (err) {\n        return onError(err);\n      }\n      return done();\n    });\n  }\n\n  function onDir(dir) {\n    var target = dir.name.replace(currentPath, targetPath);\n    isWritable(target, function (writable) {\n      if (writable) {\n        return mkDir(dir, target);\n      }\n      copyDir(dir.name);\n    });\n  }\n\n  function mkDir(dir, target) {\n    fs.mkdir(target, dir.mode, function (err) {\n      if (err) {\n        return onError(err);\n      }\n      copyDir(dir.name);\n    });\n  }\n\n  function copyDir(dir) {\n    fs.readdir(dir, function (err, items) {\n      if (err) {\n        return onError(err);\n      }\n      items.forEach(function (item) {\n        startCopy(path.join(dir, item));\n      });\n      return cb();\n    });\n  }\n\n  function onLink(link) {\n    var target = link.replace(currentPath, targetPath);\n    fs.readlink(link, function (err, resolvedPath) {\n      if (err) {\n        return onError(err);\n      }\n      checkLink(resolvedPath, target);\n    });\n  }\n\n  function checkLink(resolvedPath, target) {\n    if (dereference) {\n      resolvedPath = path.resolve(basePath, resolvedPath);\n    }\n    isWritable(target, function (writable) {\n      if (writable) {\n        return makeLink(resolvedPath, target);\n      }\n      fs.readlink(target, function (err, targetDest) {\n        if (err) {\n          return onError(err);\n        }\n        if (dereference) {\n          targetDest = path.resolve(basePath, targetDest);\n        }\n        if (targetDest === resolvedPath) {\n          return cb();\n        }\n        return rmFile(target, function () {\n          makeLink(resolvedPath, target);\n        });\n      });\n    });\n  }\n\n  function makeLink(linkPath, target) {\n    fs.symlink(linkPath, target, function (err) {\n      if (err) {\n        return onError(err);\n      }\n      return cb();\n    });\n  }\n\n  function isWritable(path, done) {\n    fs.lstat(path, function (err) {\n      if (err) {\n        if (err.code === 'ENOENT') return done(true);\n        return done(false);\n      }\n      return done(false);\n    });\n  }\n\n  function onError(err) {\n    if (options.stopOnError) {\n      return cback(err);\n    }\n    else if (!errs && options.errs) {\n      errs = fs.createWriteStream(options.errs);\n    }\n    else if (!errs) {\n      errs = [];\n    }\n    if (typeof errs.write === 'undefined') {\n      errs.push(err);\n    }\n    else { \n      errs.write(err.stack + '\\n\\n');\n    }\n    return cb();\n  }\n\n  function cb(skipped) {\n    if (!skipped) running--;\n    finished++;\n    if ((started === finished) && (running === 0)) {\n      if (cback !== undefined ) {\n        return errs ? cback(errs) : cback(null);\n      }\n    }\n  }\n}\n\n\n"]},"metadata":{},"sourceType":"script"}