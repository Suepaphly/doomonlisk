{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"/home/lisk/doomonlisk/src/app/build/react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/home/lisk/doomonlisk/src/app/build/react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _inherits = require(\"/home/lisk/doomonlisk/src/app/build/react-app/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _createSuper = require(\"/home/lisk/doomonlisk/src/app/build/react-app/node_modules/@babel/runtime/helpers/createSuper\");\n\nvar _wrapNativeSuper = require(\"/home/lisk/doomonlisk/src/app/build/react-app/node_modules/@babel/runtime/helpers/wrapNativeSuper\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.LiskValidationError = exports.convertErrorsToLegacyFormat = void 0;\n\nvar errorParamToString = function errorParamToString(param) {\n  var paramAsString = '';\n\n  if (typeof param === 'bigint') {\n    paramAsString = param.toString();\n  } else if (Buffer.isBuffer(param)) {\n    paramAsString = param.toString('hex');\n  } else if (param === undefined) {\n    paramAsString = '';\n  } else {\n    paramAsString = param;\n  }\n\n  return paramAsString;\n};\n\nvar convertErrorsToLegacyFormat = function convertErrorsToLegacyFormat(errors) {\n  return errors.map(function (e) {\n    var _a, _b;\n\n    var err = e;\n    err.dataPath = (_a = err.dataPath) !== null && _a !== void 0 ? _a : instancePathToLegacyDataPath((_b = err.instancePath) !== null && _b !== void 0 ? _b : '');\n    delete err.instancePath;\n    return err;\n  });\n};\n\nexports.convertErrorsToLegacyFormat = convertErrorsToLegacyFormat;\n\nvar instancePathToLegacyDataPath = function instancePathToLegacyDataPath(path) {\n  return path.split('/').join('.');\n};\n\nvar errorFormatterMap = {\n  type: function type(error) {\n    var _a;\n\n    return \"Property '\".concat((_a = error.dataPath) !== null && _a !== void 0 ? _a : '', \"' should be of type '\").concat(errorParamToString(error.params.type), \"'\");\n  },\n  additionalProperties: function additionalProperties(error) {\n    var _a;\n\n    return \"Property '\".concat((_a = error.dataPath) !== null && _a !== void 0 ? _a : '', \"' has extraneous property '\").concat(errorParamToString(error.params.additionalProperty), \"'\");\n  },\n  minLength: function minLength(error) {\n    var _a;\n\n    return \"Property '\".concat((_a = error.dataPath) !== null && _a !== void 0 ? _a : '', \"' \").concat(errorParamToString(error.message));\n  },\n  maxLength: function maxLength(error) {\n    var _a;\n\n    return \"Property '\".concat((_a = error.dataPath) !== null && _a !== void 0 ? _a : '', \"' \").concat(errorParamToString(error.message));\n  },\n  format: function format(error) {\n    var _a;\n\n    return \"Property '\".concat((_a = error.dataPath) !== null && _a !== void 0 ? _a : '', \"' \").concat(errorParamToString(error.message));\n  },\n  required: function required(error) {\n    return \"Missing property, \".concat(errorParamToString(error.message));\n  },\n  dataType: function dataType(error) {\n    var _a;\n\n    return \"Property '\".concat((_a = error.dataPath) !== null && _a !== void 0 ? _a : '', \"' \").concat(errorParamToString(error.message));\n  }\n};\n\nvar defaultErrorFormatter = function defaultErrorFormatter(error) {\n  var _a;\n\n  return (_a = error.message) !== null && _a !== void 0 ? _a : 'Unspecified validator error';\n};\n\nvar errorFormatter = function errorFormatter(error) {\n  var _a;\n\n  return ((_a = errorFormatterMap[error.keyword]) !== null && _a !== void 0 ? _a : defaultErrorFormatter)(error);\n};\n\nvar LiskValidationError = /*#__PURE__*/function (_Error) {\n  _inherits(LiskValidationError, _Error);\n\n  var _super = _createSuper(LiskValidationError);\n\n  function LiskValidationError(errors) {\n    var _this;\n\n    _classCallCheck(this, LiskValidationError);\n\n    _this = _super.call(this);\n    _this.errors = exports.convertErrorsToLegacyFormat(errors);\n    _this.message = \"Lisk validator found \".concat(_this.errors.length, \" error[s]:\\n\").concat(_this._compileErrors().join('\\n'));\n    return _this;\n  }\n\n  _createClass(LiskValidationError, [{\n    key: \"_compileErrors\",\n    value: function _compileErrors() {\n      var errorMsgs = this.errors.map(errorFormatter);\n      return errorMsgs;\n    }\n  }]);\n\n  return LiskValidationError;\n}( /*#__PURE__*/_wrapNativeSuper(Error));\n\nexports.LiskValidationError = LiskValidationError;","map":{"version":3,"sources":["../src/errors.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.LiskValidationError = exports.convertErrorsToLegacyFormat = void 0;\nconst errorParamToString = (param) => {\n    let paramAsString = '';\n    if (typeof param === 'bigint') {\n        paramAsString = param.toString();\n    }\n    else if (Buffer.isBuffer(param)) {\n        paramAsString = param.toString('hex');\n    }\n    else if (param === undefined) {\n        paramAsString = '';\n    }\n    else {\n        paramAsString = param;\n    }\n    return paramAsString;\n};\nconst convertErrorsToLegacyFormat = (errors) => errors.map(e => {\n    var _a, _b;\n    const err = e;\n    err.dataPath = (_a = err.dataPath) !== null && _a !== void 0 ? _a : instancePathToLegacyDataPath((_b = err.instancePath) !== null && _b !== void 0 ? _b : '');\n    delete err.instancePath;\n    return err;\n});\nexports.convertErrorsToLegacyFormat = convertErrorsToLegacyFormat;\nconst instancePathToLegacyDataPath = (path) => path.split('/').join('.');\nconst errorFormatterMap = {\n    type: error => {\n        var _a;\n        return `Property '${(_a = error.dataPath) !== null && _a !== void 0 ? _a : ''}' should be of type '${errorParamToString(error.params.type)}'`;\n    },\n    additionalProperties: error => {\n        var _a;\n        return `Property '${(_a = error.dataPath) !== null && _a !== void 0 ? _a : ''}' has extraneous property '${errorParamToString(error.params.additionalProperty)}'`;\n    },\n    minLength: error => { var _a; return `Property '${(_a = error.dataPath) !== null && _a !== void 0 ? _a : ''}' ${errorParamToString(error.message)}`; },\n    maxLength: error => { var _a; return `Property '${(_a = error.dataPath) !== null && _a !== void 0 ? _a : ''}' ${errorParamToString(error.message)}`; },\n    format: error => { var _a; return `Property '${(_a = error.dataPath) !== null && _a !== void 0 ? _a : ''}' ${errorParamToString(error.message)}`; },\n    required: error => `Missing property, ${errorParamToString(error.message)}`,\n    dataType: error => { var _a; return `Property '${(_a = error.dataPath) !== null && _a !== void 0 ? _a : ''}' ${errorParamToString(error.message)}`; },\n};\nconst defaultErrorFormatter = error => { var _a; return (_a = error.message) !== null && _a !== void 0 ? _a : 'Unspecified validator error'; };\nconst errorFormatter = (error) => { var _a; return ((_a = errorFormatterMap[error.keyword]) !== null && _a !== void 0 ? _a : defaultErrorFormatter)(error); };\nclass LiskValidationError extends Error {\n    constructor(errors) {\n        super();\n        this.errors = exports.convertErrorsToLegacyFormat(errors);\n        this.message = `Lisk validator found ${this.errors.length} error[s]:\\n${this._compileErrors().join('\\n')}`;\n    }\n    _compileErrors() {\n        const errorMsgs = this.errors.map(errorFormatter);\n        return errorMsgs;\n    }\n}\nexports.LiskValidationError = LiskValidationError;\n//# sourceMappingURL=errors.js.map"]},"metadata":{},"sourceType":"script"}