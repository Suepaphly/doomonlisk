{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"/home/lisk/doomonlisk/src/app/build/react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _asyncToGenerator = require(\"/home/lisk/doomonlisk/src/app/build/react-app/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nvar _classCallCheck = require(\"/home/lisk/doomonlisk/src/app/build/react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/home/lisk/doomonlisk/src/app/build/react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.APIClient = void 0;\n\nvar node_1 = require(\"./node\");\n\nvar account_1 = require(\"./account\");\n\nvar block_1 = require(\"./block\");\n\nvar transaction_1 = require(\"./transaction\");\n\nvar APIClient = /*#__PURE__*/function () {\n  function APIClient(channel) {\n    _classCallCheck(this, APIClient);\n\n    this._channel = channel;\n  }\n\n  _createClass(APIClient, [{\n    key: \"init\",\n    value: function () {\n      var _init = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this._channel.invoke('app:getSchema');\n\n              case 2:\n                this._schemas = _context.sent;\n                this._node = new node_1.Node(this._channel);\n                this._account = new account_1.Account(this._channel, this._schemas);\n                this._block = new block_1.Block(this._channel, this._schemas);\n                _context.next = 8;\n                return this._node.getNodeInfo();\n\n              case 8:\n                this._nodeInfo = _context.sent;\n                this._transaction = new transaction_1.Transaction(this._channel, this._schemas, this._nodeInfo);\n\n              case 10:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function init() {\n        return _init.apply(this, arguments);\n      }\n\n      return init;\n    }()\n  }, {\n    key: \"disconnect\",\n    value: function () {\n      var _disconnect = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                return _context2.abrupt(\"return\", this._channel.disconnect());\n\n              case 1:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function disconnect() {\n        return _disconnect.apply(this, arguments);\n      }\n\n      return disconnect;\n    }()\n  }, {\n    key: \"invoke\",\n    value: function () {\n      var _invoke = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(actionName, params) {\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                return _context3.abrupt(\"return\", this._channel.invoke(actionName, params));\n\n              case 1:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function invoke(_x, _x2) {\n        return _invoke.apply(this, arguments);\n      }\n\n      return invoke;\n    }()\n  }, {\n    key: \"subscribe\",\n    value: function subscribe(eventName, cb) {\n      this._channel.subscribe(eventName, cb);\n    }\n  }, {\n    key: \"schemas\",\n    get: function get() {\n      return this._schemas;\n    }\n  }, {\n    key: \"node\",\n    get: function get() {\n      return this._node;\n    }\n  }, {\n    key: \"account\",\n    get: function get() {\n      return this._account;\n    }\n  }, {\n    key: \"block\",\n    get: function get() {\n      return this._block;\n    }\n  }, {\n    key: \"transaction\",\n    get: function get() {\n      return this._transaction;\n    }\n  }]);\n\n  return APIClient;\n}();\n\nexports.APIClient = APIClient;","map":{"version":3,"sources":["../src/api_client.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;AAeA,IAAA,MAAA,GAAA,OAAA,CAAA,QAAA,CAAA;;AACA,IAAA,SAAA,GAAA,OAAA,CAAA,WAAA,CAAA;;AACA,IAAA,OAAA,GAAA,OAAA,CAAA,SAAA,CAAA;;AACA,IAAA,aAAA,GAAA,OAAA,CAAA,eAAA,CAAA;;IAEa,S;AASZ,qBAAmB,OAAnB,EAAmC;AAAA;;AAClC,SAAK,QAAL,GAAgB,OAAhB;AACA;;;;;2EAEM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACgB,KAAK,QAAL,CAAc,MAAd,CAAwC,eAAxC,CADhB;;AAAA;AACN,qBAAK,QADC;AAEN,qBAAK,KAAL,GAAa,IAAI,MAAA,CAAA,IAAJ,CAAS,KAAK,QAAd,CAAb;AACA,qBAAK,QAAL,GAAgB,IAAI,SAAA,CAAA,OAAJ,CAAY,KAAK,QAAjB,EAA2B,KAAK,QAAhC,CAAhB;AACA,qBAAK,MAAL,GAAc,IAAI,OAAA,CAAA,KAAJ,CAAU,KAAK,QAAf,EAAyB,KAAK,QAA9B,CAAd;AAJM;AAAA,uBAKiB,KAAK,KAAL,CAAW,WAAX,EALjB;;AAAA;AAKN,qBAAK,SALC;AAMN,qBAAK,YAAL,GAAoB,IAAI,aAAA,CAAA,WAAJ,CAAgB,KAAK,QAArB,EAA+B,KAAK,QAApC,EAA8C,KAAK,SAAnD,CAApB;;AANM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;;;;;iFASA;AAAA;AAAA;AAAA;AAAA;AAAA,kDACC,KAAK,QAAL,CAAc,UAAd,EADD;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;;;;;6EAIA,kBACN,UADM,EAEN,MAFM;AAAA;AAAA;AAAA;AAAA;AAAA,kDAIC,KAAK,QAAL,CAAc,MAAd,CAAqB,UAArB,EAAiC,MAAjC,CAJD;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;;;;WAOA,mBAAU,SAAV,EAA6B,EAA7B,EAA8C;AACpD,WAAK,QAAL,CAAc,SAAd,CAAwB,SAAxB,EAAmC,EAAnC;AACA;;;SAED,eAAkB;AACjB,aAAO,KAAK,QAAZ;AACA;;;SAED,eAAe;AACd,aAAO,KAAK,KAAZ;AACA;;;SAED,eAAkB;AACjB,aAAO,KAAK,QAAZ;AACA;;;SAED,eAAgB;AACf,aAAO,KAAK,MAAZ;AACA;;;SAED,eAAsB;AACrB,aAAO,KAAK,YAAZ;AACA;;;;;;AAvDF,OAAA,CAAA,SAAA,GAAA,SAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.APIClient = void 0;\nconst node_1 = require(\"./node\");\nconst account_1 = require(\"./account\");\nconst block_1 = require(\"./block\");\nconst transaction_1 = require(\"./transaction\");\nclass APIClient {\n    constructor(channel) {\n        this._channel = channel;\n    }\n    async init() {\n        this._schemas = await this._channel.invoke('app:getSchema');\n        this._node = new node_1.Node(this._channel);\n        this._account = new account_1.Account(this._channel, this._schemas);\n        this._block = new block_1.Block(this._channel, this._schemas);\n        this._nodeInfo = await this._node.getNodeInfo();\n        this._transaction = new transaction_1.Transaction(this._channel, this._schemas, this._nodeInfo);\n    }\n    async disconnect() {\n        return this._channel.disconnect();\n    }\n    async invoke(actionName, params) {\n        return this._channel.invoke(actionName, params);\n    }\n    subscribe(eventName, cb) {\n        this._channel.subscribe(eventName, cb);\n    }\n    get schemas() {\n        return this._schemas;\n    }\n    get node() {\n        return this._node;\n    }\n    get account() {\n        return this._account;\n    }\n    get block() {\n        return this._block;\n    }\n    get transaction() {\n        return this._transaction;\n    }\n}\nexports.APIClient = APIClient;\n//# sourceMappingURL=api_client.js.map"]},"metadata":{},"sourceType":"script"}