{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"/home/lisk/doomonlisk/src/app/build/react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/home/lisk/doomonlisk/src/app/build/react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.P2PRequest = void 0;\n\nvar constants_1 = require(\"./constants\");\n\nvar errors_1 = require(\"./errors\");\n\nvar P2PRequest = /*#__PURE__*/function () {\n  function P2PRequest(options, respondCallback) {\n    var _this = this;\n\n    _classCallCheck(this, P2PRequest);\n\n    this._procedure = options.procedure;\n    this._data = this._getBufferData(options);\n    this._peerId = options.id;\n    this._rate = options.rate;\n    options.productivity.requestCounter += 1;\n\n    this._respondCallback = function (responseError, responsePacket) {\n      if (_this._wasResponseSent) {\n        throw new errors_1.RPCResponseAlreadySentError(\"A response has already been sent for the request procedure <<\".concat(options.procedure, \">>\"));\n      }\n\n      _this._wasResponseSent = true;\n\n      if (!responseError && responsePacket) {\n        options.productivity.lastResponded = Date.now();\n        options.productivity.responseCounter += 1;\n      }\n\n      options.productivity.responseRate = options.productivity.responseCounter / options.productivity.requestCounter;\n      respondCallback(responseError, responsePacket);\n    };\n\n    this._wasResponseSent = false;\n  }\n\n  _createClass(P2PRequest, [{\n    key: \"procedure\",\n    get: function get() {\n      return this._procedure;\n    }\n  }, {\n    key: \"data\",\n    get: function get() {\n      return this._data;\n    }\n  }, {\n    key: \"rate\",\n    get: function get() {\n      return this._rate;\n    }\n  }, {\n    key: \"peerId\",\n    get: function get() {\n      return this._peerId;\n    }\n  }, {\n    key: \"wasResponseSent\",\n    get: function get() {\n      return this._wasResponseSent;\n    }\n  }, {\n    key: \"end\",\n    value: function end(responseData) {\n      var data = this._getBase64Data(responseData);\n\n      var responsePacket = {\n        data: data,\n        peerId: this.peerId\n      };\n\n      this._respondCallback(undefined, responsePacket);\n    }\n  }, {\n    key: \"error\",\n    value: function error(responseError) {\n      this._respondCallback(responseError);\n    }\n  }, {\n    key: \"_getBase64Data\",\n    value: function _getBase64Data(data) {\n      if (!data) {\n        return undefined;\n      }\n\n      if (Buffer.isBuffer(data)) {\n        return data.toString(constants_1.DEFAULT_MESSAGE_ENCODING_FORMAT);\n      }\n\n      return Buffer.from(JSON.stringify(data), 'utf8').toString(constants_1.DEFAULT_MESSAGE_ENCODING_FORMAT);\n    }\n  }, {\n    key: \"_getBufferData\",\n    value: function _getBufferData(options) {\n      return typeof options.data === 'string' ? Buffer.from(options.data, constants_1.DEFAULT_MESSAGE_ENCODING_FORMAT) : undefined;\n    }\n  }]);\n\n  return P2PRequest;\n}();\n\nexports.P2PRequest = P2PRequest;","map":{"version":3,"sources":["../src/p2p_request.ts"],"names":[],"mappings":";;;;;;;;;;;AAcA,IAAA,WAAA,GAAA,OAAA,CAAA,aAAA,CAAA;;AACA,IAAA,QAAA,GAAA,OAAA,CAAA,UAAA,CAAA;;IAGa,U;AAWZ,sBACC,OADD,EAEC,eAFD,EAEyE;AAAA;;AAAA;;AAExE,SAAK,UAAL,GAAkB,OAAO,CAAC,SAA1B;AACA,SAAK,KAAL,GAAa,KAAK,cAAL,CAAoB,OAApB,CAAb;AACA,SAAK,OAAL,GAAe,OAAO,CAAC,EAAvB;AACA,SAAK,KAAL,GAAa,OAAO,CAAC,IAArB;AAEA,IAAA,OAAO,CAAC,YAAR,CAAqB,cAArB,IAAuC,CAAvC;;AACA,SAAK,gBAAL,GAAwB,UAAC,aAAD,EAAwB,cAAxB,EAAoE;AAC3F,UAAI,KAAI,CAAC,gBAAT,EAA2B;AAC1B,cAAM,IAAI,QAAA,CAAA,2BAAJ,wEAC2D,OAAO,CAAC,SADnE,QAAN;AAGA;;AACD,MAAA,KAAI,CAAC,gBAAL,GAAwB,IAAxB;;AAEA,UAAI,CAAC,aAAD,IAAkB,cAAtB,EAAsC;AAErC,QAAA,OAAO,CAAC,YAAR,CAAqB,aAArB,GAAqC,IAAI,CAAC,GAAL,EAArC;AAEA,QAAA,OAAO,CAAC,YAAR,CAAqB,eAArB,IAAwC,CAAxC;AACA;;AAED,MAAA,OAAO,CAAC,YAAR,CAAqB,YAArB,GACC,OAAO,CAAC,YAAR,CAAqB,eAArB,GAAuC,OAAO,CAAC,YAAR,CAAqB,cAD7D;AAGA,MAAA,eAAe,CAAC,aAAD,EAAgB,cAAhB,CAAf;AACA,KAnBD;;AAoBA,SAAK,gBAAL,GAAwB,KAAxB;AACA;;;;SAED,eAAoB;AACnB,aAAO,KAAK,UAAZ;AACA;;;SAED,eAAe;AACd,aAAO,KAAK,KAAZ;AACA;;;SAED,eAAe;AACd,aAAO,KAAK,KAAZ;AACA;;;SAED,eAAiB;AAChB,aAAO,KAAK,OAAZ;AACA;;;SAED,eAA0B;AACzB,aAAO,KAAK,gBAAZ;AACA;;;WAEM,aAAI,YAAJ,EAA0B;AAChC,UAAM,IAAI,GAAG,KAAK,cAAL,CAAoB,YAApB,CAAb;;AACA,UAAM,cAAc,GAAsB;AACzC,QAAA,IAAI,EAAJ,IADyC;AAEzC,QAAA,MAAM,EAAE,KAAK;AAF4B,OAA1C;;AAIA,WAAK,gBAAL,CAAsB,SAAtB,EAAiC,cAAjC;AACA;;;WAEM,eAAM,aAAN,EAA0B;AAChC,WAAK,gBAAL,CAAsB,aAAtB;AACA;;;WAGO,wBAAe,IAAf,EAA4B;AACnC,UAAI,CAAC,IAAL,EAAW;AACV,eAAO,SAAP;AACA;;AAED,UAAI,MAAM,CAAC,QAAP,CAAgB,IAAhB,CAAJ,EAA2B;AAC1B,eAAO,IAAI,CAAC,QAAL,CAAc,WAAA,CAAA,+BAAd,CAAP;AACA;;AAED,aAAO,MAAM,CAAC,IAAP,CAAY,IAAI,CAAC,SAAL,CAAe,IAAf,CAAZ,EAAkC,MAAlC,EAA0C,QAA1C,CAAmD,WAAA,CAAA,+BAAnD,CAAP;AACA;;;WAGO,wBAAe,OAAf,EAAsC;AAC7C,aAAO,OAAO,OAAO,CAAC,IAAf,KAAwB,QAAxB,GACJ,MAAM,CAAC,IAAP,CAAY,OAAO,CAAC,IAApB,EAA0B,WAAA,CAAA,+BAA1B,CADI,GAEJ,SAFH;AAGA;;;;;;AA/FF,OAAA,CAAA,UAAA,GAAA,UAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.P2PRequest = void 0;\nconst constants_1 = require(\"./constants\");\nconst errors_1 = require(\"./errors\");\nclass P2PRequest {\n    constructor(options, respondCallback) {\n        this._procedure = options.procedure;\n        this._data = this._getBufferData(options);\n        this._peerId = options.id;\n        this._rate = options.rate;\n        options.productivity.requestCounter += 1;\n        this._respondCallback = (responseError, responsePacket) => {\n            if (this._wasResponseSent) {\n                throw new errors_1.RPCResponseAlreadySentError(`A response has already been sent for the request procedure <<${options.procedure}>>`);\n            }\n            this._wasResponseSent = true;\n            if (!responseError && responsePacket) {\n                options.productivity.lastResponded = Date.now();\n                options.productivity.responseCounter += 1;\n            }\n            options.productivity.responseRate =\n                options.productivity.responseCounter / options.productivity.requestCounter;\n            respondCallback(responseError, responsePacket);\n        };\n        this._wasResponseSent = false;\n    }\n    get procedure() {\n        return this._procedure;\n    }\n    get data() {\n        return this._data;\n    }\n    get rate() {\n        return this._rate;\n    }\n    get peerId() {\n        return this._peerId;\n    }\n    get wasResponseSent() {\n        return this._wasResponseSent;\n    }\n    end(responseData) {\n        const data = this._getBase64Data(responseData);\n        const responsePacket = {\n            data,\n            peerId: this.peerId,\n        };\n        this._respondCallback(undefined, responsePacket);\n    }\n    error(responseError) {\n        this._respondCallback(responseError);\n    }\n    _getBase64Data(data) {\n        if (!data) {\n            return undefined;\n        }\n        if (Buffer.isBuffer(data)) {\n            return data.toString(constants_1.DEFAULT_MESSAGE_ENCODING_FORMAT);\n        }\n        return Buffer.from(JSON.stringify(data), 'utf8').toString(constants_1.DEFAULT_MESSAGE_ENCODING_FORMAT);\n    }\n    _getBufferData(options) {\n        return typeof options.data === 'string'\n            ? Buffer.from(options.data, constants_1.DEFAULT_MESSAGE_ENCODING_FORMAT)\n            : undefined;\n    }\n}\nexports.P2PRequest = P2PRequest;\n//# sourceMappingURL=p2p_request.js.map"]},"metadata":{},"sourceType":"script"}