{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"/home/lisk/doomonlisk/src/app/build/react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _asyncToGenerator = require(\"/home/lisk/doomonlisk/src/app/build/react-app/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nvar _classCallCheck = require(\"/home/lisk/doomonlisk/src/app/build/react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/home/lisk/doomonlisk/src/app/build/react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _inherits = require(\"/home/lisk/doomonlisk/src/app/build/react-app/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _createSuper = require(\"/home/lisk/doomonlisk/src/app/build/react-app/node_modules/@babel/runtime/helpers/createSuper\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.RegisterTransactionAsset = void 0;\n\nvar base_asset_1 = require(\"../../base_asset\");\n\nvar errors_1 = require(\"../../../errors\");\n\nvar utils_1 = require(\"../utils\");\n\nvar data_access_1 = require(\"../data_access\");\n\nvar RegisterTransactionAsset = /*#__PURE__*/function (_base_asset_1$BaseAss) {\n  _inherits(RegisterTransactionAsset, _base_asset_1$BaseAss);\n\n  var _super = _createSuper(RegisterTransactionAsset);\n\n  function RegisterTransactionAsset() {\n    var _this;\n\n    _classCallCheck(this, RegisterTransactionAsset);\n\n    _this = _super.apply(this, arguments);\n    _this.name = 'registerDelegate';\n    _this.id = 0;\n    _this.schema = {\n      $id: 'lisk/dpos/register',\n      type: 'object',\n      required: ['username'],\n      properties: {\n        username: {\n          dataType: 'string',\n          fieldNumber: 1,\n          minLength: 1,\n          maxLength: 20\n        }\n      }\n    };\n    return _this;\n  }\n\n  _createClass(RegisterTransactionAsset, [{\n    key: \"validate\",\n    value: function validate(_ref) {\n      var asset = _ref.asset;\n\n      if (!utils_1.isUsername(asset.username)) {\n        throw new errors_1.ValidationError('The username is in unsupported format', asset.username);\n      }\n    }\n  }, {\n    key: \"apply\",\n    value: function () {\n      var _apply = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref2) {\n        var asset, transaction, stateStore, sender, usernames, usernameExists;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                asset = _ref2.asset, transaction = _ref2.transaction, stateStore = _ref2.stateStore;\n                _context.next = 3;\n                return stateStore.account.get(transaction.senderAddress);\n\n              case 3:\n                sender = _context.sent;\n\n                if (!(sender.dpos.delegate.username !== '')) {\n                  _context.next = 6;\n                  break;\n                }\n\n                throw new Error('Account is already a delegate.');\n\n              case 6:\n                _context.next = 8;\n                return data_access_1.getRegisteredDelegates(stateStore);\n\n              case 8:\n                usernames = _context.sent;\n                usernameExists = usernames.registeredDelegates.find(function (delegate) {\n                  return delegate.username === asset.username;\n                });\n\n                if (usernameExists) {\n                  _context.next = 14;\n                  break;\n                }\n\n                usernames.registeredDelegates.push({\n                  username: asset.username,\n                  address: transaction.senderAddress\n                });\n                _context.next = 14;\n                return data_access_1.setRegisteredDelegates(stateStore, usernames);\n\n              case 14:\n                if (!usernameExists) {\n                  _context.next = 16;\n                  break;\n                }\n\n                throw new Error(\"Username \".concat(asset.username, \" is already registered.\"));\n\n              case 16:\n                sender.dpos.delegate.username = asset.username;\n                sender.dpos.delegate.lastForgedHeight = stateStore.chain.lastBlockHeaders[0].height + 1;\n                _context.next = 20;\n                return stateStore.account.set(sender.address, sender);\n\n              case 20:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function apply(_x) {\n        return _apply.apply(this, arguments);\n      }\n\n      return apply;\n    }()\n  }]);\n\n  return RegisterTransactionAsset;\n}(base_asset_1.BaseAsset);\n\nexports.RegisterTransactionAsset = RegisterTransactionAsset;","map":{"version":3,"sources":["../../../../src/modules/dpos/transaction_assets/register_transaction_asset.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAcA,IAAA,YAAA,GAAA,OAAA,CAAA,kBAAA,CAAA;;AAEA,IAAA,QAAA,GAAA,OAAA,CAAA,iBAAA,CAAA;;AACA,IAAA,OAAA,GAAA,OAAA,CAAA,UAAA,CAAA;;AAEA,IAAA,aAAA,GAAA,OAAA,CAAA,gBAAA,CAAA;;IAEa,wB;;;;;AAAb,sCAAA;AAAA;;AAAA;;;AACQ,UAAA,IAAA,GAAO,kBAAP;AACA,UAAA,EAAA,GAAK,CAAL;AACA,UAAA,MAAA,GAAS;AACf,MAAA,GAAG,EAAE,oBADU;AAEf,MAAA,IAAI,EAAE,QAFS;AAGf,MAAA,QAAQ,EAAE,CAAC,UAAD,CAHK;AAIf,MAAA,UAAU,EAAE;AACX,QAAA,QAAQ,EAAE;AACT,UAAA,QAAQ,EAAE,QADD;AAET,UAAA,WAAW,EAAE,CAFJ;AAGT,UAAA,SAAS,EAAE,CAHF;AAIT,UAAA,SAAS,EAAE;AAJF;AADC;AAJG,KAAT;AAHR;AAwDC;;;;WAvCO,wBAAyE;AAAA,UAA9D,KAA8D,QAA9D,KAA8D;;AAC/E,UAAI,CAAC,OAAA,CAAA,UAAA,CAAW,KAAK,CAAC,QAAjB,CAAL,EAAiC;AAChC,cAAM,IAAI,QAAA,CAAA,eAAJ,CAAoB,uCAApB,EAA6D,KAAK,CAAC,QAAnE,CAAN;AACA;AACD;;;;4EAEM;AAAA;AAAA;AAAA;AAAA;AAAA;AACN,gBAAA,KADM,SACN,KADM,EAEN,WAFM,SAEN,WAFM,EAGN,UAHM,SAGN,UAHM;AAAA;AAAA,uBAKe,UAAU,CAAC,OAAX,CAAmB,GAAnB,CAAyC,WAAW,CAAC,aAArD,CALf;;AAAA;AAKA,gBAAA,MALA;;AAAA,sBAOF,MAAM,CAAC,IAAP,CAAY,QAAZ,CAAqB,QAArB,KAAkC,EAPhC;AAAA;AAAA;AAAA;;AAAA,sBAQC,IAAI,KAAJ,CAAU,gCAAV,CARD;;AAAA;AAAA;AAAA,uBAWkB,aAAA,CAAA,sBAAA,CAAuB,UAAvB,CAXlB;;AAAA;AAWA,gBAAA,SAXA;AAYA,gBAAA,cAZA,GAYiB,SAAS,CAAC,mBAAV,CAA8B,IAA9B,CACtB,UAAA,QAAQ;AAAA,yBAAI,QAAQ,CAAC,QAAT,KAAsB,KAAK,CAAC,QAAhC;AAAA,iBADc,CAZjB;;AAAA,oBAgBD,cAhBC;AAAA;AAAA;AAAA;;AAiBL,gBAAA,SAAS,CAAC,mBAAV,CAA8B,IAA9B,CAAmC;AAClC,kBAAA,QAAQ,EAAE,KAAK,CAAC,QADkB;AAElC,kBAAA,OAAO,EAAE,WAAW,CAAC;AAFa,iBAAnC;AAjBK;AAAA,uBAsBC,aAAA,CAAA,sBAAA,CAAuB,UAAvB,EAAmC,SAAnC,CAtBD;;AAAA;AAAA,qBAyBF,cAzBE;AAAA;AAAA;AAAA;;AAAA,sBA0BC,IAAI,KAAJ,oBAAsB,KAAK,CAAC,QAA5B,6BA1BD;;AAAA;AA6BN,gBAAA,MAAM,CAAC,IAAP,CAAY,QAAZ,CAAqB,QAArB,GAAgC,KAAK,CAAC,QAAtC;AACA,gBAAA,MAAM,CAAC,IAAP,CAAY,QAAZ,CAAqB,gBAArB,GAAwC,UAAU,CAAC,KAAX,CAAiB,gBAAjB,CAAkC,CAAlC,EAAqC,MAArC,GAA8C,CAAtF;AA9BM;AAAA,uBA+BA,UAAU,CAAC,OAAX,CAAmB,GAAnB,CAAyC,MAAM,CAAC,OAAhD,EAAyD,MAAzD,CA/BA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;;;;;EAvBsC,YAAA,CAAA,S;;AAA9C,OAAA,CAAA,wBAAA,GAAA,wBAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RegisterTransactionAsset = void 0;\nconst base_asset_1 = require(\"../../base_asset\");\nconst errors_1 = require(\"../../../errors\");\nconst utils_1 = require(\"../utils\");\nconst data_access_1 = require(\"../data_access\");\nclass RegisterTransactionAsset extends base_asset_1.BaseAsset {\n    constructor() {\n        super(...arguments);\n        this.name = 'registerDelegate';\n        this.id = 0;\n        this.schema = {\n            $id: 'lisk/dpos/register',\n            type: 'object',\n            required: ['username'],\n            properties: {\n                username: {\n                    dataType: 'string',\n                    fieldNumber: 1,\n                    minLength: 1,\n                    maxLength: 20,\n                },\n            },\n        };\n    }\n    validate({ asset }) {\n        if (!utils_1.isUsername(asset.username)) {\n            throw new errors_1.ValidationError('The username is in unsupported format', asset.username);\n        }\n    }\n    async apply({ asset, transaction, stateStore, }) {\n        const sender = await stateStore.account.get(transaction.senderAddress);\n        if (sender.dpos.delegate.username !== '') {\n            throw new Error('Account is already a delegate.');\n        }\n        const usernames = await data_access_1.getRegisteredDelegates(stateStore);\n        const usernameExists = usernames.registeredDelegates.find(delegate => delegate.username === asset.username);\n        if (!usernameExists) {\n            usernames.registeredDelegates.push({\n                username: asset.username,\n                address: transaction.senderAddress,\n            });\n            await data_access_1.setRegisteredDelegates(stateStore, usernames);\n        }\n        if (usernameExists) {\n            throw new Error(`Username ${asset.username} is already registered.`);\n        }\n        sender.dpos.delegate.username = asset.username;\n        sender.dpos.delegate.lastForgedHeight = stateStore.chain.lastBlockHeaders[0].height + 1;\n        await stateStore.account.set(sender.address, sender);\n    }\n}\nexports.RegisterTransactionAsset = RegisterTransactionAsset;\n//# sourceMappingURL=register_transaction_asset.js.map"]},"metadata":{},"sourceType":"script"}